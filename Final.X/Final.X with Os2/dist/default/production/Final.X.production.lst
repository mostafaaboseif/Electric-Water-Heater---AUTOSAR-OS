

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Thu Jul 16 19:54:30 2020

Microchip MPLAB XC8 C Compiler v2.20 (Pro license) build 20200408173844 Og9s 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	plic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     6                           	psect	idataBANK3,global,class=CODE,delta=2,noexec
     7                           	psect	strings,global,class=STRING,delta=2,noexec
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    13                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,noexec
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    15                           	psect	inittext,global,class=CODE,delta=2
    16                           	psect	clrtext,global,class=CODE,delta=2
    17                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    18                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    19                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    20                           	psect	maintext,global,class=CODE,split=1,delta=2
    21                           	psect	text1,local,class=CODE,merge=1,delta=2
    22                           	psect	text5,local,class=CODE,merge=1,delta=2
    23                           	psect	text6,local,class=CODE,merge=1,delta=2
    24                           	psect	text7,local,class=CODE,merge=1,delta=2
    25                           	psect	text24,local,class=CODE,merge=1,delta=2
    26                           	psect	text27,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	text29,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text33,local,class=CODE,merge=1,delta=2
    29                           	psect	text35,local,class=CODE,merge=1,delta=2
    30                           	psect	text37,local,class=CODE,merge=1,delta=2,group=1
    31                           	psect	text39,local,class=CODE,merge=1,delta=2
    32                           	psect	text41,local,class=CODE,merge=1,delta=2
    33                           	psect	text42,local,class=CODE,merge=1,delta=2
    34                           	psect	text43,local,class=CODE,merge=1,delta=2
    35                           	psect	intentry,global,class=CODE,delta=2
    36                           	psect	text44,local,class=CODE,merge=1,delta=2
    37                           	psect	text45,local,class=CODE,merge=1,delta=2
    38                           	psect	text46,local,class=CODE,merge=1,delta=2
    39                           	psect	text47,local,class=CODE,merge=1,delta=2
    40                           	psect	text48,local,class=CODE,merge=1,delta=2
    41                           	psect	text52,local,class=CODE,merge=1,delta=2
    42                           	psect	text53,local,class=CODE,merge=1,delta=2
    43                           	psect	text54,local,class=CODE,merge=1,delta=2
    44                           	psect	text73,local,class=CODE,merge=1,delta=2
    45                           	psect	functab,global,class=ENTRY,delta=2
    46                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    47                           	psect	pa_nodes0,global,class=CODE,delta=2
    48                           	dabs	1,0x7E,2
    49  0000                     
    50                           ; Version 2.20
    51                           ; Generated 12/02/2020 GMT
    52                           ; 
    53                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    54                           ; All rights reserved.
    55                           ; 
    56                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    57                           ; 
    58                           ; Redistribution and use in source and binary forms, with or without modification, are
    59                           ; permitted provided that the following conditions are met:
    60                           ; 
    61                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    62                           ;        conditions and the following disclaimer.
    63                           ; 
    64                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    65                           ;        of conditions and the following disclaimer in the documentation and/or other
    66                           ;        materials provided with the distribution.
    67                           ; 
    68                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    69                           ;        software without specific prior written permission.
    70                           ; 
    71                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    72                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    73                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    74                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    75                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    76                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    77                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    78                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    79                           ; 
    80                           ; 
    81                           ; Code-generator required, PIC16F877A Definitions
    82                           ; 
    83                           ; SFR Addresses
    84  0000                     	;# 
    85  0001                     	;# 
    86  0002                     	;# 
    87  0003                     	;# 
    88  0004                     	;# 
    89  0005                     	;# 
    90  0006                     	;# 
    91  0007                     	;# 
    92  0008                     	;# 
    93  0009                     	;# 
    94  000A                     	;# 
    95  000B                     	;# 
    96  000C                     	;# 
    97  000D                     	;# 
    98  000E                     	;# 
    99  000E                     	;# 
   100  000F                     	;# 
   101  0010                     	;# 
   102  0011                     	;# 
   103  0012                     	;# 
   104  0013                     	;# 
   105  0014                     	;# 
   106  0015                     	;# 
   107  0015                     	;# 
   108  0016                     	;# 
   109  0017                     	;# 
   110  0018                     	;# 
   111  0019                     	;# 
   112  001A                     	;# 
   113  001B                     	;# 
   114  001B                     	;# 
   115  001C                     	;# 
   116  001D                     	;# 
   117  001E                     	;# 
   118  001F                     	;# 
   119  0081                     	;# 
   120  0085                     	;# 
   121  0086                     	;# 
   122  0087                     	;# 
   123  0088                     	;# 
   124  0089                     	;# 
   125  008C                     	;# 
   126  008D                     	;# 
   127  008E                     	;# 
   128  0091                     	;# 
   129  0092                     	;# 
   130  0093                     	;# 
   131  0094                     	;# 
   132  0098                     	;# 
   133  0099                     	;# 
   134  009C                     	;# 
   135  009D                     	;# 
   136  009E                     	;# 
   137  009F                     	;# 
   138  010C                     	;# 
   139  010D                     	;# 
   140  010E                     	;# 
   141  010F                     	;# 
   142  018C                     	;# 
   143  018D                     	;# 
   144  0000                     	;# 
   145  0001                     	;# 
   146  0002                     	;# 
   147  0003                     	;# 
   148  0004                     	;# 
   149  0005                     	;# 
   150  0006                     	;# 
   151  0007                     	;# 
   152  0008                     	;# 
   153  0009                     	;# 
   154  000A                     	;# 
   155  000B                     	;# 
   156  000C                     	;# 
   157  000D                     	;# 
   158  000E                     	;# 
   159  000E                     	;# 
   160  000F                     	;# 
   161  0010                     	;# 
   162  0011                     	;# 
   163  0012                     	;# 
   164  0013                     	;# 
   165  0014                     	;# 
   166  0015                     	;# 
   167  0015                     	;# 
   168  0016                     	;# 
   169  0017                     	;# 
   170  0018                     	;# 
   171  0019                     	;# 
   172  001A                     	;# 
   173  001B                     	;# 
   174  001B                     	;# 
   175  001C                     	;# 
   176  001D                     	;# 
   177  001E                     	;# 
   178  001F                     	;# 
   179  0081                     	;# 
   180  0085                     	;# 
   181  0086                     	;# 
   182  0087                     	;# 
   183  0088                     	;# 
   184  0089                     	;# 
   185  008C                     	;# 
   186  008D                     	;# 
   187  008E                     	;# 
   188  0091                     	;# 
   189  0092                     	;# 
   190  0093                     	;# 
   191  0094                     	;# 
   192  0098                     	;# 
   193  0099                     	;# 
   194  009C                     	;# 
   195  009D                     	;# 
   196  009E                     	;# 
   197  009F                     	;# 
   198  010C                     	;# 
   199  010D                     	;# 
   200  010E                     	;# 
   201  010F                     	;# 
   202  018C                     	;# 
   203  018D                     	;# 
   204  0000                     	;# 
   205  0001                     	;# 
   206  0002                     	;# 
   207  0003                     	;# 
   208  0004                     	;# 
   209  0005                     	;# 
   210  0006                     	;# 
   211  0007                     	;# 
   212  0008                     	;# 
   213  0009                     	;# 
   214  000A                     	;# 
   215  000B                     	;# 
   216  000C                     	;# 
   217  000D                     	;# 
   218  000E                     	;# 
   219  000E                     	;# 
   220  000F                     	;# 
   221  0010                     	;# 
   222  0011                     	;# 
   223  0012                     	;# 
   224  0013                     	;# 
   225  0014                     	;# 
   226  0015                     	;# 
   227  0015                     	;# 
   228  0016                     	;# 
   229  0017                     	;# 
   230  0018                     	;# 
   231  0019                     	;# 
   232  001A                     	;# 
   233  001B                     	;# 
   234  001B                     	;# 
   235  001C                     	;# 
   236  001D                     	;# 
   237  001E                     	;# 
   238  001F                     	;# 
   239  0081                     	;# 
   240  0085                     	;# 
   241  0086                     	;# 
   242  0087                     	;# 
   243  0088                     	;# 
   244  0089                     	;# 
   245  008C                     	;# 
   246  008D                     	;# 
   247  008E                     	;# 
   248  0091                     	;# 
   249  0092                     	;# 
   250  0093                     	;# 
   251  0094                     	;# 
   252  0098                     	;# 
   253  0099                     	;# 
   254  009C                     	;# 
   255  009D                     	;# 
   256  009E                     	;# 
   257  009F                     	;# 
   258  010C                     	;# 
   259  010D                     	;# 
   260  010E                     	;# 
   261  010F                     	;# 
   262  018C                     	;# 
   263  018D                     	;# 
   264  0000                     	;# 
   265  0001                     	;# 
   266  0002                     	;# 
   267  0003                     	;# 
   268  0004                     	;# 
   269  0005                     	;# 
   270  0006                     	;# 
   271  0007                     	;# 
   272  0008                     	;# 
   273  0009                     	;# 
   274  000A                     	;# 
   275  000B                     	;# 
   276  000C                     	;# 
   277  000D                     	;# 
   278  000E                     	;# 
   279  000E                     	;# 
   280  000F                     	;# 
   281  0010                     	;# 
   282  0011                     	;# 
   283  0012                     	;# 
   284  0013                     	;# 
   285  0014                     	;# 
   286  0015                     	;# 
   287  0015                     	;# 
   288  0016                     	;# 
   289  0017                     	;# 
   290  0018                     	;# 
   291  0019                     	;# 
   292  001A                     	;# 
   293  001B                     	;# 
   294  001B                     	;# 
   295  001C                     	;# 
   296  001D                     	;# 
   297  001E                     	;# 
   298  001F                     	;# 
   299  0081                     	;# 
   300  0085                     	;# 
   301  0086                     	;# 
   302  0087                     	;# 
   303  0088                     	;# 
   304  0089                     	;# 
   305  008C                     	;# 
   306  008D                     	;# 
   307  008E                     	;# 
   308  0091                     	;# 
   309  0092                     	;# 
   310  0093                     	;# 
   311  0094                     	;# 
   312  0098                     	;# 
   313  0099                     	;# 
   314  009C                     	;# 
   315  009D                     	;# 
   316  009E                     	;# 
   317  009F                     	;# 
   318  010C                     	;# 
   319  010D                     	;# 
   320  010E                     	;# 
   321  010F                     	;# 
   322  018C                     	;# 
   323  018D                     	;# 
   324  0000                     	;# 
   325  0001                     	;# 
   326  0002                     	;# 
   327  0003                     	;# 
   328  0004                     	;# 
   329  0005                     	;# 
   330  0006                     	;# 
   331  0007                     	;# 
   332  0008                     	;# 
   333  0009                     	;# 
   334  000A                     	;# 
   335  000B                     	;# 
   336  000C                     	;# 
   337  000D                     	;# 
   338  000E                     	;# 
   339  000E                     	;# 
   340  000F                     	;# 
   341  0010                     	;# 
   342  0011                     	;# 
   343  0012                     	;# 
   344  0013                     	;# 
   345  0014                     	;# 
   346  0015                     	;# 
   347  0015                     	;# 
   348  0016                     	;# 
   349  0017                     	;# 
   350  0018                     	;# 
   351  0019                     	;# 
   352  001A                     	;# 
   353  001B                     	;# 
   354  001B                     	;# 
   355  001C                     	;# 
   356  001D                     	;# 
   357  001E                     	;# 
   358  001F                     	;# 
   359  0081                     	;# 
   360  0085                     	;# 
   361  0086                     	;# 
   362  0087                     	;# 
   363  0088                     	;# 
   364  0089                     	;# 
   365  008C                     	;# 
   366  008D                     	;# 
   367  008E                     	;# 
   368  0091                     	;# 
   369  0092                     	;# 
   370  0093                     	;# 
   371  0094                     	;# 
   372  0098                     	;# 
   373  0099                     	;# 
   374  009C                     	;# 
   375  009D                     	;# 
   376  009E                     	;# 
   377  009F                     	;# 
   378  010C                     	;# 
   379  010D                     	;# 
   380  010E                     	;# 
   381  010F                     	;# 
   382  018C                     	;# 
   383  018D                     	;# 
   384  0000                     	;# 
   385  0001                     	;# 
   386  0002                     	;# 
   387  0003                     	;# 
   388  0004                     	;# 
   389  0005                     	;# 
   390  0006                     	;# 
   391  0007                     	;# 
   392  0008                     	;# 
   393  0009                     	;# 
   394  000A                     	;# 
   395  000B                     	;# 
   396  000C                     	;# 
   397  000D                     	;# 
   398  000E                     	;# 
   399  000E                     	;# 
   400  000F                     	;# 
   401  0010                     	;# 
   402  0011                     	;# 
   403  0012                     	;# 
   404  0013                     	;# 
   405  0014                     	;# 
   406  0015                     	;# 
   407  0015                     	;# 
   408  0016                     	;# 
   409  0017                     	;# 
   410  0018                     	;# 
   411  0019                     	;# 
   412  001A                     	;# 
   413  001B                     	;# 
   414  001B                     	;# 
   415  001C                     	;# 
   416  001D                     	;# 
   417  001E                     	;# 
   418  001F                     	;# 
   419  0081                     	;# 
   420  0085                     	;# 
   421  0086                     	;# 
   422  0087                     	;# 
   423  0088                     	;# 
   424  0089                     	;# 
   425  008C                     	;# 
   426  008D                     	;# 
   427  008E                     	;# 
   428  0091                     	;# 
   429  0092                     	;# 
   430  0093                     	;# 
   431  0094                     	;# 
   432  0098                     	;# 
   433  0099                     	;# 
   434  009C                     	;# 
   435  009D                     	;# 
   436  009E                     	;# 
   437  009F                     	;# 
   438  010C                     	;# 
   439  010D                     	;# 
   440  010E                     	;# 
   441  010F                     	;# 
   442  018C                     	;# 
   443  018D                     	;# 
   444  0000                     	;# 
   445  0001                     	;# 
   446  0002                     	;# 
   447  0003                     	;# 
   448  0004                     	;# 
   449  0005                     	;# 
   450  0006                     	;# 
   451  0007                     	;# 
   452  0008                     	;# 
   453  0009                     	;# 
   454  000A                     	;# 
   455  000B                     	;# 
   456  000C                     	;# 
   457  000D                     	;# 
   458  000E                     	;# 
   459  000E                     	;# 
   460  000F                     	;# 
   461  0010                     	;# 
   462  0011                     	;# 
   463  0012                     	;# 
   464  0013                     	;# 
   465  0014                     	;# 
   466  0015                     	;# 
   467  0015                     	;# 
   468  0016                     	;# 
   469  0017                     	;# 
   470  0018                     	;# 
   471  0019                     	;# 
   472  001A                     	;# 
   473  001B                     	;# 
   474  001B                     	;# 
   475  001C                     	;# 
   476  001D                     	;# 
   477  001E                     	;# 
   478  001F                     	;# 
   479  0081                     	;# 
   480  0085                     	;# 
   481  0086                     	;# 
   482  0087                     	;# 
   483  0088                     	;# 
   484  0089                     	;# 
   485  008C                     	;# 
   486  008D                     	;# 
   487  008E                     	;# 
   488  0091                     	;# 
   489  0092                     	;# 
   490  0093                     	;# 
   491  0094                     	;# 
   492  0098                     	;# 
   493  0099                     	;# 
   494  009C                     	;# 
   495  009D                     	;# 
   496  009E                     	;# 
   497  009F                     	;# 
   498  010C                     	;# 
   499  010D                     	;# 
   500  010E                     	;# 
   501  010F                     	;# 
   502  018C                     	;# 
   503  018D                     	;# 
   504  0000                     	;# 
   505  0001                     	;# 
   506  0002                     	;# 
   507  0003                     	;# 
   508  0004                     	;# 
   509  0005                     	;# 
   510  0006                     	;# 
   511  0007                     	;# 
   512  0008                     	;# 
   513  0009                     	;# 
   514  000A                     	;# 
   515  000B                     	;# 
   516  000C                     	;# 
   517  000D                     	;# 
   518  000E                     	;# 
   519  000E                     	;# 
   520  000F                     	;# 
   521  0010                     	;# 
   522  0011                     	;# 
   523  0012                     	;# 
   524  0013                     	;# 
   525  0014                     	;# 
   526  0015                     	;# 
   527  0015                     	;# 
   528  0016                     	;# 
   529  0017                     	;# 
   530  0018                     	;# 
   531  0019                     	;# 
   532  001A                     	;# 
   533  001B                     	;# 
   534  001B                     	;# 
   535  001C                     	;# 
   536  001D                     	;# 
   537  001E                     	;# 
   538  001F                     	;# 
   539  0081                     	;# 
   540  0085                     	;# 
   541  0086                     	;# 
   542  0087                     	;# 
   543  0088                     	;# 
   544  0089                     	;# 
   545  008C                     	;# 
   546  008D                     	;# 
   547  008E                     	;# 
   548  0091                     	;# 
   549  0092                     	;# 
   550  0093                     	;# 
   551  0094                     	;# 
   552  0098                     	;# 
   553  0099                     	;# 
   554  009C                     	;# 
   555  009D                     	;# 
   556  009E                     	;# 
   557  009F                     	;# 
   558  010C                     	;# 
   559  010D                     	;# 
   560  010E                     	;# 
   561  010F                     	;# 
   562  018C                     	;# 
   563  018D                     	;# 
   564  0000                     	;# 
   565  0001                     	;# 
   566  0002                     	;# 
   567  0003                     	;# 
   568  0004                     	;# 
   569  0005                     	;# 
   570  0006                     	;# 
   571  0007                     	;# 
   572  0008                     	;# 
   573  0009                     	;# 
   574  000A                     	;# 
   575  000B                     	;# 
   576  000C                     	;# 
   577  000D                     	;# 
   578  000E                     	;# 
   579  000E                     	;# 
   580  000F                     	;# 
   581  0010                     	;# 
   582  0011                     	;# 
   583  0012                     	;# 
   584  0013                     	;# 
   585  0014                     	;# 
   586  0015                     	;# 
   587  0015                     	;# 
   588  0016                     	;# 
   589  0017                     	;# 
   590  0018                     	;# 
   591  0019                     	;# 
   592  001A                     	;# 
   593  001B                     	;# 
   594  001B                     	;# 
   595  001C                     	;# 
   596  001D                     	;# 
   597  001E                     	;# 
   598  001F                     	;# 
   599  0081                     	;# 
   600  0085                     	;# 
   601  0086                     	;# 
   602  0087                     	;# 
   603  0088                     	;# 
   604  0089                     	;# 
   605  008C                     	;# 
   606  008D                     	;# 
   607  008E                     	;# 
   608  0091                     	;# 
   609  0092                     	;# 
   610  0093                     	;# 
   611  0094                     	;# 
   612  0098                     	;# 
   613  0099                     	;# 
   614  009C                     	;# 
   615  009D                     	;# 
   616  009E                     	;# 
   617  009F                     	;# 
   618  010C                     	;# 
   619  010D                     	;# 
   620  010E                     	;# 
   621  010F                     	;# 
   622  018C                     	;# 
   623  018D                     	;# 
   624  0000                     	;# 
   625  0001                     	;# 
   626  0002                     	;# 
   627  0003                     	;# 
   628  0004                     	;# 
   629  0005                     	;# 
   630  0006                     	;# 
   631  0007                     	;# 
   632  0008                     	;# 
   633  0009                     	;# 
   634  000A                     	;# 
   635  000B                     	;# 
   636  000C                     	;# 
   637  000D                     	;# 
   638  000E                     	;# 
   639  000E                     	;# 
   640  000F                     	;# 
   641  0010                     	;# 
   642  0011                     	;# 
   643  0012                     	;# 
   644  0013                     	;# 
   645  0014                     	;# 
   646  0015                     	;# 
   647  0015                     	;# 
   648  0016                     	;# 
   649  0017                     	;# 
   650  0018                     	;# 
   651  0019                     	;# 
   652  001A                     	;# 
   653  001B                     	;# 
   654  001B                     	;# 
   655  001C                     	;# 
   656  001D                     	;# 
   657  001E                     	;# 
   658  001F                     	;# 
   659  0081                     	;# 
   660  0085                     	;# 
   661  0086                     	;# 
   662  0087                     	;# 
   663  0088                     	;# 
   664  0089                     	;# 
   665  008C                     	;# 
   666  008D                     	;# 
   667  008E                     	;# 
   668  0091                     	;# 
   669  0092                     	;# 
   670  0093                     	;# 
   671  0094                     	;# 
   672  0098                     	;# 
   673  0099                     	;# 
   674  009C                     	;# 
   675  009D                     	;# 
   676  009E                     	;# 
   677  009F                     	;# 
   678  010C                     	;# 
   679  010D                     	;# 
   680  010E                     	;# 
   681  010F                     	;# 
   682  018C                     	;# 
   683  018D                     	;# 
   684  0000                     	;# 
   685  0001                     	;# 
   686  0002                     	;# 
   687  0003                     	;# 
   688  0004                     	;# 
   689  0005                     	;# 
   690  0006                     	;# 
   691  0007                     	;# 
   692  0008                     	;# 
   693  0009                     	;# 
   694  000A                     	;# 
   695  000B                     	;# 
   696  000C                     	;# 
   697  000D                     	;# 
   698  000E                     	;# 
   699  000E                     	;# 
   700  000F                     	;# 
   701  0010                     	;# 
   702  0011                     	;# 
   703  0012                     	;# 
   704  0013                     	;# 
   705  0014                     	;# 
   706  0015                     	;# 
   707  0015                     	;# 
   708  0016                     	;# 
   709  0017                     	;# 
   710  0018                     	;# 
   711  0019                     	;# 
   712  001A                     	;# 
   713  001B                     	;# 
   714  001B                     	;# 
   715  001C                     	;# 
   716  001D                     	;# 
   717  001E                     	;# 
   718  001F                     	;# 
   719  0081                     	;# 
   720  0085                     	;# 
   721  0086                     	;# 
   722  0087                     	;# 
   723  0088                     	;# 
   724  0089                     	;# 
   725  008C                     	;# 
   726  008D                     	;# 
   727  008E                     	;# 
   728  0091                     	;# 
   729  0092                     	;# 
   730  0093                     	;# 
   731  0094                     	;# 
   732  0098                     	;# 
   733  0099                     	;# 
   734  009C                     	;# 
   735  009D                     	;# 
   736  009E                     	;# 
   737  009F                     	;# 
   738  010C                     	;# 
   739  010D                     	;# 
   740  010E                     	;# 
   741  010F                     	;# 
   742  018C                     	;# 
   743  018D                     	;# 
   744  0000                     	;# 
   745  0001                     	;# 
   746  0002                     	;# 
   747  0003                     	;# 
   748  0004                     	;# 
   749  0005                     	;# 
   750  0006                     	;# 
   751  0007                     	;# 
   752  0008                     	;# 
   753  0009                     	;# 
   754  000A                     	;# 
   755  000B                     	;# 
   756  000C                     	;# 
   757  000D                     	;# 
   758  000E                     	;# 
   759  000E                     	;# 
   760  000F                     	;# 
   761  0010                     	;# 
   762  0011                     	;# 
   763  0012                     	;# 
   764  0013                     	;# 
   765  0014                     	;# 
   766  0015                     	;# 
   767  0015                     	;# 
   768  0016                     	;# 
   769  0017                     	;# 
   770  0018                     	;# 
   771  0019                     	;# 
   772  001A                     	;# 
   773  001B                     	;# 
   774  001B                     	;# 
   775  001C                     	;# 
   776  001D                     	;# 
   777  001E                     	;# 
   778  001F                     	;# 
   779  0081                     	;# 
   780  0085                     	;# 
   781  0086                     	;# 
   782  0087                     	;# 
   783  0088                     	;# 
   784  0089                     	;# 
   785  008C                     	;# 
   786  008D                     	;# 
   787  008E                     	;# 
   788  0091                     	;# 
   789  0092                     	;# 
   790  0093                     	;# 
   791  0094                     	;# 
   792  0098                     	;# 
   793  0099                     	;# 
   794  009C                     	;# 
   795  009D                     	;# 
   796  009E                     	;# 
   797  009F                     	;# 
   798  010C                     	;# 
   799  010D                     	;# 
   800  010E                     	;# 
   801  010F                     	;# 
   802  018C                     	;# 
   803  018D                     	;# 
   804  0000                     	;# 
   805  0001                     	;# 
   806  0002                     	;# 
   807  0003                     	;# 
   808  0004                     	;# 
   809  0005                     	;# 
   810  0006                     	;# 
   811  0007                     	;# 
   812  0008                     	;# 
   813  0009                     	;# 
   814  000A                     	;# 
   815  000B                     	;# 
   816  000C                     	;# 
   817  000D                     	;# 
   818  000E                     	;# 
   819  000E                     	;# 
   820  000F                     	;# 
   821  0010                     	;# 
   822  0011                     	;# 
   823  0012                     	;# 
   824  0013                     	;# 
   825  0014                     	;# 
   826  0015                     	;# 
   827  0015                     	;# 
   828  0016                     	;# 
   829  0017                     	;# 
   830  0018                     	;# 
   831  0019                     	;# 
   832  001A                     	;# 
   833  001B                     	;# 
   834  001B                     	;# 
   835  001C                     	;# 
   836  001D                     	;# 
   837  001E                     	;# 
   838  001F                     	;# 
   839  0081                     	;# 
   840  0085                     	;# 
   841  0086                     	;# 
   842  0087                     	;# 
   843  0088                     	;# 
   844  0089                     	;# 
   845  008C                     	;# 
   846  008D                     	;# 
   847  008E                     	;# 
   848  0091                     	;# 
   849  0092                     	;# 
   850  0093                     	;# 
   851  0094                     	;# 
   852  0098                     	;# 
   853  0099                     	;# 
   854  009C                     	;# 
   855  009D                     	;# 
   856  009E                     	;# 
   857  009F                     	;# 
   858  010C                     	;# 
   859  010D                     	;# 
   860  010E                     	;# 
   861  010F                     	;# 
   862  018C                     	;# 
   863  018D                     	;# 
   864  0000                     	;# 
   865  0001                     	;# 
   866  0002                     	;# 
   867  0003                     	;# 
   868  0004                     	;# 
   869  0005                     	;# 
   870  0006                     	;# 
   871  0007                     	;# 
   872  0008                     	;# 
   873  0009                     	;# 
   874  000A                     	;# 
   875  000B                     	;# 
   876  000C                     	;# 
   877  000D                     	;# 
   878  000E                     	;# 
   879  000E                     	;# 
   880  000F                     	;# 
   881  0010                     	;# 
   882  0011                     	;# 
   883  0012                     	;# 
   884  0013                     	;# 
   885  0014                     	;# 
   886  0015                     	;# 
   887  0015                     	;# 
   888  0016                     	;# 
   889  0017                     	;# 
   890  0018                     	;# 
   891  0019                     	;# 
   892  001A                     	;# 
   893  001B                     	;# 
   894  001B                     	;# 
   895  001C                     	;# 
   896  001D                     	;# 
   897  001E                     	;# 
   898  001F                     	;# 
   899  0081                     	;# 
   900  0085                     	;# 
   901  0086                     	;# 
   902  0087                     	;# 
   903  0088                     	;# 
   904  0089                     	;# 
   905  008C                     	;# 
   906  008D                     	;# 
   907  008E                     	;# 
   908  0091                     	;# 
   909  0092                     	;# 
   910  0093                     	;# 
   911  0094                     	;# 
   912  0098                     	;# 
   913  0099                     	;# 
   914  009C                     	;# 
   915  009D                     	;# 
   916  009E                     	;# 
   917  009F                     	;# 
   918  010C                     	;# 
   919  010D                     	;# 
   920  010E                     	;# 
   921  010F                     	;# 
   922  018C                     	;# 
   923  018D                     	;# 
   924  0000                     	;# 
   925  0001                     	;# 
   926  0002                     	;# 
   927  0003                     	;# 
   928  0004                     	;# 
   929  0005                     	;# 
   930  0006                     	;# 
   931  0007                     	;# 
   932  0008                     	;# 
   933  0009                     	;# 
   934  000A                     	;# 
   935  000B                     	;# 
   936  000C                     	;# 
   937  000D                     	;# 
   938  000E                     	;# 
   939  000E                     	;# 
   940  000F                     	;# 
   941  0010                     	;# 
   942  0011                     	;# 
   943  0012                     	;# 
   944  0013                     	;# 
   945  0014                     	;# 
   946  0015                     	;# 
   947  0015                     	;# 
   948  0016                     	;# 
   949  0017                     	;# 
   950  0018                     	;# 
   951  0019                     	;# 
   952  001A                     	;# 
   953  001B                     	;# 
   954  001B                     	;# 
   955  001C                     	;# 
   956  001D                     	;# 
   957  001E                     	;# 
   958  001F                     	;# 
   959  0081                     	;# 
   960  0085                     	;# 
   961  0086                     	;# 
   962  0087                     	;# 
   963  0088                     	;# 
   964  0089                     	;# 
   965  008C                     	;# 
   966  008D                     	;# 
   967  008E                     	;# 
   968  0091                     	;# 
   969  0092                     	;# 
   970  0093                     	;# 
   971  0094                     	;# 
   972  0098                     	;# 
   973  0099                     	;# 
   974  009C                     	;# 
   975  009D                     	;# 
   976  009E                     	;# 
   977  009F                     	;# 
   978  010C                     	;# 
   979  010D                     	;# 
   980  010E                     	;# 
   981  010F                     	;# 
   982  018C                     	;# 
   983  018D                     	;# 
   984  0000                     	;# 
   985  0001                     	;# 
   986  0002                     	;# 
   987  0003                     	;# 
   988  0004                     	;# 
   989  0005                     	;# 
   990  0006                     	;# 
   991  0007                     	;# 
   992  0008                     	;# 
   993  0009                     	;# 
   994  000A                     	;# 
   995  000B                     	;# 
   996  000C                     	;# 
   997  000D                     	;# 
   998  000E                     	;# 
   999  000E                     	;# 
  1000  000F                     	;# 
  1001  0010                     	;# 
  1002  0011                     	;# 
  1003  0012                     	;# 
  1004  0013                     	;# 
  1005  0014                     	;# 
  1006  0015                     	;# 
  1007  0015                     	;# 
  1008  0016                     	;# 
  1009  0017                     	;# 
  1010  0018                     	;# 
  1011  0019                     	;# 
  1012  001A                     	;# 
  1013  001B                     	;# 
  1014  001B                     	;# 
  1015  001C                     	;# 
  1016  001D                     	;# 
  1017  001E                     	;# 
  1018  001F                     	;# 
  1019  0081                     	;# 
  1020  0085                     	;# 
  1021  0086                     	;# 
  1022  0087                     	;# 
  1023  0088                     	;# 
  1024  0089                     	;# 
  1025  008C                     	;# 
  1026  008D                     	;# 
  1027  008E                     	;# 
  1028  0091                     	;# 
  1029  0092                     	;# 
  1030  0093                     	;# 
  1031  0094                     	;# 
  1032  0098                     	;# 
  1033  0099                     	;# 
  1034  009C                     	;# 
  1035  009D                     	;# 
  1036  009E                     	;# 
  1037  009F                     	;# 
  1038  010C                     	;# 
  1039  010D                     	;# 
  1040  010E                     	;# 
  1041  010F                     	;# 
  1042  018C                     	;# 
  1043  018D                     	;# 
  1044  0000                     	;# 
  1045  0001                     	;# 
  1046  0002                     	;# 
  1047  0003                     	;# 
  1048  0004                     	;# 
  1049  0005                     	;# 
  1050  0006                     	;# 
  1051  0007                     	;# 
  1052  0008                     	;# 
  1053  0009                     	;# 
  1054  000A                     	;# 
  1055  000B                     	;# 
  1056  000C                     	;# 
  1057  000D                     	;# 
  1058  000E                     	;# 
  1059  000E                     	;# 
  1060  000F                     	;# 
  1061  0010                     	;# 
  1062  0011                     	;# 
  1063  0012                     	;# 
  1064  0013                     	;# 
  1065  0014                     	;# 
  1066  0015                     	;# 
  1067  0015                     	;# 
  1068  0016                     	;# 
  1069  0017                     	;# 
  1070  0018                     	;# 
  1071  0019                     	;# 
  1072  001A                     	;# 
  1073  001B                     	;# 
  1074  001B                     	;# 
  1075  001C                     	;# 
  1076  001D                     	;# 
  1077  001E                     	;# 
  1078  001F                     	;# 
  1079  0081                     	;# 
  1080  0085                     	;# 
  1081  0086                     	;# 
  1082  0087                     	;# 
  1083  0088                     	;# 
  1084  0089                     	;# 
  1085  008C                     	;# 
  1086  008D                     	;# 
  1087  008E                     	;# 
  1088  0091                     	;# 
  1089  0092                     	;# 
  1090  0093                     	;# 
  1091  0094                     	;# 
  1092  0098                     	;# 
  1093  0099                     	;# 
  1094  009C                     	;# 
  1095  009D                     	;# 
  1096  009E                     	;# 
  1097  009F                     	;# 
  1098  010C                     	;# 
  1099  010D                     	;# 
  1100  010E                     	;# 
  1101  010F                     	;# 
  1102  018C                     	;# 
  1103  018D                     	;# 
  1104  0000                     	;# 
  1105  0001                     	;# 
  1106  0002                     	;# 
  1107  0003                     	;# 
  1108  0004                     	;# 
  1109  0005                     	;# 
  1110  0006                     	;# 
  1111  0007                     	;# 
  1112  0008                     	;# 
  1113  0009                     	;# 
  1114  000A                     	;# 
  1115  000B                     	;# 
  1116  000C                     	;# 
  1117  000D                     	;# 
  1118  000E                     	;# 
  1119  000E                     	;# 
  1120  000F                     	;# 
  1121  0010                     	;# 
  1122  0011                     	;# 
  1123  0012                     	;# 
  1124  0013                     	;# 
  1125  0014                     	;# 
  1126  0015                     	;# 
  1127  0015                     	;# 
  1128  0016                     	;# 
  1129  0017                     	;# 
  1130  0018                     	;# 
  1131  0019                     	;# 
  1132  001A                     	;# 
  1133  001B                     	;# 
  1134  001B                     	;# 
  1135  001C                     	;# 
  1136  001D                     	;# 
  1137  001E                     	;# 
  1138  001F                     	;# 
  1139  0081                     	;# 
  1140  0085                     	;# 
  1141  0086                     	;# 
  1142  0087                     	;# 
  1143  0088                     	;# 
  1144  0089                     	;# 
  1145  008C                     	;# 
  1146  008D                     	;# 
  1147  008E                     	;# 
  1148  0091                     	;# 
  1149  0092                     	;# 
  1150  0093                     	;# 
  1151  0094                     	;# 
  1152  0098                     	;# 
  1153  0099                     	;# 
  1154  009C                     	;# 
  1155  009D                     	;# 
  1156  009E                     	;# 
  1157  009F                     	;# 
  1158  010C                     	;# 
  1159  010D                     	;# 
  1160  010E                     	;# 
  1161  010F                     	;# 
  1162  018C                     	;# 
  1163  018D                     	;# 
  1164                           
  1165                           	psect	idataBANK0
  1166  0000                     __pidataBANK0:
  1167                           
  1168                           	psect	idataBANK1
  1169  0A67                     __pidataBANK1:
  1170                           
  1171                           ;initializer for _Disp_PinsConfiguration
  1172  0A67  3403               	retlw	3
  1173  0A68  3400               	retlw	0
  1174  0A69  3401               	retlw	1
  1175  0A6A  3400               	retlw	0
  1176  0A6B  3404               	retlw	4
  1177  0A6C  3401               	retlw	1
  1178  0A6D  3400               	retlw	0
  1179  0A6E  3405               	retlw	5
  1180  0A6F  3401               	retlw	1
  1181                           
  1182                           ;initializer for _Gpt_Config
  1183  0A70  3401               	retlw	1
  1184  0A71  3400               	retlw	0
  1185  0A72  34E8               	retlw	232
  1186  0A73  3403               	retlw	3
  1187  0A74  3413               	retlw	low (fp__TickHandler-i1fpbase)
  1188  0A75  3400               	retlw	0
  1189  0A76  3400               	retlw	0
  1190  0A77  3400               	retlw	0
  1191                           
  1192                           ;initializer for _Pwm_Config
  1193  0A78  3401               	retlw	1
  1194  0A79  34F4               	retlw	244
  1195  0A7A  3401               	retlw	1
  1196  0A7B  3400               	retlw	0
  1197  0A7C  3400               	retlw	0
  1198  0A7D  3401               	retlw	1
  1199  0A7E  3400               	retlw	0
  1200                           
  1201                           ;initializer for _Disp_Config
  1202  0A7F  3403               	retlw	3
  1203  0A80  3400               	retlw	0
  1204  0A81  3404               	retlw	4
  1205  0A82  3405               	retlw	5
  1206  0A83  3402               	retlw	2
  1207  0A84  34E8               	retlw	232
  1208  0A85  3403               	retlw	3
  1209                           
  1210                           ;initializer for _Uart_PinsConfig
  1211  0A86  3402               	retlw	2
  1212  0A87  3406               	retlw	6
  1213  0A88  3400               	retlw	0
  1214  0A89  3402               	retlw	2
  1215  0A8A  3407               	retlw	7
  1216  0A8B  3400               	retlw	0
  1217                           
  1218                           ;initializer for _Pwm_Channels
  1219  0A8C  3402               	retlw	2
  1220  0A8D  3401               	retlw	1
  1221  0A8E  3401               	retlw	1
  1222  0A8F  3402               	retlw	2
  1223  0A90  3402               	retlw	2
  1224  0A91  3401               	retlw	1
  1225                           
  1226                           ;initializer for _I2c_ConfigPins
  1227  0A92  3402               	retlw	2
  1228  0A93  3403               	retlw	3
  1229  0A94  3400               	retlw	0
  1230  0A95  3402               	retlw	2
  1231  0A96  3404               	retlw	4
  1232  0A97  3400               	retlw	0
  1233                           
  1234                           ;initializer for _TempSystem_Configurations
  1235  0A98  3402               	retlw	2
  1236  0A99  3405               	retlw	5
  1237  0A9A  3401               	retlw	1
  1238  0A9B  3402               	retlw	2
  1239  0A9C  3402               	retlw	2
  1240  0A9D  3401               	retlw	1
  1241                           
  1242                           	psect	idataBANK3
  1243  0BAC                     __pidataBANK3:
  1244                           
  1245                           ;initializer for _Dio_ConfigGroupChannel
  1246  0BAC  3401               	retlw	1
  1247  0BAD  3404               	retlw	4
  1248  0BAE  3401               	retlw	1
  1249  0BAF  3401               	retlw	1
  1250  0BB0  3401               	retlw	1
  1251  0BB1  3403               	retlw	3
  1252  0BB2  3401               	retlw	1
  1253  0BB3  3407               	retlw	7
  1254  0BB4  3402               	retlw	2
  1255  0BB5  3402               	retlw	2
  1256  0BB6  3402               	retlw	2
  1257  0BB7  3405               	retlw	5
  1258  0BB8  3400               	retlw	0
  1259  0BB9  3400               	retlw	0
  1260  0BBA  3400               	retlw	0
  1261  0BBB  3400               	retlw	0
  1262  0BBC  3400               	retlw	0
  1263  0BBD  3400               	retlw	0
  1264                           
  1265                           ;initializer for _Port_ButtonsConfig
  1266  0BBE  3401               	retlw	1
  1267  0BBF  3400               	retlw	0
  1268  0BC0  3400               	retlw	0
  1269  0BC1  3401               	retlw	1
  1270  0BC2  3401               	retlw	1
  1271  0BC3  3400               	retlw	0
  1272  0BC4  3401               	retlw	1
  1273  0BC5  3402               	retlw	2
  1274  0BC6  3400               	retlw	0
  1275  0BC7  3401               	retlw	1
  1276  0BC8  3407               	retlw	7
  1277  0BC9  3401               	retlw	1
  1278  0BCA  3400               	retlw	0
  1279  0BCB  3400               	retlw	0
  1280  0BCC  3400               	retlw	0
  1281                           
  1282                           ;initializer for _I2c_Config
  1283  0BCD  3400               	retlw	0
  1284  0BCE  3400               	retlw	0
  1285  0BCF  34A0               	retlw	160
  1286  0BD0  3486               	retlw	134
  1287  0BD1  3401               	retlw	1
  1288  0BD2  3400               	retlw	0
  1289  0BD3  3408               	retlw	8
  1290  0BD4  3400               	retlw	0
  1291  0BD5  3400               	retlw	0
  1292  0BD6  3400               	retlw	0
  1293  0BD7  3401               	retlw	1
  1294  0BD8  3400               	retlw	0
  1295                           
  1296                           ;initializer for _TempSensor_Config
  1297  0BD9  3401               	retlw	1
  1298  0BDA  3402               	retlw	2
  1299  0BDB  3400               	retlw	0
  1300  0BDC  3400               	retlw	0
  1301  0BDD  3401               	retlw	1
  1302  0BDE  3405               	retlw	5
  1303  0BDF  3400               	retlw	0
  1304  0BE0  3401               	retlw	1
  1305  0BE1  3401               	retlw	1
  1306  0BE2  3410               	retlw	low (fp__Adc_Handler-i1fpbase)
  1307  0BE3  3400               	retlw	0
  1308                           
  1309                           ;initializer for _Adc_PortConfig
  1310  0BE4  3400               	retlw	0
  1311  0BE5  3400               	retlw	0
  1312  0BE6  3400               	retlw	0
  1313  0BE7  3400               	retlw	0
  1314  0BE8  3401               	retlw	1
  1315  0BE9  3400               	retlw	0
  1316  0BEA  3400               	retlw	0
  1317  0BEB  3402               	retlw	2
  1318  0BEC  3400               	retlw	0
  1319                           
  1320                           ;initializer for _EndTimes
  1321  0BED  3401               	retlw	1
  1322  0BEE  3403               	retlw	3
  1323  0BEF  3405               	retlw	5
  1324  0BF0  3407               	retlw	7
  1325  0BF1  3409               	retlw	9
  1326  0BF2  3400               	retlw	0
  1327  0BF3  3400               	retlw	0
  1328  0BF4  3400               	retlw	0
  1329  0BF5  3400               	retlw	0
  1330                           
  1331                           ;initializer for _Tasks
  1332  0BF6  340D               	retlw	low (fp__task1-fpbase)
  1333  0BF7  340A               	retlw	low (fp__task2-fpbase)
  1334  0BF8  3407               	retlw	low (fp__task3-fpbase)
  1335  0BF9  3404               	retlw	low (fp__task4-fpbase)
  1336  0BFA  3401               	retlw	low (fp__task5-fpbase)
  1337  0BFB  3400               	retlw	0
  1338  0BFC  3400               	retlw	0
  1339  0BFD  3400               	retlw	0
  1340  0BFE  3400               	retlw	0
  1341                           
  1342                           ;initializer for _Uart_Config
  1343  0BFF  3480               	retlw	128
  1344  0C00  3425               	retlw	37
  1345  0C01  3400               	retlw	0
  1346  0C02  3400               	retlw	0
  1347  0C03  3401               	retlw	1
  1348  0C04  3400               	retlw	0
  1349  0C05  3400               	retlw	0
  1350  0C06  3400               	retlw	0
  1351  0C07  3400               	retlw	0
  1352  000E                     _TMR1	set	14
  1353  001A                     _RCREG	set	26
  1354  001F                     _ADCON0	set	31
  1355  001E                     _ADRESH	set	30
  1356  0015                     _CCPR1L	set	21
  1357  0017                     _CCP1CON	set	23
  1358  0013                     _SSPBUF	set	19
  1359  0014                     _SSPCON	set	20
  1360  0012                     _T2CON	set	18
  1361  0010                     _T1CON	set	16
  1362  005C                     _INTE	set	92
  1363  005E                     _PEIE	set	94
  1364  0059                     _INTF	set	89
  1365  0065                     _RCIF	set	101
  1366  0064                     _TXIF	set	100
  1367  0066                     _ADIF	set	102
  1368  0063                     _SSPIF	set	99
  1369  0060                     _TMR1IF	set	96
  1370  005F                     _GIE	set	95
  1371  009F                     _ADCON1	set	159
  1372  009E                     _ADRESL	set	158
  1373  0094                     _SSPSTAT	set	148
  1374  0093                     _SSPADD	set	147
  1375  0091                     _SSPCON2	set	145
  1376  0092                     _PR2	set	146
  1377  040E                     _INTEDG	set	1038
  1378  0465                     _RCIE	set	1125
  1379  0464                     _TXIE	set	1124
  1380  0466                     _ADIE	set	1126
  1381  0460                     _TMR1IE	set	1120
  1382  048E                     _ACKSTAT	set	1166
  1383                           
  1384                           	psect	strings
  1385  07AA                     __pstrings:
  1386  07AA                     stringtab:
  1387  07AA                     __stringtab:
  1388  07AA                     stringcode:	
  1389                           ;	String table - string pointers are 1 byte each
  1390                           
  1391  07AA                     stringdir:
  1392  07AA  3007               	movlw	high stringdir
  1393  07AB  008A               	movwf	10
  1394  07AC  0804               	movf	4,w
  1395  07AD  0A84               	incf	4,f
  1396  07AE  0782               	addwf	2,f
  1397  07AF                     __stringbase:
  1398  07AF  3400               	retlw	0
  1399  07B0                     __end_of__stringtab:
  1400  07B0                     STR_1:
  1401  07B0  340A               	retlw	10
  1402  07B1  3444               	retlw	68	;'D'
  1403  07B2  3445               	retlw	69	;'E'
  1404  07B3  3456               	retlw	86	;'V'
  1405  07B4  3445               	retlw	69	;'E'
  1406  07B5  344C               	retlw	76	;'L'
  1407  07B6  344F               	retlw	79	;'O'
  1408  07B7  3450               	retlw	80	;'P'
  1409  07B8  344D               	retlw	77	;'M'
  1410  07B9  3445               	retlw	69	;'E'
  1411  07BA  344E               	retlw	78	;'N'
  1412  07BB  3454               	retlw	84	;'T'
  1413  07BC  345F               	retlw	95	;'_'
  1414  07BD  3445               	retlw	69	;'E'
  1415  07BE  3452               	retlw	82	;'R'
  1416  07BF  3452               	retlw	82	;'R'
  1417  07C0  344F               	retlw	79	;'O'
  1418  07C1  3452               	retlw	82	;'R'
  1419  07C2  3400               	retlw	0
  1420  07C3                     STR_3:
  1421  07C3  340A               	retlw	10
  1422  07C4  3449               	retlw	73	;'I'
  1423  07C5  346E               	retlw	110	;'n'
  1424  07C6  3473               	retlw	115	;'s'
  1425  07C7  3474               	retlw	116	;'t'
  1426  07C8  3461               	retlw	97	;'a'
  1427  07C9  346E               	retlw	110	;'n'
  1428  07CA  3463               	retlw	99	;'c'
  1429  07CB  3465               	retlw	101	;'e'
  1430  07CC  3449               	retlw	73	;'I'
  1431  07CD  3464               	retlw	100	;'d'
  1432  07CE  343A               	retlw	58	;':'
  1433  07CF  3420               	retlw	32	;' '
  1434  07D0  3430               	retlw	48	;'0'
  1435  07D1  3478               	retlw	120	;'x'
  1436  07D2  3400               	retlw	0
  1437  07D3                     STR_2:
  1438  07D3  340A               	retlw	10
  1439  07D4  344D               	retlw	77	;'M'
  1440  07D5  346F               	retlw	111	;'o'
  1441  07D6  3464               	retlw	100	;'d'
  1442  07D7  3475               	retlw	117	;'u'
  1443  07D8  346C               	retlw	108	;'l'
  1444  07D9  3465               	retlw	101	;'e'
  1445  07DA  3449               	retlw	73	;'I'
  1446  07DB  3464               	retlw	100	;'d'
  1447  07DC  343A               	retlw	58	;':'
  1448  07DD  3420               	retlw	32	;' '
  1449  07DE  3430               	retlw	48	;'0'
  1450  07DF  3478               	retlw	120	;'x'
  1451  07E0  3400               	retlw	0
  1452  07E1                     STR_5:
  1453  07E1  340A               	retlw	10
  1454  07E2  3445               	retlw	69	;'E'
  1455  07E3  3472               	retlw	114	;'r'
  1456  07E4  3472               	retlw	114	;'r'
  1457  07E5  346F               	retlw	111	;'o'
  1458  07E6  3472               	retlw	114	;'r'
  1459  07E7  3449               	retlw	73	;'I'
  1460  07E8  3464               	retlw	100	;'d'
  1461  07E9  343A               	retlw	58	;':'
  1462  07EA  3420               	retlw	32	;' '
  1463  07EB  3430               	retlw	48	;'0'
  1464  07EC  3478               	retlw	120	;'x'
  1465  07ED  3400               	retlw	0
  1466  07EE                     STR_4:
  1467  07EE  340A               	retlw	10
  1468  07EF  3441               	retlw	65	;'A'
  1469  07F0  3470               	retlw	112	;'p'
  1470  07F1  3469               	retlw	105	;'i'
  1471  07F2  3449               	retlw	73	;'I'
  1472  07F3  3464               	retlw	100	;'d'
  1473  07F4  343A               	retlw	58	;':'
  1474  07F5  3420               	retlw	32	;' '
  1475  07F6  3430               	retlw	48	;'0'
  1476  07F7  3478               	retlw	120	;'x'
  1477  07F8  3400               	retlw	0
  1478                           
  1479                           	psect	cinit
  1480  0015                     start_initialization:	
  1481                           ; #config settings
  1482                           
  1483  0015                     __initialization:
  1484  0015  30EC               	movlw	low (__pdataBANK3+92)
  1485                           
  1486                           ; Initialize objects allocated to BANK3
  1487  0016  1783               	bsf	3,7	;select IRP bank2
  1488  0017  00FD               	movwf	125
  1489  0018  300B               	movlw	high __pidataBANK3
  1490  0019  00FE               	movwf	126
  1491  001A  30AC               	movlw	low __pidataBANK3
  1492  001B  00FF               	movwf	127
  1493  001C  3090               	movlw	low __pdataBANK3
  1494  001D  0084               	movwf	4
  1495  001E  120A  158A  219E  120A  118A  	fcall	init_ram0
  1496  0023  30D7               	movlw	low (__pdataBANK1+55)
  1497                           
  1498                           ; Initialize objects allocated to BANK1
  1499  0024  1383               	bcf	3,7	;select IRP bank0
  1500  0025  00FD               	movwf	125
  1501  0026  300A               	movlw	high __pidataBANK1
  1502  0027  00FE               	movwf	126
  1503  0028  3067               	movlw	low __pidataBANK1
  1504  0029  00FF               	movwf	127
  1505  002A  30A0               	movlw	low __pdataBANK1
  1506  002B  0084               	movwf	4
  1507  002C  120A  158A  219E  120A  118A  	fcall	init_ram0
  1508                           
  1509                           ;initializer for _Eep_Config
  1510  0031  30A0               	movlw	160
  1511  0032  00E7               	movwf	__pdataBANK0& (0+127)
  1512  0033  3010               	movlw	low __pbssBANK2
  1513  0034  01E8               	clrf	(__pdataBANK0+1)& (0+127)
  1514  0035  01E9               	clrf	(__pdataBANK0+2)& (0+127)
  1515                           
  1516                           ; Clear objects allocated to BANK2
  1517  0036  1783               	bsf	3,7	;select IRP bank2
  1518  0037  0084               	movwf	4
  1519  0038  3034               	movlw	low (__pbssBANK2+36)
  1520  0039  120A  158A  216D  120A  118A  	fcall	clear_ram0
  1521  003E  30D7               	movlw	low __pbssBANK1
  1522                           
  1523                           ; Clear objects allocated to BANK1
  1524  003F  1383               	bcf	3,7	;select IRP bank0
  1525  0040  0084               	movwf	4
  1526  0041  30E8               	movlw	low (__pbssBANK1+17)
  1527  0042  120A  158A  216D  120A  118A  	fcall	clear_ram0
  1528                           
  1529                           ; Clear objects allocated to BANK0
  1530  0047  3046               	movlw	low __pbssBANK0
  1531  0048  0084               	movwf	4
  1532  0049  3067               	movlw	low (__pbssBANK0+33)
  1533  004A  120A  158A  216D   	fcall	clear_ram0
  1534  004D                     end_of_initialization:	
  1535                           ;End of C runtime variable initialization code
  1536                           
  1537  004D                     __end_of__initialization:
  1538  004D  0183               	clrf	3
  1539  004E  120A  158A  2A3C   	ljmp	l4629	;jump to C main() function
  1540                           
  1541                           	psect	bssBANK0
  1542  0046                     __pbssBANK0:
  1543  0046                     _TaskTable:
  1544  0046                     	ds	9
  1545  004F                     _callbackTable:
  1546  004F                     	ds	5
  1547  0054                     Disp_DisplayNb@blinkFlag:
  1548  0054                     	ds	2
  1549  0056                     _BlinkingPeriod:
  1550  0056                     	ds	2
  1551  0058                     _Gpt_ReloadValue:
  1552  0058                     	ds	2
  1553  005A                     _ii:
  1554  005A                     	ds	2
  1555  005C                     _TickCount:
  1556  005C                     	ds	1
  1557  005D                     _RX_Data:
  1558  005D                     	ds	1
  1559  005E                     _Eep_ThisConfiguration:
  1560  005E                     	ds	1
  1561  005F                     _Adc_Result:
  1562  005F                     	ds	1
  1563  0060                     _Adc_ThisConfiguration:
  1564  0060                     	ds	1
  1565  0061                     _Pwm_ThisConfiguration:
  1566  0061                     	ds	1
  1567  0062                     _I2c_ThisConfiguration:
  1568  0062                     	ds	1
  1569  0063                     _Gpt_ThisConfiguration_1:
  1570  0063                     	ds	1
  1571  0064                     _State:
  1572  0064                     	ds	1
  1573  0065                     _Eeprom_Address:
  1574  0065                     	ds	1
  1575  0066                     _SetTemp:
  1576  0066                     	ds	1
  1577                           
  1578                           	psect	dataBANK0
  1579  0067                     __pdataBANK0:
  1580  0067                     _Eep_Config:
  1581  0067                     	ds	3
  1582                           
  1583                           	psect	bssBANK1
  1584  00D7                     __pbssBANK1:
  1585  00D7                     _States_EndTime:
  1586  00D7                     	ds	9
  1587  00E0                     Pwm_Init@F1289:
  1588  00E0                     	ds	8
  1589                           
  1590                           	psect	dataBANK1
  1591  00A0                     __pdataBANK1:
  1592  00A0                     _Disp_PinsConfiguration:
  1593  00A0                     	ds	9
  1594  00A9                     _Gpt_Config:
  1595  00A9                     	ds	8
  1596  00B1                     _Pwm_Config:
  1597  00B1                     	ds	7
  1598  00B8                     _Disp_Config:
  1599  00B8                     	ds	7
  1600  00BF                     _Uart_PinsConfig:
  1601  00BF                     	ds	6
  1602  00C5                     _Pwm_Channels:
  1603  00C5                     	ds	6
  1604  00CB                     _I2c_ConfigPins:
  1605  00CB                     	ds	6
  1606  00D1                     _TempSystem_Configurations:
  1607  00D1                     	ds	6
  1608                           
  1609                           	psect	dataBANK3
  1610  0190                     __pdataBANK3:
  1611  0190                     _Dio_ConfigGroupChannel:
  1612  0190                     	ds	18
  1613  01A2                     _Port_ButtonsConfig:
  1614  01A2                     	ds	15
  1615  01B1                     _I2c_Config:
  1616  01B1                     	ds	12
  1617  01BD                     _TempSensor_Config:
  1618  01BD                     	ds	11
  1619  01C8                     _Adc_PortConfig:
  1620  01C8                     	ds	9
  1621  01D1                     _EndTimes:
  1622  01D1                     	ds	9
  1623  01DA                     _Tasks:
  1624  01DA                     	ds	9
  1625  01E3                     _Uart_Config:
  1626  01E3                     	ds	9
  1627                           
  1628                           	psect	bssBANK2
  1629  0110                     __pbssBANK2:
  1630  0110                     _Tcb_Array:
  1631  0110                     	ds	36
  1632                           
  1633                           	psect	inittext
  1634  099A                     init_fetch0:	
  1635                           ;	Called with low address in FSR and high address in W
  1636                           
  1637  099A  087E               	movf	126,w
  1638  099B  008A               	movwf	10
  1639  099C  087F               	movf	127,w
  1640  099D  0082               	movwf	2
  1641  099E                     init_ram0:	
  1642                           ;Called with:
  1643                           ;	high address of idata address in btemp 
  1644                           ;	low address of idata address in btemp+1 
  1645                           ;	low address of data in FSR
  1646                           ;	high address + 1 of data in btemp-1
  1647                           
  1648  099E  219A  120A  158A   	fcall	init_fetch0
  1649  09A1  0080               	movwf	0
  1650  09A2  0A84               	incf	4,f
  1651  09A3  0804               	movf	4,w
  1652  09A4  067D               	xorwf	125,w
  1653  09A5  1903               	btfsc	3,2
  1654  09A6  3400               	retlw	0
  1655  09A7  0AFF               	incf	127,f
  1656  09A8  1903               	btfsc	3,2
  1657  09A9  0AFE               	incf	126,f
  1658  09AA  299E               	goto	init_ram0
  1659                           
  1660                           	psect	clrtext
  1661  096D                     clear_ram0:	
  1662                           ;	Called with FSR containing the base address, and
  1663                           ;	W with the last address+1
  1664                           
  1665  096D  0064               	clrwdt	;clear the watchdog before getting into this loop
  1666  096E                     clrloop0:
  1667  096E  0180               	clrf	0	;clear RAM location pointed to by FSR
  1668  096F  0A84               	incf	4,f	;increment pointer
  1669  0970  0604               	xorwf	4,w	;XOR with final address
  1670  0971  1903               	btfsc	3,2	;have we reached the end yet?
  1671  0972  3400               	retlw	0	;all done for this memory range, return
  1672  0973  0604               	xorwf	4,w	;XOR again to restore value
  1673  0974  296E               	goto	clrloop0	;do the next byte
  1674                           
  1675                           	psect	cstackBANK1
  1676  00E8                     __pcstackBANK1:
  1677  00E8                     TempSystem_Init@ConfigPtr:
  1678                           
  1679                           ; 1 bytes @ 0x0
  1680  00E8                     	ds	1
  1681  00E9                     Init_Task@i:
  1682                           
  1683                           ; 2 bytes @ 0x1
  1684  00E9                     	ds	2
  1685                           
  1686                           	psect	cstackCOMMON
  1687  0070                     __pcstackCOMMON:
  1688  0070                     ?_TickHandler:
  1689  0070                     ?_Os2_scheduler:	
  1690                           ; 1 bytes @ 0x0
  1691                           
  1692  0070                     ?_task1:	
  1693                           ; 1 bytes @ 0x0
  1694                           
  1695  0070                     ?_task2:	
  1696                           ; 1 bytes @ 0x0
  1697                           
  1698  0070                     ?_task3:	
  1699                           ; 1 bytes @ 0x0
  1700                           
  1701  0070                     ?_task4:	
  1702                           ; 1 bytes @ 0x0
  1703                           
  1704  0070                     ?_task5:	
  1705                           ; 1 bytes @ 0x0
  1706                           
  1707  0070                     ?_Os2_Init:	
  1708                           ; 1 bytes @ 0x0
  1709                           
  1710  0070                     ?_Os2_AddThreads:	
  1711                           ; 1 bytes @ 0x0
  1712                           
  1713  0070                     ?_Os2_start:	
  1714                           ; 1 bytes @ 0x0
  1715                           
  1716  0070                     ?_Disp_Init:	
  1717                           ; 1 bytes @ 0x0
  1718                           
  1719  0070                     ?_Eep_Init:	
  1720                           ; 1 bytes @ 0x0
  1721                           
  1722  0070                     ?_TempSensor_Init:	
  1723                           ; 1 bytes @ 0x0
  1724                           
  1725  0070                     ?_TempSystem_Init:	
  1726                           ; 1 bytes @ 0x0
  1727                           
  1728  0070                     ?_Gpt_Init:	
  1729                           ; 1 bytes @ 0x0
  1730                           
  1731  0070                     ?_Dio_ReadChannel:	
  1732                           ; 1 bytes @ 0x0
  1733                           
  1734  0070                     ?_I2C_Master_Wait:	
  1735                           ; 1 bytes @ 0x0
  1736                           
  1737  0070                     ?_Disp_GetDislayValue:	
  1738                           ; 1 bytes @ 0x0
  1739                           
  1740  0070                     ?_Adc_Handler:	
  1741                           ; 1 bytes @ 0x0
  1742                           
  1743  0070                     ?_Init_Task:	
  1744                           ; 1 bytes @ 0x0
  1745                           
  1746  0070                     ?_Interrupt_TimerCallbackFn:	
  1747                           ; 1 bytes @ 0x0
  1748                           
  1749  0070                     ?_I2c_Init:	
  1750                           ; 1 bytes @ 0x0
  1751                           
  1752  0070                     ?_I2c_WriteSlaveAddress:	
  1753                           ; 1 bytes @ 0x0
  1754                           
  1755  0070                     ?_I2C_Master_Start:	
  1756                           ; 1 bytes @ 0x0
  1757                           
  1758  0070                     ?_I2C_Master_RepeatedStart:	
  1759                           ; 1 bytes @ 0x0
  1760                           
  1761  0070                     ?_I2C_Master_Stop:	
  1762                           ; 1 bytes @ 0x0
  1763                           
  1764  0070                     ?_I2C_ACK:	
  1765                           ; 1 bytes @ 0x0
  1766                           
  1767  0070                     ?_Port_InitPort:	
  1768                           ; 1 bytes @ 0x0
  1769                           
  1770  0070                     ?_Pwm_Init:	
  1771                           ; 1 bytes @ 0x0
  1772                           
  1773  0070                     ?_Adc_CallbackFn:	
  1774                           ; 1 bytes @ 0x0
  1775                           
  1776  0070                     ?_Adc_Init:	
  1777                           ; 1 bytes @ 0x0
  1778                           
  1779  0070                     ?_ISR:	
  1780                           ; 1 bytes @ 0x0
  1781                           
  1782  0070                     ?_Uart_TX_Callback:	
  1783                           ; 1 bytes @ 0x0
  1784                           
  1785  0070                     ??_Uart_TX_Callback:	
  1786                           ; 1 bytes @ 0x0
  1787                           
  1788  0070                     ?_Uart_RX_Callback:	
  1789                           ; 1 bytes @ 0x0
  1790                           
  1791  0070                     ??_Uart_RX_Callback:	
  1792                           ; 1 bytes @ 0x0
  1793                           
  1794  0070                     ?i1_task1:	
  1795                           ; 1 bytes @ 0x0
  1796                           
  1797  0070                     ?i1_task2:	
  1798                           ; 1 bytes @ 0x0
  1799                           
  1800  0070                     ?i1_task3:	
  1801                           ; 1 bytes @ 0x0
  1802                           
  1803  0070                     ?i1_task4:	
  1804                           ; 1 bytes @ 0x0
  1805                           
  1806  0070                     ?i1_task5:	
  1807                           ; 1 bytes @ 0x0
  1808                           
  1809  0070                     ?i1_Dio_ReadChannel:	
  1810                           ; 1 bytes @ 0x0
  1811                           
  1812  0070                     ??i1_Dio_ReadChannel:	
  1813                           ; 1 bytes @ 0x0
  1814                           
  1815  0070                     ?i1_I2c_WriteSlaveAddress:	
  1816                           ; 1 bytes @ 0x0
  1817                           
  1818  0070                     ??i1_I2c_WriteSlaveAddress:	
  1819                           ; 1 bytes @ 0x0
  1820                           
  1821  0070                     ?i1_I2c_WriteIB:	
  1822                           ; 1 bytes @ 0x0
  1823                           
  1824  0070                     ?i1_I2c_ReadIB:	
  1825                           ; 1 bytes @ 0x0
  1826                           
  1827  0070                     ?i1_I2C_Master_Wait:	
  1828                           ; 1 bytes @ 0x0
  1829                           
  1830  0070                     ??i1_I2C_Master_Wait:	
  1831                           ; 1 bytes @ 0x0
  1832                           
  1833  0070                     ?i1_I2C_Master_Start:	
  1834                           ; 1 bytes @ 0x0
  1835                           
  1836  0070                     ??i1_I2C_Master_Start:	
  1837                           ; 1 bytes @ 0x0
  1838                           
  1839  0070                     ?i1_I2C_Master_RepeatedStart:	
  1840                           ; 1 bytes @ 0x0
  1841                           
  1842  0070                     ??i1_I2C_Master_RepeatedStart:	
  1843                           ; 1 bytes @ 0x0
  1844                           
  1845  0070                     ?i1_I2C_Master_Stop:	
  1846                           ; 1 bytes @ 0x0
  1847                           
  1848  0070                     ??i1_I2C_Master_Stop:	
  1849                           ; 1 bytes @ 0x0
  1850                           
  1851  0070                     ?i1_I2C_ACK:	
  1852                           ; 1 bytes @ 0x0
  1853                           
  1854  0070                     ??i1_I2C_ACK:	
  1855                           ; 1 bytes @ 0x0
  1856                           
  1857  0070                     ?i1_Disp_GetDislayValue:	
  1858                           ; 1 bytes @ 0x0
  1859                           
  1860  0070                     ??i1_Disp_GetDislayValue:	
  1861                           ; 1 bytes @ 0x0
  1862                           
  1863  0070                     ?i1_Os2_scheduler:	
  1864                           ; 1 bytes @ 0x0
  1865                           
  1866  0070                     ?i1___lbdiv:	
  1867                           ; 1 bytes @ 0x0
  1868                           
  1869  0070                     ?i1___lbmod:	
  1870                           ; 1 bytes @ 0x0
  1871                           
  1872  0070                     ?_main:	
  1873                           ; 1 bytes @ 0x0
  1874                           
  1875  0070                     ?___awdiv:	
  1876                           ; 2 bytes @ 0x0
  1877                           
  1878  0070                     ?i1___lwdiv:	
  1879                           ; 2 bytes @ 0x0
  1880                           
  1881  0070                     Adc_Handler@x:	
  1882                           ; 2 bytes @ 0x0
  1883                           
  1884  0070                     I2c_WriteIB@Channel:	
  1885                           ; 1 bytes @ 0x0
  1886                           
  1887  0070                     I2c_ReadIB@Channel:	
  1888                           ; 1 bytes @ 0x0
  1889                           
  1890  0070                     i1I2c_WriteSlaveAddress@data:	
  1891                           ; 1 bytes @ 0x0
  1892                           
  1893  0070                     i1I2c_WriteIB@DataBufferPtr:	
  1894                           ; 1 bytes @ 0x0
  1895                           
  1896  0070                     i1I2c_ReadIB@DataBufferPtr:	
  1897                           ; 1 bytes @ 0x0
  1898                           
  1899  0070                     i1___lbdiv@divisor:	
  1900                           ; 1 bytes @ 0x0
  1901                           
  1902  0070                     i1___lbmod@divisor:	
  1903                           ; 1 bytes @ 0x0
  1904                           
  1905  0070                     ___awdiv@divisor:	
  1906                           ; 1 bytes @ 0x0
  1907                           
  1908  0070                     i1___lwdiv@divisor:	
  1909                           ; 2 bytes @ 0x0
  1910                           
  1911                           
  1912                           ; 2 bytes @ 0x0
  1913  0070                     	ds	1
  1914  0071                     ??_Adc_Handler:
  1915  0071                     ??i1_I2c_WriteIB:	
  1916                           ; 1 bytes @ 0x1
  1917                           
  1918  0071                     ??i1_I2c_ReadIB:	
  1919                           ; 1 bytes @ 0x1
  1920                           
  1921  0071                     ?i1_Eep_Read:	
  1922                           ; 1 bytes @ 0x1
  1923                           
  1924  0071                     ??i1___lbdiv:	
  1925                           ; 1 bytes @ 0x1
  1926                           
  1927  0071                     ??i1___lbmod:	
  1928                           ; 1 bytes @ 0x1
  1929                           
  1930  0071                     i1Dio_ReadChannel@x:	
  1931                           ; 1 bytes @ 0x1
  1932                           
  1933  0071                     i1Eep_Read@DataBufferPtr:	
  1934                           ; 1 bytes @ 0x1
  1935                           
  1936  0071                     i1___lbdiv@dividend:	
  1937                           ; 1 bytes @ 0x1
  1938                           
  1939                           
  1940                           ; 1 bytes @ 0x1
  1941  0071                     	ds	1
  1942  0072                     i1Disp_GetDislayValue@v:
  1943  0072                     i1Eep_Read@Length:	
  1944                           ; 1 bytes @ 0x2
  1945                           
  1946  0072                     i1___lbdiv@counter:	
  1947                           ; 1 bytes @ 0x2
  1948                           
  1949  0072                     i1___lbmod@dividend:	
  1950                           ; 1 bytes @ 0x2
  1951                           
  1952  0072                     ___awdiv@dividend:	
  1953                           ; 1 bytes @ 0x2
  1954                           
  1955  0072                     i1Dio_ReadChannel@Pin_Ptr:	
  1956                           ; 2 bytes @ 0x2
  1957                           
  1958  0072                     i1___lwdiv@dividend:	
  1959                           ; 2 bytes @ 0x2
  1960                           
  1961                           
  1962                           ; 2 bytes @ 0x2
  1963  0072                     	ds	1
  1964  0073                     ??i1_Eep_Read:
  1965  0073                     i1___lbdiv@quotient:	
  1966                           ; 1 bytes @ 0x3
  1967                           
  1968  0073                     i1___lbmod@counter:	
  1969                           ; 1 bytes @ 0x3
  1970                           
  1971                           
  1972                           ; 1 bytes @ 0x3
  1973  0073                     	ds	1
  1974  0074                     ??___awdiv:
  1975  0074                     ??i1___lwdiv:	
  1976                           ; 1 bytes @ 0x4
  1977                           
  1978  0074                     ___awdiv@counter:	
  1979                           ; 1 bytes @ 0x4
  1980                           
  1981  0074                     i1Dio_ReadChannel@output:	
  1982                           ; 1 bytes @ 0x4
  1983                           
  1984  0074                     i1___lbmod@rem:	
  1985                           ; 1 bytes @ 0x4
  1986                           
  1987  0074                     i1___lwdiv@quotient:	
  1988                           ; 1 bytes @ 0x4
  1989                           
  1990                           
  1991                           ; 2 bytes @ 0x4
  1992  0074                     	ds	1
  1993  0075                     ?i1_Dio_WritePort:
  1994  0075                     ___awdiv@sign:	
  1995                           ; 1 bytes @ 0x5
  1996                           
  1997  0075                     i1Dio_ReadChannel@ChannelId:	
  1998                           ; 1 bytes @ 0x5
  1999                           
  2000  0075                     i1Dio_WritePort@Level:	
  2001                           ; 1 bytes @ 0x5
  2002                           
  2003  0075                     i1Eep_Read@i:	
  2004                           ; 1 bytes @ 0x5
  2005                           
  2006                           
  2007                           ; 2 bytes @ 0x5
  2008  0075                     	ds	1
  2009  0076                     ??i1_task1:
  2010  0076                     ??i1_task3:	
  2011                           ; 1 bytes @ 0x6
  2012                           
  2013  0076                     ??i1_task4:	
  2014                           ; 1 bytes @ 0x6
  2015                           
  2016  0076                     ??i1_Dio_WritePort:	
  2017                           ; 1 bytes @ 0x6
  2018                           
  2019  0076                     i1Dio_WritePort@PortId:	
  2020                           ; 1 bytes @ 0x6
  2021                           
  2022  0076                     i1___lwdiv@counter:	
  2023                           ; 1 bytes @ 0x6
  2024                           
  2025  0076                     ___awdiv@quotient:	
  2026                           ; 1 bytes @ 0x6
  2027                           
  2028                           
  2029                           ; 2 bytes @ 0x6
  2030  0076                     	ds	1
  2031  0077                     ?i1___lwmod:
  2032  0077                     i1Eep_Read@EepromAddress:	
  2033                           ; 2 bytes @ 0x7
  2034                           
  2035  0077                     i1Dio_WritePort@Port_Ptr:	
  2036                           ; 1 bytes @ 0x7
  2037                           
  2038  0077                     i1___lwmod@divisor:	
  2039                           ; 2 bytes @ 0x7
  2040                           
  2041                           
  2042                           ; 2 bytes @ 0x7
  2043  0077                     	ds	1
  2044  0078                     ??_Adc_CallbackFn:
  2045  0078                     ??i1_task2:	
  2046                           ; 1 bytes @ 0x8
  2047                           
  2048                           
  2049                           ; 1 bytes @ 0x8
  2050  0078                     	ds	1
  2051  0079                     i1___lwmod@dividend:
  2052                           
  2053                           ; 2 bytes @ 0x9
  2054  0079                     	ds	2
  2055  007B                     ??i1___lwmod:
  2056  007B                     i1___lwmod@counter:	
  2057                           ; 1 bytes @ 0xB
  2058                           
  2059                           
  2060                           ; 1 bytes @ 0xB
  2061  007B                     	ds	1
  2062  007C                     ?i1_Disp_DisplayNb:
  2063  007C                     i1Disp_DisplayNb@Mode:	
  2064                           ; 1 bytes @ 0xC
  2065                           
  2066                           
  2067                           ; 1 bytes @ 0xC
  2068  007C                     	ds	1
  2069  007D                     i1Disp_DisplayNb@var:
  2070                           
  2071                           ; 1 bytes @ 0xD
  2072  007D                     	ds	1
  2073  007E                     ??_TickHandler:
  2074  007E                     ??_Interrupt_TimerCallbackFn:	
  2075                           ; 1 bytes @ 0xE
  2076                           
  2077  007E                     ??i1_task5:	
  2078                           ; 1 bytes @ 0xE
  2079                           
  2080  007E                     ??i1_Os2_scheduler:	
  2081                           ; 1 bytes @ 0xE
  2082                           
  2083                           
  2084                           	psect	cstackBANK0
  2085  0020                     __pcstackBANK0:	
  2086                           ; 1 bytes @ 0xE
  2087                           
  2088  0020                     ??i1_Disp_DisplayNb:
  2089                           
  2090                           ; 1 bytes @ 0x0
  2091  0020                     	ds	2
  2092  0022                     ??_ISR:
  2093                           
  2094                           ; 1 bytes @ 0x2
  2095  0022                     	ds	4
  2096  0026                     ??_Os2_Init:
  2097  0026                     ??_Os2_AddThreads:	
  2098                           ; 1 bytes @ 0x6
  2099                           
  2100  0026                     ??_Dio_ReadChannel:	
  2101                           ; 1 bytes @ 0x6
  2102                           
  2103  0026                     ?_Interrupt_Enable:	
  2104                           ; 1 bytes @ 0x6
  2105                           
  2106  0026                     ??_I2C_Master_Wait:	
  2107                           ; 1 bytes @ 0x6
  2108                           
  2109  0026                     ??_Disp_GetDislayValue:	
  2110                           ; 1 bytes @ 0x6
  2111                           
  2112  0026                     ??_I2c_WriteSlaveAddress:	
  2113                           ; 1 bytes @ 0x6
  2114                           
  2115  0026                     ?_I2c_WriteIB:	
  2116                           ; 1 bytes @ 0x6
  2117                           
  2118  0026                     ?_I2c_ReadIB:	
  2119                           ; 1 bytes @ 0x6
  2120                           
  2121  0026                     ??_I2C_Master_Start:	
  2122                           ; 1 bytes @ 0x6
  2123                           
  2124  0026                     ??_I2C_Master_RepeatedStart:	
  2125                           ; 1 bytes @ 0x6
  2126                           
  2127  0026                     ??_I2C_Master_Stop:	
  2128                           ; 1 bytes @ 0x6
  2129                           
  2130  0026                     ??_I2C_ACK:	
  2131                           ; 1 bytes @ 0x6
  2132                           
  2133  0026                     ?___bmul:	
  2134                           ; 1 bytes @ 0x6
  2135                           
  2136  0026                     ?___lbdiv:	
  2137                           ; 1 bytes @ 0x6
  2138                           
  2139  0026                     ?___lbmod:	
  2140                           ; 1 bytes @ 0x6
  2141                           
  2142  0026                     ?___wmul:	
  2143                           ; 1 bytes @ 0x6
  2144                           
  2145  0026                     ?___lldiv:	
  2146                           ; 2 bytes @ 0x6
  2147                           
  2148  0026                     ?___aldiv:	
  2149                           ; 4 bytes @ 0x6
  2150                           
  2151  0026                     I2c_WriteSlaveAddress@data:	
  2152                           ; 4 bytes @ 0x6
  2153                           
  2154  0026                     I2c_WriteIB@DataBufferPtr:	
  2155                           ; 1 bytes @ 0x6
  2156                           
  2157  0026                     I2c_ReadIB@DataBufferPtr:	
  2158                           ; 1 bytes @ 0x6
  2159                           
  2160  0026                     Interrupt_Enable@callback:	
  2161                           ; 1 bytes @ 0x6
  2162                           
  2163  0026                     ___bmul@multiplicand:	
  2164                           ; 1 bytes @ 0x6
  2165                           
  2166  0026                     ___lbdiv@divisor:	
  2167                           ; 1 bytes @ 0x6
  2168                           
  2169  0026                     ___lbmod@divisor:	
  2170                           ; 1 bytes @ 0x6
  2171                           
  2172  0026                     ___wmul@multiplier:	
  2173                           ; 1 bytes @ 0x6
  2174                           
  2175  0026                     ___lldiv@divisor:	
  2176                           ; 2 bytes @ 0x6
  2177                           
  2178  0026                     ___aldiv@divisor:	
  2179                           ; 4 bytes @ 0x6
  2180                           
  2181                           
  2182                           ; 4 bytes @ 0x6
  2183  0026                     	ds	1
  2184  0027                     ?_Eep_Read:
  2185  0027                     ??_Interrupt_Enable:	
  2186                           ; 1 bytes @ 0x7
  2187                           
  2188  0027                     ??_I2c_WriteIB:	
  2189                           ; 1 bytes @ 0x7
  2190                           
  2191  0027                     ??_I2c_ReadIB:	
  2192                           ; 1 bytes @ 0x7
  2193                           
  2194  0027                     ??___bmul:	
  2195                           ; 1 bytes @ 0x7
  2196                           
  2197  0027                     ??___lbdiv:	
  2198                           ; 1 bytes @ 0x7
  2199                           
  2200  0027                     ??___lbmod:	
  2201                           ; 1 bytes @ 0x7
  2202                           
  2203  0027                     Dio_ReadChannel@x:	
  2204                           ; 1 bytes @ 0x7
  2205                           
  2206  0027                     Interrupt_Enable@Interrupt_Source:	
  2207                           ; 1 bytes @ 0x7
  2208                           
  2209  0027                     Eep_Read@DataBufferPtr:	
  2210                           ; 1 bytes @ 0x7
  2211                           
  2212  0027                     Os2_Init@EndTimes:	
  2213                           ; 1 bytes @ 0x7
  2214                           
  2215  0027                     Os2_AddThreads@Tasks:	
  2216                           ; 1 bytes @ 0x7
  2217                           
  2218  0027                     ___bmul@product:	
  2219                           ; 1 bytes @ 0x7
  2220                           
  2221  0027                     ___lbdiv@dividend:	
  2222                           ; 1 bytes @ 0x7
  2223                           
  2224                           
  2225                           ; 1 bytes @ 0x7
  2226  0027                     	ds	1
  2227  0028                     Disp_GetDislayValue@v:
  2228  0028                     Eep_Read@Length:	
  2229                           ; 1 bytes @ 0x8
  2230                           
  2231  0028                     ___bmul@multiplier:	
  2232                           ; 1 bytes @ 0x8
  2233                           
  2234  0028                     ___lbdiv@counter:	
  2235                           ; 1 bytes @ 0x8
  2236                           
  2237  0028                     ___lbmod@dividend:	
  2238                           ; 1 bytes @ 0x8
  2239                           
  2240  0028                     Dio_ReadChannel@Pin_Ptr:	
  2241                           ; 1 bytes @ 0x8
  2242                           
  2243  0028                     Os2_Init@i:	
  2244                           ; 2 bytes @ 0x8
  2245                           
  2246  0028                     Os2_AddThreads@i:	
  2247                           ; 2 bytes @ 0x8
  2248                           
  2249  0028                     ___wmul@multiplicand:	
  2250                           ; 2 bytes @ 0x8
  2251                           
  2252                           
  2253                           ; 2 bytes @ 0x8
  2254  0028                     	ds	1
  2255  0029                     ?_Port_Init:
  2256  0029                     ??_Eep_Read:	
  2257                           ; 1 bytes @ 0x9
  2258                           
  2259  0029                     ___lbdiv@quotient:	
  2260                           ; 1 bytes @ 0x9
  2261                           
  2262  0029                     ___lbmod@counter:	
  2263                           ; 1 bytes @ 0x9
  2264                           
  2265  0029                     Port_Init@ConfigPtr:	
  2266                           ; 1 bytes @ 0x9
  2267                           
  2268                           
  2269                           ; 2 bytes @ 0x9
  2270  0029                     	ds	1
  2271  002A                     ??___wmul:
  2272  002A                     Dio_ReadChannel@output:	
  2273                           ; 1 bytes @ 0xA
  2274                           
  2275  002A                     ___lbmod@rem:	
  2276                           ; 1 bytes @ 0xA
  2277                           
  2278  002A                     ___wmul@product:	
  2279                           ; 1 bytes @ 0xA
  2280                           
  2281  002A                     ___lldiv@dividend:	
  2282                           ; 2 bytes @ 0xA
  2283                           
  2284  002A                     ___aldiv@dividend:	
  2285                           ; 4 bytes @ 0xA
  2286                           
  2287                           
  2288                           ; 4 bytes @ 0xA
  2289  002A                     	ds	1
  2290  002B                     ??_Port_Init:
  2291  002B                     ?_Dio_WritePort:	
  2292                           ; 1 bytes @ 0xB
  2293                           
  2294  002B                     Dio_ReadChannel@ChannelId:	
  2295                           ; 1 bytes @ 0xB
  2296                           
  2297  002B                     Dio_WritePort@Level:	
  2298                           ; 1 bytes @ 0xB
  2299                           
  2300  002B                     Eep_Read@i:	
  2301                           ; 1 bytes @ 0xB
  2302                           
  2303                           
  2304                           ; 2 bytes @ 0xB
  2305  002B                     	ds	1
  2306  002C                     ??_task1:
  2307  002C                     ??_task3:	
  2308                           ; 1 bytes @ 0xC
  2309                           
  2310  002C                     ??_task4:	
  2311                           ; 1 bytes @ 0xC
  2312                           
  2313  002C                     ??_Dio_WritePort:	
  2314                           ; 1 bytes @ 0xC
  2315                           
  2316  002C                     ?___lwdiv:	
  2317                           ; 1 bytes @ 0xC
  2318                           
  2319  002C                     Dio_WritePort@PortId:	
  2320                           ; 2 bytes @ 0xC
  2321                           
  2322  002C                     ___lwdiv@divisor:	
  2323                           ; 1 bytes @ 0xC
  2324                           
  2325                           
  2326                           ; 2 bytes @ 0xC
  2327  002C                     	ds	1
  2328  002D                     Eep_Read@EepromAddress:
  2329  002D                     Dio_WritePort@Port_Ptr:	
  2330                           ; 1 bytes @ 0xD
  2331                           
  2332                           
  2333                           ; 2 bytes @ 0xD
  2334  002D                     	ds	1
  2335  002E                     ??_task2:
  2336  002E                     ??___lldiv:	
  2337                           ; 1 bytes @ 0xE
  2338                           
  2339  002E                     ??___aldiv:	
  2340                           ; 1 bytes @ 0xE
  2341                           
  2342  002E                     ___aldiv@counter:	
  2343                           ; 1 bytes @ 0xE
  2344                           
  2345  002E                     Port_Init@Port_Ptr:	
  2346                           ; 1 bytes @ 0xE
  2347                           
  2348  002E                     ___lwdiv@dividend:	
  2349                           ; 2 bytes @ 0xE
  2350                           
  2351  002E                     ___lldiv@quotient:	
  2352                           ; 2 bytes @ 0xE
  2353                           
  2354                           
  2355                           ; 4 bytes @ 0xE
  2356  002E                     	ds	1
  2357  002F                     ___aldiv@sign:
  2358                           
  2359                           ; 1 bytes @ 0xF
  2360  002F                     	ds	1
  2361  0030                     ??___lwdiv:
  2362  0030                     ___lwdiv@counter:	
  2363                           ; 1 bytes @ 0x10
  2364                           
  2365  0030                     Port_Init@Port_Dir_Ptr:	
  2366                           ; 1 bytes @ 0x10
  2367                           
  2368  0030                     ___aldiv@quotient:	
  2369                           ; 2 bytes @ 0x10
  2370                           
  2371                           
  2372                           ; 4 bytes @ 0x10
  2373  0030                     	ds	1
  2374  0031                     ___lwdiv@quotient:
  2375                           
  2376                           ; 2 bytes @ 0x11
  2377  0031                     	ds	1
  2378  0032                     ??_Port_InitPort:
  2379  0032                     ??_Adc_Init:	
  2380                           ; 1 bytes @ 0x12
  2381                           
  2382  0032                     Port_InitPort@ConfigPtr:	
  2383                           ; 1 bytes @ 0x12
  2384                           
  2385  0032                     ___lldiv@counter:	
  2386                           ; 1 bytes @ 0x12
  2387                           
  2388                           
  2389                           ; 1 bytes @ 0x12
  2390  0032                     	ds	1
  2391  0033                     ??_I2c_Init:
  2392  0033                     ?___lwmod:	
  2393                           ; 1 bytes @ 0x13
  2394                           
  2395  0033                     Port_InitPort@i:	
  2396                           ; 2 bytes @ 0x13
  2397                           
  2398  0033                     ___lwmod@divisor:	
  2399                           ; 2 bytes @ 0x13
  2400                           
  2401                           
  2402                           ; 2 bytes @ 0x13
  2403  0033                     	ds	1
  2404  0034                     ??_Gpt_Init:
  2405  0034                     I2c_Init@Config_Ptr:	
  2406                           ; 1 bytes @ 0x14
  2407                           
  2408  0034                     Adc_Init@i:	
  2409                           ; 1 bytes @ 0x14
  2410                           
  2411                           
  2412                           ; 2 bytes @ 0x14
  2413  0034                     	ds	1
  2414  0035                     ??_Disp_Init:
  2415  0035                     ??_Eep_Init:	
  2416                           ; 1 bytes @ 0x15
  2417                           
  2418  0035                     Eep_Init@ConfigPtr:	
  2419                           ; 1 bytes @ 0x15
  2420                           
  2421  0035                     ___lwmod@dividend:	
  2422                           ; 1 bytes @ 0x15
  2423                           
  2424                           
  2425                           ; 2 bytes @ 0x15
  2426  0035                     	ds	1
  2427  0036                     Gpt_Init@ConfigPtr:
  2428  0036                     Adc_Init@Adc_Config:	
  2429                           ; 1 bytes @ 0x16
  2430                           
  2431  0036                     Disp_Init@ConfigPtr:	
  2432                           ; 1 bytes @ 0x16
  2433                           
  2434                           
  2435                           ; 1 bytes @ 0x16
  2436  0036                     	ds	1
  2437  0037                     ??_TempSensor_Init:
  2438  0037                     ??_Pwm_Init:	
  2439                           ; 1 bytes @ 0x17
  2440                           
  2441  0037                     ??___lwmod:	
  2442                           ; 1 bytes @ 0x17
  2443                           
  2444  0037                     TempSensor_Init@ConfigPtr:	
  2445                           ; 1 bytes @ 0x17
  2446                           
  2447  0037                     ___lwmod@counter:	
  2448                           ; 1 bytes @ 0x17
  2449                           
  2450  0037                     Disp_Init@i:	
  2451                           ; 1 bytes @ 0x17
  2452                           
  2453                           
  2454                           ; 2 bytes @ 0x17
  2455  0037                     	ds	1
  2456  0038                     ?_Disp_DisplayNb:
  2457  0038                     Disp_DisplayNb@Mode:	
  2458                           ; 1 bytes @ 0x18
  2459                           
  2460                           
  2461                           ; 1 bytes @ 0x18
  2462  0038                     	ds	1
  2463  0039                     ??_Disp_DisplayNb:
  2464                           
  2465                           ; 1 bytes @ 0x19
  2466  0039                     	ds	2
  2467  003B                     Disp_DisplayNb@var:
  2468  003B                     Pwm_Init@DutyCycle:	
  2469                           ; 1 bytes @ 0x1B
  2470                           
  2471                           
  2472                           ; 2 bytes @ 0x1B
  2473  003B                     	ds	1
  2474  003C                     ??_Os2_scheduler:
  2475  003C                     ??_task5:	
  2476                           ; 1 bytes @ 0x1C
  2477                           
  2478                           
  2479                           ; 1 bytes @ 0x1C
  2480  003C                     	ds	1
  2481  003D                     Pwm_Init@ConfigPtr:
  2482                           
  2483                           ; 1 bytes @ 0x1D
  2484  003D                     	ds	1
  2485  003E                     Pwm_Init@Gpt_Config2:
  2486                           
  2487                           ; 8 bytes @ 0x1E
  2488  003E                     	ds	8
  2489  0046                     ??_Os2_start:
  2490  0046                     ??_TempSystem_Init:	
  2491                           ; 1 bytes @ 0x26
  2492                           
  2493  0046                     ??_main:	
  2494                           ; 1 bytes @ 0x26
  2495                           
  2496  0046                     ??_Init_Task:	
  2497                           ; 1 bytes @ 0x26
  2498                           
  2499                           
  2500                           	psect	maintext
  2501  0A3C                     __pmaintext:	
  2502                           ; 1 bytes @ 0x26
  2503 ;;
  2504 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2505 ;;
  2506 ;; *************** function _main *****************
  2507 ;; Defined at:
  2508 ;;		line 317 in file "main.c"
  2509 ;; Parameters:    Size  Location     Type
  2510 ;;		None
  2511 ;; Auto vars:     Size  Location     Type
  2512 ;;		None
  2513 ;; Return value:  Size  Location     Type
  2514 ;;                  2  136[None  ] int 
  2515 ;; Registers used:
  2516 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2517 ;; Tracked objects:
  2518 ;;		On entry : B00/0
  2519 ;;		On exit  : 0/0
  2520 ;;		Unchanged: 0/0
  2521 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2522 ;;      Params:         0       0       0       0       0
  2523 ;;      Locals:         0       0       0       0       0
  2524 ;;      Temps:          0       0       0       0       0
  2525 ;;      Totals:         0       0       0       0       0
  2526 ;;Total ram usage:        0 bytes
  2527 ;; Hardware stack levels required when called:   14
  2528 ;; This function calls:
  2529 ;;		_Os2_AddThreads
  2530 ;;		_Os2_Init
  2531 ;;		_Os2_start
  2532 ;;		_task1
  2533 ;;		_task2
  2534 ;;		_task3
  2535 ;;		_task4
  2536 ;;		_task5
  2537 ;; This function is called by:
  2538 ;;		Startup code after reset
  2539 ;; This function uses a non-reentrant model
  2540 ;;
  2541                           
  2542                           
  2543                           ;psect for function _main
  2544  0A3C                     _main:
  2545  0A3C                     l4629:	
  2546                           ;incstack = 0
  2547 ;; hardware stack exceeded
  2548                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2549                           
  2550                           
  2551                           ;main.c: 319:     Os2_Init(EndTimes);
  2552  0A3C  30D1               	movlw	(low (_EndTimes| (0+256)))& (0+255)
  2553  0A3D  120A  158A  21D7  120A  158A  	fcall	_Os2_Init
  2554                           
  2555                           ;main.c: 320:     Os2_AddThreads(Tasks);
  2556  0A42  30DA               	movlw	(low (_Tasks| (0+256)))& (0+255)
  2557  0A43  120A  158A  2219  120A  158A  	fcall	_Os2_AddThreads
  2558                           
  2559                           ;main.c: 321:  Os2_start();
  2560  0A48  120A  158A  231F  120A  158A  	fcall	_Os2_start
  2561  0A4D                     l4631:
  2562                           
  2563                           ;main.c: 323:     {;main.c: 324:         task1();task2();task3();task4();task5();
  2564  0A4D  120A  158A  25A3  120A  158A  	fcall	_task1
  2565  0A52  120A  158A  250F  120A  158A  	fcall	_task2
  2566  0A57  120A  158A  25BB  120A  158A  	fcall	_task3
  2567  0A5C  120A  158A  25E0  120A  158A  	fcall	_task4
  2568  0A61  120A  118A  2488  120A  158A  	fcall	_task5
  2569  0A66  2A4D               	goto	l4631
  2570  0A67                     __end_of_main:
  2571                           
  2572                           	psect	text1
  2573  0B1F                     __ptext1:	
  2574 ;; *************** function _Os2_start *****************
  2575 ;; Defined at:
  2576 ;;		line 26 in file "OS/OS2.c"
  2577 ;; Parameters:    Size  Location     Type
  2578 ;;		None
  2579 ;; Auto vars:     Size  Location     Type
  2580 ;;		None
  2581 ;; Return value:  Size  Location     Type
  2582 ;;                  1    wreg      void 
  2583 ;; Registers used:
  2584 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2585 ;; Tracked objects:
  2586 ;;		On entry : 0/0
  2587 ;;		On exit  : 0/0
  2588 ;;		Unchanged: 0/0
  2589 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2590 ;;      Params:         0       0       0       0       0
  2591 ;;      Locals:         0       0       0       0       0
  2592 ;;      Temps:          0       0       0       0       0
  2593 ;;      Totals:         0       0       0       0       0
  2594 ;;Total ram usage:        0 bytes
  2595 ;; Hardware stack levels used:    1
  2596 ;; Hardware stack levels required when called:   13
  2597 ;; This function calls:
  2598 ;;		_Init_Task
  2599 ;;		_Os2_scheduler
  2600 ;; This function is called by:
  2601 ;;		_main
  2602 ;; This function uses a non-reentrant model
  2603 ;;
  2604                           
  2605                           
  2606                           ;psect for function _Os2_start
  2607  0B1F                     _Os2_start:
  2608                           
  2609                           ;OS/OS2.c: 29:  Init_Task();
  2610                           
  2611                           ;incstack = 0
  2612 ;; hardware stack exceeded
  2613                           ; Regs used in _Os2_start: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2614  0B1F  120A  118A  208D  120A  158A  	fcall	_Init_Task
  2615                           
  2616                           ;OS/OS2.c: 32:  Os2_scheduler();
  2617  0B24  2B25               	ljmp	l4581
  2618  0B25                     __end_of_Os2_start:
  2619  0B25                     __ptext2:	
  2620 ;; *************** function _Os2_scheduler *****************
  2621 ;; Defined at:
  2622 ;;		line 41 in file "OS/OS2.c"
  2623 ;; Parameters:    Size  Location     Type
  2624 ;;		None
  2625 ;; Auto vars:     Size  Location     Type
  2626 ;;		None
  2627 ;; Return value:  Size  Location     Type
  2628 ;;                  1    wreg      void 
  2629 ;; Registers used:
  2630 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2631 ;; Tracked objects:
  2632 ;;		On entry : B00/0
  2633 ;;		On exit  : 0/0
  2634 ;;		Unchanged: 0/0
  2635 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2636 ;;      Params:         0       0       0       0       0
  2637 ;;      Locals:         0       0       0       0       0
  2638 ;;      Temps:          0       0       0       0       0
  2639 ;;      Totals:         0       0       0       0       0
  2640 ;;Total ram usage:        0 bytes
  2641 ;; Hardware stack levels used:    1
  2642 ;; Hardware stack levels required when called:   12
  2643 ;; This function calls:
  2644 ;;		_task1
  2645 ;;		_task2
  2646 ;;		_task3
  2647 ;;		_task4
  2648 ;;		_task5
  2649 ;; This function is called by:
  2650 ;;		_Os2_start
  2651 ;; This function uses a non-reentrant model
  2652 ;;
  2653                           
  2654                           
  2655                           ;psect for function _Os2_scheduler
  2656  0B25                     _Os2_scheduler:
  2657  0B25                     l4581:	
  2658                           ;incstack = 0
  2659 ;; hardware stack exceeded
  2660                           ; Regs used in _Os2_scheduler: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2661                           
  2662                           
  2663                           ;OS/OS2.c: 43:     TickCount += 1;
  2664  0B25  0ADC               	incf	_TickCount,f
  2665                           
  2666                           ;OS/OS2.c: 45:     if(TickCount<=States_EndTime[0])
  2667  0B26  085C               	movf	_TickCount,w
  2668  0B27  1683               	bsf	3,5	;RP0=1, select bank1
  2669  0B28  0257               	subwf	_States_EndTime^(0+128),w
  2670  0B29  1C03               	skipc
  2671  0B2A  2B31               	goto	l4587
  2672                           
  2673                           ;OS/OS2.c: 46:     {;OS/OS2.c: 47:         TaskTable[0]();
  2674  0B2B  1283               	bcf	3,5	;RP0=0, select bank0
  2675  0B2C  0846               	movf	_TaskTable,w
  2676  0B2D  120A  118A  2051   	fcall	fptable
  2677                           
  2678                           ;OS/OS2.c: 48:     }
  2679  0B30  0008               	return
  2680  0B31                     l4587:
  2681  0B31  1283               	bcf	3,5	;RP0=0, select bank0
  2682  0B32  085C               	movf	_TickCount,w
  2683  0B33  1683               	bsf	3,5	;RP0=1, select bank1
  2684  0B34  0258               	subwf	(_States_EndTime^(0+128)+1),w
  2685  0B35  1C03               	skipc
  2686  0B36  2B3D               	goto	l4591
  2687                           
  2688                           ;OS/OS2.c: 50:     {;OS/OS2.c: 51:         TaskTable[1]();
  2689  0B37  1283               	bcf	3,5	;RP0=0, select bank0
  2690  0B38  0847               	movf	low ((_TaskTable| 0+1)),w
  2691  0B39  120A  118A  2051   	fcall	fptable
  2692                           
  2693                           ;OS/OS2.c: 52:     }
  2694  0B3C  0008               	return
  2695  0B3D                     l4591:
  2696  0B3D  1283               	bcf	3,5	;RP0=0, select bank0
  2697  0B3E  085C               	movf	_TickCount,w
  2698  0B3F  1683               	bsf	3,5	;RP0=1, select bank1
  2699  0B40  0259               	subwf	(_States_EndTime^(0+128)+2),w
  2700  0B41  1C03               	skipc
  2701  0B42  2B49               	goto	l4595
  2702                           
  2703                           ;OS/OS2.c: 54:     {;OS/OS2.c: 55:         TaskTable[2]();
  2704  0B43  1283               	bcf	3,5	;RP0=0, select bank0
  2705  0B44  0848               	movf	low ((_TaskTable| 0+2)),w
  2706  0B45  120A  118A  2051   	fcall	fptable
  2707                           
  2708                           ;OS/OS2.c: 56:     }
  2709  0B48  0008               	return
  2710  0B49                     l4595:
  2711  0B49  1283               	bcf	3,5	;RP0=0, select bank0
  2712  0B4A  085C               	movf	_TickCount,w
  2713  0B4B  1683               	bsf	3,5	;RP0=1, select bank1
  2714  0B4C  025A               	subwf	(_States_EndTime^(0+128)+3),w
  2715  0B4D  1C03               	skipc
  2716  0B4E  2B55               	goto	l4599
  2717                           
  2718                           ;OS/OS2.c: 58:     {;OS/OS2.c: 59:         TaskTable[3]();
  2719  0B4F  1283               	bcf	3,5	;RP0=0, select bank0
  2720  0B50  0849               	movf	low ((_TaskTable| 0+3)),w
  2721  0B51  120A  118A  2051   	fcall	fptable
  2722                           
  2723                           ;OS/OS2.c: 60:     }
  2724  0B54  0008               	return
  2725  0B55                     l4599:
  2726  0B55  1283               	bcf	3,5	;RP0=0, select bank0
  2727  0B56  085C               	movf	_TickCount,w
  2728  0B57  1683               	bsf	3,5	;RP0=1, select bank1
  2729  0B58  025B               	subwf	(_States_EndTime^(0+128)+4),w
  2730  0B59  1C03               	skipc
  2731  0B5A  2B61               	goto	l4603
  2732                           
  2733                           ;OS/OS2.c: 62:     {;OS/OS2.c: 63:         TaskTable[4]();
  2734  0B5B  1283               	bcf	3,5	;RP0=0, select bank0
  2735  0B5C  084A               	movf	low ((_TaskTable| 0+4)),w
  2736  0B5D  120A  118A  2051   	fcall	fptable
  2737                           
  2738                           ;OS/OS2.c: 64:     }
  2739  0B60  0008               	return
  2740  0B61                     l4603:
  2741                           
  2742                           ;OS/OS2.c: 66:     {;OS/OS2.c: 67:         TickCount = 0;
  2743  0B61  1283               	bcf	3,5	;RP0=0, select bank0
  2744  0B62  01DC               	clrf	_TickCount
  2745  0B63  0008               	return
  2746  0B64                     __end_of_Os2_scheduler:
  2747                           
  2748                           	psect	text5
  2749  0D0F                     __ptext5:	
  2750 ;; *************** function _task2 *****************
  2751 ;; Defined at:
  2752 ;;		line 360 in file "main.c"
  2753 ;; Parameters:    Size  Location     Type
  2754 ;;		None
  2755 ;; Auto vars:     Size  Location     Type
  2756 ;;		None
  2757 ;; Return value:  Size  Location     Type
  2758 ;;                  1    wreg      void 
  2759 ;; Registers used:
  2760 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2761 ;; Tracked objects:
  2762 ;;		On entry : 300/0
  2763 ;;		On exit  : 300/0
  2764 ;;		Unchanged: 0/0
  2765 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2766 ;;      Params:         0       0       0       0       0
  2767 ;;      Locals:         0       0       0       0       0
  2768 ;;      Temps:          0       0       0       0       0
  2769 ;;      Totals:         0       0       0       0       0
  2770 ;;Total ram usage:        0 bytes
  2771 ;; Hardware stack levels used:    1
  2772 ;; Hardware stack levels required when called:   11
  2773 ;; This function calls:
  2774 ;;		_Eep_Read
  2775 ;; This function is called by:
  2776 ;;		_main
  2777 ;;		i1_Os2_scheduler
  2778 ;;		_Os2_scheduler
  2779 ;; This function uses a non-reentrant model
  2780 ;;
  2781                           
  2782                           
  2783                           ;psect for function _task2
  2784  0D0F                     _task2:
  2785  0D0F                     l159:	
  2786                           ;incstack = 0
  2787 ;; hardware stack exceeded
  2788                           ; Regs used in _task2: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2789                           ;main.c: 362:     while(1)
  2790                           
  2791                           
  2792                           ;main.c: 363:     {;main.c: 364:         GIE=0;
  2793  0D0F  138B               	bcf	11,7	;volatile
  2794                           
  2795                           ;main.c: 365:         if(State == 1)
  2796  0D10  0B64               	decfsz	_State,w
  2797  0D11  2D22               	goto	l3835
  2798                           
  2799                           ;main.c: 366:         {;main.c: 367:             Eep_Read (Eeprom_Address,&SetTemp,1);
  2800  0D12  3066               	movlw	(low (_SetTemp| 0))& (0+255)
  2801  0D13  00A7               	movwf	Eep_Read@DataBufferPtr
  2802  0D14  01A8               	clrf	Eep_Read@Length
  2803  0D15  0AA8               	incf	Eep_Read@Length,f
  2804  0D16  0865               	movf	_Eeprom_Address,w
  2805  0D17  2534  120A  158A   	fcall	_Eep_Read
  2806                           
  2807                           ;main.c: 368:             if(SetTemp == 0)
  2808  0D1A  1283               	bcf	3,5	;RP0=0, select bank0
  2809  0D1B  0866               	movf	_SetTemp,w
  2810  0D1C  1D03               	btfss	3,2
  2811  0D1D  2D20               	goto	l161
  2812                           
  2813                           ;main.c: 369:                 SetTemp = 60 ;
  2814  0D1E  303C               	movlw	60
  2815  0D1F  00E6               	movwf	_SetTemp
  2816  0D20                     l161:
  2817                           
  2818                           ;main.c: 370:             State = 2;
  2819  0D20  3002               	movlw	2
  2820  0D21  00E4               	movwf	_State
  2821  0D22                     l3835:
  2822                           
  2823                           ;main.c: 372:         GIE=1;
  2824  0D22  178B               	bsf	11,7	;volatile
  2825  0D23  2D0F               	goto	l159
  2826  0D24                     __end_of_task2:
  2827  0D24                     __ptext17:	
  2828 ;; *************** function _I2c_ReadIB *****************
  2829 ;; Defined at:
  2830 ;;		line 95 in file "MCAL/I2c.c"
  2831 ;; Parameters:    Size  Location     Type
  2832 ;;  Channel         1    wreg     unsigned char 
  2833 ;;  DataBufferPt    1    6[BANK0 ] PTR unsigned char 
  2834 ;;		 -> Eep_Compare@x(1), SetTemp(1), 
  2835 ;; Auto vars:     Size  Location     Type
  2836 ;;  Channel         1    0[COMMON] unsigned char 
  2837 ;; Return value:  Size  Location     Type
  2838 ;;                  1    wreg      unsigned char 
  2839 ;; Registers used:
  2840 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2841 ;; Tracked objects:
  2842 ;;		On entry : 300/0
  2843 ;;		On exit  : B00/0
  2844 ;;		Unchanged: 0/0
  2845 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2846 ;;      Params:         0       1       0       0       0
  2847 ;;      Locals:         0       0       0       0       0
  2848 ;;      Temps:          0       0       0       0       0
  2849 ;;      Totals:         0       1       0       0       0
  2850 ;;Total ram usage:        1 bytes
  2851 ;; Hardware stack levels used:    1
  2852 ;; Hardware stack levels required when called:    9
  2853 ;; This function calls:
  2854 ;;		_I2C_Master_Wait
  2855 ;; This function is called by:
  2856 ;;		_Eep_Read
  2857 ;; This function uses a non-reentrant model
  2858 ;;
  2859                           
  2860                           
  2861                           ;psect for function _I2c_ReadIB
  2862  0D24                     _I2c_ReadIB:
  2863                           
  2864                           ;MCAL/I2c.c: 95: Std_ReturnType I2c_ReadIB ( I2c_ChannelType Channel, I2c_DataBufferType
      +                          * DataBufferPtr );MCAL/I2c.c: 96: {;MCAL/I2c.c: 114:     {;MCAL/I2c.c: 115:         I2C_
      +                          Master_Wait();
  2865                           
  2866                           ;incstack = 0
  2867 ;; hardware stack exceeded
  2868                           ; Regs used in _I2c_ReadIB: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2869  0D24  2583  120A  158A   	fcall	_I2C_Master_Wait
  2870                           
  2871                           ;MCAL/I2c.c: 116:         (SSPCON2|=(1<<RCEN_BIT));
  2872  0D27  1591               	bsf	17,3	;volatile
  2873  0D28                     l326:	
  2874                           ;MCAL/I2c.c: 117:         while(!SSPIF);
  2875                           
  2876  0D28  1283               	bcf	3,5	;RP0=0, select bank0
  2877  0D29  1D8C               	btfss	12,3	;volatile
  2878  0D2A  2D28               	goto	l326
  2879                           
  2880                           ;MCAL/I2c.c: 118:         SSPIF = 0;
  2881  0D2B  118C               	bcf	12,3	;volatile
  2882                           
  2883                           ;MCAL/I2c.c: 119:         I2C_Master_Wait();
  2884  0D2C  2583               	fcall	_I2C_Master_Wait
  2885                           
  2886                           ;MCAL/I2c.c: 120:         *DataBufferPtr = SSPBUF;
  2887  0D2D  1283               	bcf	3,5	;RP0=0, select bank0
  2888  0D2E  0826               	movf	I2c_ReadIB@DataBufferPtr,w
  2889  0D2F  0084               	movwf	4
  2890  0D30  0813               	movf	19,w	;volatile
  2891  0D31  1383               	bcf	3,7	;select IRP bank0
  2892  0D32  0080               	movwf	0
  2893  0D33  0008               	return
  2894  0D34                     __end_of_I2c_ReadIB:
  2895  0D34                     __ptext14:	
  2896 ;; *************** function _Eep_Read *****************
  2897 ;; Defined at:
  2898 ;;		line 71 in file "EcuAL/Eeprom.c"
  2899 ;; Parameters:    Size  Location     Type
  2900 ;;  EepromAddres    1    wreg     unsigned char 
  2901 ;;  DataBufferPt    1    7[BANK0 ] PTR unsigned char 
  2902 ;;		 -> Eep_Compare@x(1), SetTemp(1), 
  2903 ;;  Length          1    8[BANK0 ] unsigned char 
  2904 ;; Auto vars:     Size  Location     Type
  2905 ;;  EepromAddres    1   13[BANK0 ] unsigned char 
  2906 ;;  i               2   11[BANK0 ] unsigned int 
  2907 ;; Return value:  Size  Location     Type
  2908 ;;                  1    wreg      unsigned char 
  2909 ;; Registers used:
  2910 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2911 ;; Tracked objects:
  2912 ;;		On entry : 300/0
  2913 ;;		On exit  : 300/100
  2914 ;;		Unchanged: 0/0
  2915 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2916 ;;      Params:         0       2       0       0       0
  2917 ;;      Locals:         0       3       0       0       0
  2918 ;;      Temps:          0       2       0       0       0
  2919 ;;      Totals:         0       7       0       0       0
  2920 ;;Total ram usage:        7 bytes
  2921 ;; Hardware stack levels used:    1
  2922 ;; Hardware stack levels required when called:   10
  2923 ;; This function calls:
  2924 ;;		_I2C_ACK
  2925 ;;		_I2C_Master_RepeatedStart
  2926 ;;		_I2C_Master_Start
  2927 ;;		_I2C_Master_Stop
  2928 ;;		_I2c_ReadIB
  2929 ;;		_I2c_WriteIB
  2930 ;;		_I2c_WriteSlaveAddress
  2931 ;; This function is called by:
  2932 ;;		_task2
  2933 ;; This function uses a non-reentrant model
  2934 ;;
  2935                           
  2936                           
  2937                           ;psect for function _Eep_Read
  2938  0D34                     _Eep_Read:
  2939                           
  2940                           ;incstack = 0
  2941 ;; hardware stack exceeded
  2942                           ; Regs used in _Eep_Read: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2943                           ;Eep_Read@EepromAddress stored from wreg
  2944  0D34  00AD               	movwf	Eep_Read@EepromAddress
  2945                           
  2946                           ;EcuAL/Eeprom.c: 71: Std_ReturnType Eep_Read (Eep_AddressType EepromAddress,uint8* DataB
      +                          ufferPtr, Eep_LengthType Length);EcuAL/Eeprom.c: 72: {;EcuAL/Eeprom.c: 96:     {;EcuAL/E
      +                          eprom.c: 97:         I2C_Master_Start();
  2947  0D35  2590  120A  158A   	fcall	_I2C_Master_Start
  2948  0D38                     l641:	
  2949                           ;EcuAL/Eeprom.c: 99:         while(I2c_WriteSlaveAddress(0xA0))
  2950                           
  2951                           
  2952                           ;EcuAL/Eeprom.c: 99:         while(I2c_WriteSlaveAddress(0xA0))
  2953  0D38  30A0               	movlw	160
  2954  0D39  2573  120A  158A   	fcall	_I2c_WriteSlaveAddress
  2955  0D3C  3A00               	xorlw	0
  2956  0D3D  1903               	btfsc	3,2
  2957  0D3E  2D43               	goto	l3605
  2958                           
  2959                           ;EcuAL/Eeprom.c: 100:           I2C_Master_RepeatedStart();
  2960  0D3F  2570  120A  158A   	fcall	_I2C_Master_RepeatedStart
  2961  0D42  2D38               	goto	l641
  2962  0D43                     l3605:
  2963                           
  2964                           ;EcuAL/Eeprom.c: 101:         I2c_WriteIB(0,&EepromAddress);
  2965  0D43  302D               	movlw	(low (Eep_Read@EepromAddress| 0))& (0+255)
  2966  0D44  1283               	bcf	3,5	;RP0=0, select bank0
  2967  0D45  00A6               	movwf	I2c_WriteIB@DataBufferPtr
  2968  0D46  3000               	movlw	0
  2969  0D47  2593  120A  158A   	fcall	_I2c_WriteIB
  2970                           
  2971                           ;EcuAL/Eeprom.c: 102:         I2C_Master_RepeatedStart();
  2972  0D4A  2570  120A  158A   	fcall	_I2C_Master_RepeatedStart
  2973                           
  2974                           ;EcuAL/Eeprom.c: 103:         I2c_WriteSlaveAddress(0xA1);
  2975  0D4D  30A1               	movlw	161
  2976  0D4E  2573  120A  158A   	fcall	_I2c_WriteSlaveAddress
  2977                           
  2978                           ;EcuAL/Eeprom.c: 104:         for(unsigned int i=0; i<Length; i++)
  2979  0D51  1283               	bcf	3,5	;RP0=0, select bank0
  2980  0D52  01AB               	clrf	Eep_Read@i
  2981  0D53  01AC               	clrf	Eep_Read@i+1
  2982  0D54                     l3621:
  2983  0D54  0828               	movf	Eep_Read@Length,w
  2984  0D55  00A9               	movwf	??_Eep_Read
  2985  0D56  01AA               	clrf	??_Eep_Read+1
  2986  0D57  082A               	movf	??_Eep_Read+1,w
  2987  0D58  022C               	subwf	Eep_Read@i+1,w
  2988  0D59  1D03               	skipz
  2989  0D5A  2D5D               	goto	u2635
  2990  0D5B  0829               	movf	??_Eep_Read,w
  2991  0D5C  022B               	subwf	Eep_Read@i,w
  2992  0D5D                     u2635:
  2993  0D5D  1803               	btfsc	3,0
  2994  0D5E  2D6E               	goto	l3623
  2995                           
  2996                           ;EcuAL/Eeprom.c: 105:         {;EcuAL/Eeprom.c: 106:           I2c_ReadIB(0,DataBufferPt
      +                          r++);
  2997  0D5F  0827               	movf	Eep_Read@DataBufferPtr,w
  2998  0D60  00A6               	movwf	I2c_ReadIB@DataBufferPtr
  2999  0D61  3000               	movlw	0
  3000  0D62  2524  120A  158A   	fcall	_I2c_ReadIB
  3001  0D65  0AA7               	incf	Eep_Read@DataBufferPtr,f
  3002                           
  3003                           ;EcuAL/Eeprom.c: 107:           I2C_ACK();
  3004  0D66  258B  120A  158A   	fcall	_I2C_ACK
  3005                           
  3006                           ;EcuAL/Eeprom.c: 108:         }
  3007  0D69  1283               	bcf	3,5	;RP0=0, select bank0
  3008  0D6A  0AAB               	incf	Eep_Read@i,f
  3009  0D6B  1903               	skipnz
  3010  0D6C  0AAC               	incf	Eep_Read@i+1,f
  3011  0D6D  2D54               	goto	l3621
  3012  0D6E                     l3623:
  3013                           
  3014                           ;EcuAL/Eeprom.c: 111:         I2C_Master_Stop();
  3015  0D6E  25A0               	fcall	_I2C_Master_Stop
  3016                           
  3017                           ;EcuAL/Eeprom.c: 112:     };EcuAL/Eeprom.c: 113:     return ((Std_ReturnType)0x00u);
  3018  0D6F  3400               	retlw	0
  3019  0D70                     __end_of_Eep_Read:
  3020  0D70                     __ptext20:	
  3021 ;; *************** function _I2C_Master_RepeatedStart *****************
  3022 ;; Defined at:
  3023 ;;		line 141 in file "MCAL/I2c.c"
  3024 ;; Parameters:    Size  Location     Type
  3025 ;;		None
  3026 ;; Auto vars:     Size  Location     Type
  3027 ;;		None
  3028 ;; Return value:  Size  Location     Type
  3029 ;;                  1    wreg      void 
  3030 ;; Registers used:
  3031 ;;		wreg, status,2, status,0, pclath, cstack
  3032 ;; Tracked objects:
  3033 ;;		On entry : 200/100
  3034 ;;		On exit  : 300/100
  3035 ;;		Unchanged: 0/0
  3036 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3037 ;;      Params:         0       0       0       0       0
  3038 ;;      Locals:         0       0       0       0       0
  3039 ;;      Temps:          0       0       0       0       0
  3040 ;;      Totals:         0       0       0       0       0
  3041 ;;Total ram usage:        0 bytes
  3042 ;; Hardware stack levels used:    1
  3043 ;; Hardware stack levels required when called:    9
  3044 ;; This function calls:
  3045 ;;		_I2C_Master_Wait
  3046 ;; This function is called by:
  3047 ;;		_Eep_Read
  3048 ;; This function uses a non-reentrant model
  3049 ;;
  3050                           
  3051                           
  3052                           ;psect for function _I2C_Master_RepeatedStart
  3053  0D70                     _I2C_Master_RepeatedStart:
  3054                           
  3055                           ;MCAL/I2c.c: 143:   I2C_Master_Wait();
  3056                           
  3057                           ;incstack = 0
  3058 ;; hardware stack exceeded
  3059                           ; Regs used in _I2C_Master_RepeatedStart: [wreg+status,2+status,0+pclath+cstack]
  3060  0D70  2583               	fcall	_I2C_Master_Wait
  3061                           
  3062                           ;MCAL/I2c.c: 144:   (SSPCON2|=(1<<RSEN_BIT));
  3063  0D71  1491               	bsf	17,1	;volatile
  3064  0D72  0008               	return
  3065  0D73                     __end_of_I2C_Master_RepeatedStart:
  3066  0D73                     __ptext15:	
  3067 ;; *************** function _I2c_WriteSlaveAddress *****************
  3068 ;; Defined at:
  3069 ;;		line 57 in file "MCAL/I2c.c"
  3070 ;; Parameters:    Size  Location     Type
  3071 ;;  data            1    wreg     unsigned char 
  3072 ;; Auto vars:     Size  Location     Type
  3073 ;;  data            1    6[BANK0 ] unsigned char 
  3074 ;; Return value:  Size  Location     Type
  3075 ;;                  1    wreg      unsigned char 
  3076 ;; Registers used:
  3077 ;;		wreg, status,2, status,0, pclath, cstack
  3078 ;; Tracked objects:
  3079 ;;		On entry : 300/100
  3080 ;;		On exit  : 300/100
  3081 ;;		Unchanged: 0/0
  3082 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3083 ;;      Params:         0       0       0       0       0
  3084 ;;      Locals:         0       1       0       0       0
  3085 ;;      Temps:          0       0       0       0       0
  3086 ;;      Totals:         0       1       0       0       0
  3087 ;;Total ram usage:        1 bytes
  3088 ;; Hardware stack levels used:    1
  3089 ;; Hardware stack levels required when called:    9
  3090 ;; This function calls:
  3091 ;;		_I2C_Master_Wait
  3092 ;; This function is called by:
  3093 ;;		_Eep_Read
  3094 ;; This function uses a non-reentrant model
  3095 ;;
  3096                           
  3097                           
  3098                           ;psect for function _I2c_WriteSlaveAddress
  3099  0D73                     _I2c_WriteSlaveAddress:
  3100                           
  3101                           ;incstack = 0
  3102 ;; hardware stack exceeded
  3103                           ; Regs used in _I2c_WriteSlaveAddress: [wreg+status,2+status,0+pclath+cstack]
  3104                           ;I2c_WriteSlaveAddress@data stored from wreg
  3105  0D73  1283               	bcf	3,5	;RP0=0, select bank0
  3106  0D74  00A6               	movwf	I2c_WriteSlaveAddress@data
  3107                           
  3108                           ;MCAL/I2c.c: 57: uint8_t I2c_WriteSlaveAddress(uint8_t data);MCAL/I2c.c: 58: {;MCAL/I2c.
      +                          c: 59:   I2C_Master_Wait();
  3109  0D75  2583  120A  158A   	fcall	_I2C_Master_Wait
  3110                           
  3111                           ;MCAL/I2c.c: 60:   SSPBUF = data;
  3112  0D78  1283               	bcf	3,5	;RP0=0, select bank0
  3113  0D79  0826               	movf	I2c_WriteSlaveAddress@data,w
  3114  0D7A  0093               	movwf	19	;volatile
  3115  0D7B                     l314:	
  3116                           ;MCAL/I2c.c: 61:   while(!SSPIF);
  3117                           
  3118  0D7B  1D8C               	btfss	12,3	;volatile
  3119  0D7C  2D7B               	goto	l314
  3120                           
  3121                           ;MCAL/I2c.c: 62:   SSPIF = 0;
  3122  0D7D  118C               	bcf	12,3	;volatile
  3123                           
  3124                           ;MCAL/I2c.c: 63:   return ACKSTAT;
  3125  0D7E  3000               	movlw	0
  3126  0D7F  1683               	bsf	3,5	;RP0=1, select bank1
  3127  0D80  1B11               	btfsc	17,6	;volatile
  3128  0D81  3001               	movlw	1
  3129  0D82  0008               	return
  3130  0D83                     __end_of_I2c_WriteSlaveAddress:
  3131  0D83                     __ptext22:	
  3132 ;; *************** function _I2C_Master_Wait *****************
  3133 ;; Defined at:
  3134 ;;		line 132 in file "MCAL/I2c.c"
  3135 ;; Parameters:    Size  Location     Type
  3136 ;;		None
  3137 ;; Auto vars:     Size  Location     Type
  3138 ;;		None
  3139 ;; Return value:  Size  Location     Type
  3140 ;;                  1    wreg      void 
  3141 ;; Registers used:
  3142 ;;		wreg, status,2
  3143 ;; Tracked objects:
  3144 ;;		On entry : 200/0
  3145 ;;		On exit  : 300/100
  3146 ;;		Unchanged: 0/0
  3147 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3148 ;;      Params:         0       0       0       0       0
  3149 ;;      Locals:         0       0       0       0       0
  3150 ;;      Temps:          0       0       0       0       0
  3151 ;;      Totals:         0       0       0       0       0
  3152 ;;Total ram usage:        0 bytes
  3153 ;; Hardware stack levels used:    1
  3154 ;; Hardware stack levels required when called:    8
  3155 ;; This function calls:
  3156 ;;		Nothing
  3157 ;; This function is called by:
  3158 ;;		_I2c_WriteSlaveAddress
  3159 ;;		_I2c_WriteIB
  3160 ;;		_I2c_ReadIB
  3161 ;;		_I2C_Master_Start
  3162 ;;		_I2C_Master_RepeatedStart
  3163 ;;		_I2C_Master_Stop
  3164 ;;		_I2C_ACK
  3165 ;; This function uses a non-reentrant model
  3166 ;;
  3167                           
  3168                           
  3169                           ;psect for function _I2C_Master_Wait
  3170  0D83                     _I2C_Master_Wait:
  3171  0D83                     l335:	
  3172                           ;MCAL/I2c.c: 134:   while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  3173                           
  3174                           ;incstack = 0
  3175 ;; hardware stack exceeded
  3176                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  3177                           
  3178  0D83  1683               	bsf	3,5	;RP0=1, select bank1
  3179  0D84  1914               	btfsc	20,2	;volatile
  3180  0D85  2D83               	goto	l335
  3181  0D86  0811               	movf	17,w	;volatile
  3182  0D87  391F               	andlw	31
  3183  0D88  1903               	btfsc	3,2
  3184  0D89  0008               	return
  3185  0D8A  2D83               	goto	l335
  3186  0D8B                     __end_of_I2C_Master_Wait:
  3187  0D8B                     __ptext21:	
  3188 ;; *************** function _I2C_ACK *****************
  3189 ;; Defined at:
  3190 ;;		line 152 in file "MCAL/I2c.c"
  3191 ;; Parameters:    Size  Location     Type
  3192 ;;		None
  3193 ;; Auto vars:     Size  Location     Type
  3194 ;;		None
  3195 ;; Return value:  Size  Location     Type
  3196 ;;                  1    wreg      void 
  3197 ;; Registers used:
  3198 ;;		wreg, status,2, status,0, pclath, cstack
  3199 ;; Tracked objects:
  3200 ;;		On entry : B00/0
  3201 ;;		On exit  : 300/100
  3202 ;;		Unchanged: 0/0
  3203 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3204 ;;      Params:         0       0       0       0       0
  3205 ;;      Locals:         0       0       0       0       0
  3206 ;;      Temps:          0       0       0       0       0
  3207 ;;      Totals:         0       0       0       0       0
  3208 ;;Total ram usage:        0 bytes
  3209 ;; Hardware stack levels used:    1
  3210 ;; Hardware stack levels required when called:    9
  3211 ;; This function calls:
  3212 ;;		_I2C_Master_Wait
  3213 ;; This function is called by:
  3214 ;;		_Eep_Read
  3215 ;; This function uses a non-reentrant model
  3216 ;;
  3217                           
  3218                           
  3219                           ;psect for function _I2C_ACK
  3220  0D8B                     _I2C_ACK:
  3221                           
  3222                           ;MCAL/I2c.c: 154:   (SSPCON2&=(~(1<<ACKDT_BIT)));
  3223                           
  3224                           ;incstack = 0
  3225 ;; hardware stack exceeded
  3226                           ; Regs used in _I2C_ACK: [wreg+status,2+status,0+pclath+cstack]
  3227  0D8B  1683               	bsf	3,5	;RP0=1, select bank1
  3228  0D8C  1291               	bcf	17,5	;volatile
  3229                           
  3230                           ;MCAL/I2c.c: 155:   I2C_Master_Wait();
  3231  0D8D  2583               	fcall	_I2C_Master_Wait
  3232                           
  3233                           ;MCAL/I2c.c: 156:   (SSPCON2|=(1<<ACKEN_BIT));
  3234  0D8E  1611               	bsf	17,4	;volatile
  3235  0D8F  0008               	return
  3236  0D90                     __end_of_I2C_ACK:
  3237  0D90                     __ptext19:	
  3238 ;; *************** function _I2C_Master_Start *****************
  3239 ;; Defined at:
  3240 ;;		line 136 in file "MCAL/I2c.c"
  3241 ;; Parameters:    Size  Location     Type
  3242 ;;		None
  3243 ;; Auto vars:     Size  Location     Type
  3244 ;;		None
  3245 ;; Return value:  Size  Location     Type
  3246 ;;                  1    wreg      void 
  3247 ;; Registers used:
  3248 ;;		wreg, status,2, status,0, pclath, cstack
  3249 ;; Tracked objects:
  3250 ;;		On entry : 300/0
  3251 ;;		On exit  : 300/100
  3252 ;;		Unchanged: 0/0
  3253 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3254 ;;      Params:         0       0       0       0       0
  3255 ;;      Locals:         0       0       0       0       0
  3256 ;;      Temps:          0       0       0       0       0
  3257 ;;      Totals:         0       0       0       0       0
  3258 ;;Total ram usage:        0 bytes
  3259 ;; Hardware stack levels used:    1
  3260 ;; Hardware stack levels required when called:    9
  3261 ;; This function calls:
  3262 ;;		_I2C_Master_Wait
  3263 ;; This function is called by:
  3264 ;;		_Eep_Read
  3265 ;; This function uses a non-reentrant model
  3266 ;;
  3267                           
  3268                           
  3269                           ;psect for function _I2C_Master_Start
  3270  0D90                     _I2C_Master_Start:
  3271                           
  3272                           ;MCAL/I2c.c: 138:   I2C_Master_Wait();
  3273                           
  3274                           ;incstack = 0
  3275 ;; hardware stack exceeded
  3276                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  3277  0D90  2583               	fcall	_I2C_Master_Wait
  3278                           
  3279                           ;MCAL/I2c.c: 139:   (SSPCON2|=(1<<SEN_BIT));
  3280  0D91  1411               	bsf	17,0	;volatile
  3281  0D92  0008               	return
  3282  0D93                     __end_of_I2C_Master_Start:
  3283  0D93                     __ptext16:	
  3284 ;; *************** function _I2c_WriteIB *****************
  3285 ;; Defined at:
  3286 ;;		line 66 in file "MCAL/I2c.c"
  3287 ;; Parameters:    Size  Location     Type
  3288 ;;  Channel         1    wreg     unsigned char 
  3289 ;;  DataBufferPt    1    6[BANK0 ] PTR unsigned char 
  3290 ;;		 -> Eep_Erase@x(1), Eep_Read@EepromAddress(1), Eep_Write@EepromAddress(1), 
  3291 ;; Auto vars:     Size  Location     Type
  3292 ;;  Channel         1    0[COMMON] unsigned char 
  3293 ;; Return value:  Size  Location     Type
  3294 ;;                  1    wreg      unsigned char 
  3295 ;; Registers used:
  3296 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3297 ;; Tracked objects:
  3298 ;;		On entry : 300/0
  3299 ;;		On exit  : 300/0
  3300 ;;		Unchanged: 0/0
  3301 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3302 ;;      Params:         0       1       0       0       0
  3303 ;;      Locals:         0       0       0       0       0
  3304 ;;      Temps:          0       0       0       0       0
  3305 ;;      Totals:         0       1       0       0       0
  3306 ;;Total ram usage:        1 bytes
  3307 ;; Hardware stack levels used:    1
  3308 ;; Hardware stack levels required when called:    9
  3309 ;; This function calls:
  3310 ;;		_I2C_Master_Wait
  3311 ;; This function is called by:
  3312 ;;		_Eep_Read
  3313 ;; This function uses a non-reentrant model
  3314 ;;
  3315                           
  3316                           
  3317                           ;psect for function _I2c_WriteIB
  3318  0D93                     _I2c_WriteIB:
  3319                           
  3320                           ;MCAL/I2c.c: 66: Std_ReturnType I2c_WriteIB(I2c_ChannelType Channel, I2c_DataBufferType*
      +                           DataBufferPtr);MCAL/I2c.c: 67: {;MCAL/I2c.c: 85:     {;MCAL/I2c.c: 86:         I2C_Mast
      +                          er_Wait();
  3321                           
  3322                           ;incstack = 0
  3323 ;; hardware stack exceeded
  3324                           ; Regs used in _I2c_WriteIB: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3325  0D93  2583  120A  158A   	fcall	_I2C_Master_Wait
  3326                           
  3327                           ;MCAL/I2c.c: 87:         SSPBUF = *DataBufferPtr;
  3328  0D96  1283               	bcf	3,5	;RP0=0, select bank0
  3329  0D97  0826               	movf	I2c_WriteIB@DataBufferPtr,w
  3330  0D98  0084               	movwf	4
  3331  0D99  1383               	bcf	3,7	;select IRP bank0
  3332  0D9A  0800               	movf	0,w
  3333  0D9B  0093               	movwf	19	;volatile
  3334  0D9C                     l320:	
  3335                           ;MCAL/I2c.c: 88:         while(!SSPIF);
  3336                           
  3337  0D9C  1D8C               	btfss	12,3	;volatile
  3338  0D9D  2D9C               	goto	l320
  3339                           
  3340                           ;MCAL/I2c.c: 89:         SSPIF = 0;
  3341  0D9E  118C               	bcf	12,3	;volatile
  3342                           
  3343                           ;MCAL/I2c.c: 90:         return ACKSTAT;;	Return value of _I2c_WriteIB is never used
  3344  0D9F  0008               	return
  3345  0DA0                     __end_of_I2c_WriteIB:
  3346  0DA0                     __ptext18:	
  3347 ;; *************** function _I2C_Master_Stop *****************
  3348 ;; Defined at:
  3349 ;;		line 146 in file "MCAL/I2c.c"
  3350 ;; Parameters:    Size  Location     Type
  3351 ;;		None
  3352 ;; Auto vars:     Size  Location     Type
  3353 ;;		None
  3354 ;; Return value:  Size  Location     Type
  3355 ;;                  1    wreg      void 
  3356 ;; Registers used:
  3357 ;;		wreg, status,2, status,0, pclath, cstack
  3358 ;; Tracked objects:
  3359 ;;		On entry : 300/0
  3360 ;;		On exit  : 300/100
  3361 ;;		Unchanged: 0/0
  3362 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3363 ;;      Params:         0       0       0       0       0
  3364 ;;      Locals:         0       0       0       0       0
  3365 ;;      Temps:          0       0       0       0       0
  3366 ;;      Totals:         0       0       0       0       0
  3367 ;;Total ram usage:        0 bytes
  3368 ;; Hardware stack levels used:    1
  3369 ;; Hardware stack levels required when called:    9
  3370 ;; This function calls:
  3371 ;;		_I2C_Master_Wait
  3372 ;; This function is called by:
  3373 ;;		_Eep_Read
  3374 ;; This function uses a non-reentrant model
  3375 ;;
  3376                           
  3377                           
  3378                           ;psect for function _I2C_Master_Stop
  3379  0DA0                     _I2C_Master_Stop:
  3380                           
  3381                           ;MCAL/I2c.c: 148:   I2C_Master_Wait();
  3382                           
  3383                           ;incstack = 0
  3384 ;; hardware stack exceeded
  3385                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  3386  0DA0  2583               	fcall	_I2C_Master_Wait
  3387                           
  3388                           ;MCAL/I2c.c: 149:   (SSPCON2|=(1<<PEN_BIT));
  3389  0DA1  1511               	bsf	17,2	;volatile
  3390  0DA2  0008               	return
  3391  0DA3                     __end_of_I2C_Master_Stop:
  3392                           
  3393                           	psect	text6
  3394  0DA3                     __ptext6:	
  3395 ;; *************** function _task1 *****************
  3396 ;; Defined at:
  3397 ;;		line 340 in file "main.c"
  3398 ;; Parameters:    Size  Location     Type
  3399 ;;		None
  3400 ;; Auto vars:     Size  Location     Type
  3401 ;;		None
  3402 ;; Return value:  Size  Location     Type
  3403 ;;                  1    wreg      void 
  3404 ;; Registers used:
  3405 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3406 ;; Tracked objects:
  3407 ;;		On entry : 0/0
  3408 ;;		On exit  : 300/0
  3409 ;;		Unchanged: 0/0
  3410 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3411 ;;      Params:         0       0       0       0       0
  3412 ;;      Locals:         0       0       0       0       0
  3413 ;;      Temps:          0       0       0       0       0
  3414 ;;      Totals:         0       0       0       0       0
  3415 ;;Total ram usage:        0 bytes
  3416 ;; Hardware stack levels used:    1
  3417 ;; Hardware stack levels required when called:    9
  3418 ;; This function calls:
  3419 ;;		_Dio_ReadChannel
  3420 ;; This function is called by:
  3421 ;;		_main
  3422 ;;		i1_Os2_scheduler
  3423 ;;		_Os2_scheduler
  3424 ;; This function uses a non-reentrant model
  3425 ;;
  3426                           
  3427                           
  3428                           ;psect for function _task1
  3429  0DA3                     _task1:
  3430  0DA3                     l148:	
  3431                           ;incstack = 0
  3432 ;; hardware stack exceeded
  3433                           ; Regs used in _task1: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3434                           ;main.c: 342:     while(1)
  3435                           
  3436                           
  3437                           ;main.c: 343:     {;main.c: 344:        GIE=0;
  3438  0DA3  138B               	bcf	11,7	;volatile
  3439                           
  3440                           ;main.c: 345:        if(State == 0)
  3441  0DA4  1283               	bcf	3,5	;RP0=0, select bank0
  3442  0DA5  1303               	bcf	3,6	;RP1=0, select bank0
  3443  0DA6  0864               	movf	_State,w
  3444  0DA7  1D03               	btfss	3,2
  3445  0DA8  2DB9               	goto	l149
  3446                           
  3447                           ;main.c: 346:        {;main.c: 347:            if(!Dio_ReadChannel(ONOFF_BUTTON_CHANNEL)
      +                          )
  3448  0DA9  3001               	movlw	1
  3449  0DAA  2610  120A  158A   	fcall	_Dio_ReadChannel
  3450  0DAD  3A00               	xorlw	0
  3451  0DAE  1D03               	skipz
  3452  0DAF  2DB9               	goto	l149
  3453  0DB0                     l3825:
  3454  0DB0  3001               	movlw	1
  3455  0DB1  2610  120A  158A   	fcall	_Dio_ReadChannel
  3456  0DB4  3A00               	xorlw	0
  3457  0DB5  1903               	skipnz
  3458  0DB6  2DB0               	goto	l3825
  3459                           
  3460                           ;main.c: 351:                 flags.OnOffStateIndicator = 1;
  3461  0DB7  01E4               	clrf	_State
  3462  0DB8  0AE4               	incf	_State,f
  3463  0DB9                     l149:	
  3464                           ;main.c: 353:         }
  3465                           
  3466                           
  3467                           ;main.c: 355:        GIE=1;
  3468  0DB9  178B               	bsf	11,7	;volatile
  3469  0DBA  2DA3               	goto	l148
  3470  0DBB                     __end_of_task1:
  3471  0DBB                     __ptext4:	
  3472 ;; *************** function _task3 *****************
  3473 ;; Defined at:
  3474 ;;		line 377 in file "main.c"
  3475 ;; Parameters:    Size  Location     Type
  3476 ;;		None
  3477 ;; Auto vars:     Size  Location     Type
  3478 ;;		None
  3479 ;; Return value:  Size  Location     Type
  3480 ;;                  1    wreg      void 
  3481 ;; Registers used:
  3482 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3483 ;; Tracked objects:
  3484 ;;		On entry : 300/0
  3485 ;;		On exit  : 300/0
  3486 ;;		Unchanged: 0/0
  3487 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3488 ;;      Params:         0       0       0       0       0
  3489 ;;      Locals:         0       0       0       0       0
  3490 ;;      Temps:          0       0       0       0       0
  3491 ;;      Totals:         0       0       0       0       0
  3492 ;;Total ram usage:        0 bytes
  3493 ;; Hardware stack levels used:    1
  3494 ;; Hardware stack levels required when called:    9
  3495 ;; This function calls:
  3496 ;;		_Dio_ReadChannel
  3497 ;; This function is called by:
  3498 ;;		_main
  3499 ;;		i1_Os2_scheduler
  3500 ;;		_Os2_scheduler
  3501 ;; This function uses a non-reentrant model
  3502 ;;
  3503                           
  3504                           
  3505                           ;psect for function _task3
  3506  0DBB                     _task3:
  3507  0DBB                     l167:	
  3508                           ;incstack = 0
  3509 ;; hardware stack exceeded
  3510                           ; Regs used in _task3: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3511                           ;main.c: 379:     while(1)
  3512                           
  3513                           
  3514                           ;main.c: 380:     {;main.c: 381:        GIE=0;
  3515  0DBB  138B               	bcf	11,7	;volatile
  3516                           
  3517                           ;main.c: 382:        if(State == 2)
  3518  0DBC  3002               	movlw	2
  3519  0DBD  0664               	xorwf	_State,w
  3520  0DBE  1D03               	btfss	3,2
  3521  0DBF  2DDE               	goto	l3849
  3522                           
  3523                           ;main.c: 383:        {;main.c: 384:             if(!Dio_ReadChannel(DOWN_BUTTON_CHANNEL)
      +                           || !Dio_ReadChannel(UP_BUTTON_CHANNEL))
  3524  0DC0  3000               	movlw	0
  3525  0DC1  2610  120A  158A   	fcall	_Dio_ReadChannel
  3526  0DC4  3A00               	xorlw	0
  3527  0DC5  1903               	skipnz
  3528  0DC6  2DCE               	goto	l3843
  3529  0DC7  3002               	movlw	2
  3530  0DC8  2610  120A  158A   	fcall	_Dio_ReadChannel
  3531  0DCB  3A00               	xorlw	0
  3532  0DCC  1D03               	skipz
  3533  0DCD  2DDE               	goto	l3849
  3534  0DCE                     l3843:
  3535  0DCE  3000               	movlw	0
  3536  0DCF  2610  120A  158A   	fcall	_Dio_ReadChannel
  3537  0DD2  3A00               	xorlw	0
  3538  0DD3  1903               	skipnz
  3539  0DD4  2DCE               	goto	l3843
  3540  0DD5  3002               	movlw	2
  3541  0DD6  2610  120A  158A   	fcall	_Dio_ReadChannel
  3542  0DD9  3A00               	xorlw	0
  3543  0DDA  1903               	skipnz
  3544  0DDB  2DCE               	goto	l3843
  3545                           
  3546                           ;main.c: 387:                 State = 3;
  3547  0DDC  3003               	movlw	3
  3548  0DDD  00E4               	movwf	_State
  3549  0DDE                     l3849:
  3550                           
  3551                           ;main.c: 390:        GIE=1;
  3552  0DDE  178B               	bsf	11,7	;volatile
  3553  0DDF  2DBB               	goto	l167
  3554  0DE0                     __end_of_task3:
  3555  0DE0                     __ptext3:	
  3556 ;; *************** function _task4 *****************
  3557 ;; Defined at:
  3558 ;;		line 395 in file "main.c"
  3559 ;; Parameters:    Size  Location     Type
  3560 ;;		None
  3561 ;; Auto vars:     Size  Location     Type
  3562 ;;		None
  3563 ;; Return value:  Size  Location     Type
  3564 ;;                  1    wreg      void 
  3565 ;; Registers used:
  3566 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3567 ;; Tracked objects:
  3568 ;;		On entry : 300/0
  3569 ;;		On exit  : 300/0
  3570 ;;		Unchanged: 0/0
  3571 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3572 ;;      Params:         0       0       0       0       0
  3573 ;;      Locals:         0       0       0       0       0
  3574 ;;      Temps:          0       0       0       0       0
  3575 ;;      Totals:         0       0       0       0       0
  3576 ;;Total ram usage:        0 bytes
  3577 ;; Hardware stack levels used:    1
  3578 ;; Hardware stack levels required when called:    9
  3579 ;; This function calls:
  3580 ;;		_Dio_ReadChannel
  3581 ;; This function is called by:
  3582 ;;		_main
  3583 ;;		i1_Os2_scheduler
  3584 ;;		_Os2_scheduler
  3585 ;; This function uses a non-reentrant model
  3586 ;;
  3587                           
  3588                           
  3589                           ;psect for function _task4
  3590  0DE0                     _task4:
  3591  0DE0                     l180:	
  3592                           ;incstack = 0
  3593 ;; hardware stack exceeded
  3594                           ; Regs used in _task4: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3595                           ;main.c: 397:     while(1)
  3596                           
  3597                           
  3598                           ;main.c: 398:     {;main.c: 399:        GIE=0;
  3599  0DE0  138B               	bcf	11,7	;volatile
  3600                           
  3601                           ;main.c: 400:        if(State == 3)
  3602  0DE1  3003               	movlw	3
  3603  0DE2  0664               	xorwf	_State,w
  3604  0DE3  1D03               	btfss	3,2
  3605  0DE4  2E0E               	goto	l3873
  3606                           
  3607                           ;main.c: 401:        {;main.c: 402:            if(!Dio_ReadChannel(DOWN_BUTTON_CHANNEL) 
      +                          && SetTemp>=40)
  3608  0DE5  3000               	movlw	0
  3609  0DE6  2610  120A  158A   	fcall	_Dio_ReadChannel
  3610  0DE9  3A00               	xorlw	0
  3611  0DEA  1D03               	skipz
  3612  0DEB  2DFA               	goto	l3863
  3613  0DEC  3028               	movlw	40
  3614  0DED  0266               	subwf	_SetTemp,w
  3615  0DEE  1C03               	skipc
  3616  0DEF  2DFA               	goto	l3863
  3617  0DF0                     l3859:
  3618  0DF0  3000               	movlw	0
  3619  0DF1  2610  120A  158A   	fcall	_Dio_ReadChannel
  3620  0DF4  3A00               	xorlw	0
  3621  0DF5  1903               	skipnz
  3622  0DF6  2DF0               	goto	l3859
  3623                           
  3624                           ;main.c: 407:                     flags.TempChangedFlag=1;
  3625  0DF7  3005               	movlw	5
  3626  0DF8  02E6               	subwf	_SetTemp,f
  3627                           
  3628                           ;main.c: 408:            }
  3629  0DF9  2E0E               	goto	l3873
  3630  0DFA                     l3863:
  3631  0DFA  3002               	movlw	2
  3632  0DFB  2610  120A  158A   	fcall	_Dio_ReadChannel
  3633  0DFE  3A00               	xorlw	0
  3634  0DFF  1D03               	skipz
  3635  0E00  2E0E               	goto	l3873
  3636  0E01  3047               	movlw	71
  3637  0E02  0266               	subwf	_SetTemp,w
  3638  0E03  1803               	skipnc
  3639  0E04  2E0E               	goto	l3873
  3640  0E05                     l3869:
  3641  0E05  3002               	movlw	2
  3642  0E06  2610  120A  158A   	fcall	_Dio_ReadChannel
  3643  0E09  3A00               	xorlw	0
  3644  0E0A  1903               	skipnz
  3645  0E0B  2E05               	goto	l3869
  3646                           
  3647                           ;main.c: 414:                     flags.TempChangedFlag=1;
  3648  0E0C  3005               	movlw	5
  3649  0E0D  07E6               	addwf	_SetTemp,f
  3650  0E0E                     l3873:
  3651                           
  3652                           ;main.c: 417:        GIE=1;
  3653  0E0E  178B               	bsf	11,7	;volatile
  3654  0E0F  2DE0               	goto	l180
  3655  0E10                     __end_of_task4:
  3656  0E10                     __ptext23:	
  3657 ;; *************** function _Dio_ReadChannel *****************
  3658 ;; Defined at:
  3659 ;;		line 60 in file "MCAL/Dio.c"
  3660 ;; Parameters:    Size  Location     Type
  3661 ;;  ChannelId       1    wreg     unsigned char 
  3662 ;; Auto vars:     Size  Location     Type
  3663 ;;  ChannelId       1   11[BANK0 ] unsigned char 
  3664 ;;  Pin_Ptr         2    8[BANK0 ] PTR volatile unsigned ch
  3665 ;;		 -> RAM(512), NULL(0), 
  3666 ;;  output          1   10[BANK0 ] enum E1176
  3667 ;;  x               1    7[BANK0 ] unsigned char 
  3668 ;; Return value:  Size  Location     Type
  3669 ;;                  1    wreg      enum E903
  3670 ;; Registers used:
  3671 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3672 ;; Tracked objects:
  3673 ;;		On entry : 0/0
  3674 ;;		On exit  : 300/0
  3675 ;;		Unchanged: 0/0
  3676 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3677 ;;      Params:         0       0       0       0       0
  3678 ;;      Locals:         0       5       0       0       0
  3679 ;;      Temps:          0       1       0       0       0
  3680 ;;      Totals:         0       6       0       0       0
  3681 ;;Total ram usage:        6 bytes
  3682 ;; Hardware stack levels used:    1
  3683 ;; Hardware stack levels required when called:    8
  3684 ;; This function calls:
  3685 ;;		Nothing
  3686 ;; This function is called by:
  3687 ;;		_task1
  3688 ;;		_task3
  3689 ;;		_task4
  3690 ;; This function uses a non-reentrant model
  3691 ;;
  3692                           
  3693                           
  3694                           ;psect for function _Dio_ReadChannel
  3695  0E10                     _Dio_ReadChannel:
  3696                           
  3697                           ;incstack = 0
  3698 ;; hardware stack exceeded
  3699                           ; Regs used in _Dio_ReadChannel: [wreg-fsr0h+status,2+status,0]
  3700                           ;Dio_ReadChannel@ChannelId stored from wreg
  3701  0E10  1283               	bcf	3,5	;RP0=0, select bank0
  3702  0E11  1303               	bcf	3,6	;RP1=0, select bank0
  3703  0E12  00AB               	movwf	Dio_ReadChannel@ChannelId
  3704                           
  3705                           ;MCAL/Dio.c: 74:         Dio_LevelType output = LOW;
  3706  0E13  01AA               	clrf	Dio_ReadChannel@output
  3707                           
  3708                           ;MCAL/Dio.c: 75:         Pin_Ptr = &(*((volatile uint8*)(((uint8)0x005)+((uint8)Dio_Conf
      +                          igGroupChannel.Channels[ChannelId].Port))));
  3709  0E14  1003               	clrc
  3710  0E15  0D2B               	rlf	Dio_ReadChannel@ChannelId,w
  3711  0E16  3E90               	addlw	(low (_Dio_ConfigGroupChannel| (0+256)))& (0+255)
  3712  0E17  0084               	movwf	4
  3713  0E18  1783               	bsf	3,7	;select IRP bank3
  3714  0E19  0800               	movf	0,w
  3715  0E1A  00A8               	movwf	Dio_ReadChannel@Pin_Ptr
  3716  0E1B  3005               	movlw	5
  3717  0E1C  01A9               	clrf	Dio_ReadChannel@Pin_Ptr+1
  3718  0E1D  07A8               	addwf	Dio_ReadChannel@Pin_Ptr,f
  3719  0E1E  1803               	skipnc
  3720  0E1F  0AA9               	incf	Dio_ReadChannel@Pin_Ptr+1,f
  3721                           
  3722                           ;MCAL/Dio.c: 76:         uint8_t x = Dio_ConfigGroupChannel.Channels[ChannelId].Channel;
  3723  0E20  1003               	clrc
  3724  0E21  0D2B               	rlf	Dio_ReadChannel@ChannelId,w
  3725  0E22  3E91               	addlw	(low ((_Dio_ConfigGroupChannel| (0+256)+1)))& (0+255)
  3726  0E23  0084               	movwf	4
  3727  0E24  0800               	movf	0,w
  3728  0E25  00A7               	movwf	Dio_ReadChannel@x
  3729                           
  3730                           ;MCAL/Dio.c: 77:         if (( *Pin_Ptr & (1<<x) ))
  3731  0E26  0828               	movf	Dio_ReadChannel@Pin_Ptr,w
  3732  0E27  0084               	movwf	4
  3733  0E28  1783               	bsf	3,7
  3734  0E29  1C29               	btfss	Dio_ReadChannel@Pin_Ptr+1,0
  3735  0E2A  1383               	bcf	3,7
  3736  0E2B  3001               	movlw	1
  3737  0E2C  00A6               	movwf	??_Dio_ReadChannel
  3738  0E2D  0A27               	incf	Dio_ReadChannel@x,w
  3739  0E2E  2E31               	goto	u2604
  3740  0E2F                     u2605:
  3741  0E2F  1003               	clrc
  3742  0E30  0DA6               	rlf	??_Dio_ReadChannel,f
  3743  0E31                     u2604:
  3744  0E31  3EFF               	addlw	-1
  3745  0E32  1D03               	skipz
  3746  0E33  2E2F               	goto	u2605
  3747  0E34  0826               	movf	??_Dio_ReadChannel,w
  3748  0E35  0500               	andwf	0,w
  3749  0E36  1903               	btfsc	3,2
  3750  0E37  2E3B               	goto	l3591
  3751                           
  3752                           ;MCAL/Dio.c: 78:             output = HIGH;
  3753  0E38  01AA               	clrf	Dio_ReadChannel@output
  3754  0E39  0AAA               	incf	Dio_ReadChannel@output,f
  3755  0E3A  2E3C               	goto	l3593
  3756  0E3B                     l3591:
  3757                           
  3758                           ;MCAL/Dio.c: 80:             output = LOW;
  3759  0E3B  01AA               	clrf	Dio_ReadChannel@output
  3760  0E3C                     l3593:
  3761                           
  3762                           ;MCAL/Dio.c: 81:         return output;
  3763  0E3C  082A               	movf	Dio_ReadChannel@output,w
  3764  0E3D  0008               	return
  3765  0E3E                     __end_of_Dio_ReadChannel:
  3766                           
  3767                           	psect	text7
  3768  0488                     __ptext7:	
  3769 ;; *************** function _task5 *****************
  3770 ;; Defined at:
  3771 ;;		line 420 in file "main.c"
  3772 ;; Parameters:    Size  Location     Type
  3773 ;;		None
  3774 ;; Auto vars:     Size  Location     Type
  3775 ;;		None
  3776 ;; Return value:  Size  Location     Type
  3777 ;;                  1    wreg      void 
  3778 ;; Registers used:
  3779 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3780 ;; Tracked objects:
  3781 ;;		On entry : 300/0
  3782 ;;		On exit  : 0/0
  3783 ;;		Unchanged: 0/0
  3784 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3785 ;;      Params:         0       0       0       0       0
  3786 ;;      Locals:         0       0       0       0       0
  3787 ;;      Temps:          0       0       0       0       0
  3788 ;;      Totals:         0       0       0       0       0
  3789 ;;Total ram usage:        0 bytes
  3790 ;; Hardware stack levels used:    1
  3791 ;; Hardware stack levels required when called:   10
  3792 ;; This function calls:
  3793 ;;		_Disp_DisplayNb
  3794 ;; This function is called by:
  3795 ;;		_main
  3796 ;;		i1_Os2_scheduler
  3797 ;;		_Os2_scheduler
  3798 ;; This function uses a non-reentrant model
  3799 ;;
  3800                           
  3801                           
  3802                           ;psect for function _task5
  3803  0488                     _task5:
  3804  0488                     l196:	
  3805                           ;incstack = 0
  3806 ;; hardware stack exceeded
  3807                           ; Regs used in _task5: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3808                           ;main.c: 422:     while(1)
  3809                           
  3810                           
  3811                           ;main.c: 423:     {;main.c: 424:        GIE=0;
  3812  0488  138B               	bcf	11,7	;volatile
  3813                           
  3814                           ;main.c: 425:        if(State == 3)
  3815  0489  3003               	movlw	3
  3816  048A  1283               	bcf	3,5	;RP0=0, select bank0
  3817  048B  1303               	bcf	3,6	;RP1=0, select bank0
  3818  048C  0664               	xorwf	_State,w
  3819  048D  1D03               	btfss	3,2
  3820  048E  2C95               	goto	l4525
  3821                           
  3822                           ;main.c: 426:             Disp_DisplayNb(SetTemp,BLINKING);
  3823  048F  01B8               	clrf	Disp_DisplayNb@Mode
  3824  0490  0AB8               	incf	Disp_DisplayNb@Mode,f
  3825  0491  0866               	movf	_SetTemp,w
  3826  0492  2499  120A  118A   	fcall	_Disp_DisplayNb
  3827  0495                     l4525:
  3828                           
  3829                           ;main.c: 427:        GIE=1;
  3830  0495  178B               	bsf	11,7	;volatile
  3831  0496  1283               	bcf	3,5	;RP0=0, select bank0
  3832  0497  1303               	bcf	3,6	;RP1=0, select bank0
  3833  0498  2C88               	goto	l196
  3834  0499                     __end_of_task5:
  3835  0499                     __ptext8:	
  3836 ;; *************** function _Disp_DisplayNb *****************
  3837 ;; Defined at:
  3838 ;;		line 21 in file "EcuAL/Disp.c"
  3839 ;; Parameters:    Size  Location     Type
  3840 ;;  var             1    wreg     unsigned char 
  3841 ;;  Mode            1   24[BANK0 ] enum E1254
  3842 ;; Auto vars:     Size  Location     Type
  3843 ;;  var             1   27[BANK0 ] unsigned char 
  3844 ;; Return value:  Size  Location     Type
  3845 ;;                  1    wreg      void 
  3846 ;; Registers used:
  3847 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3848 ;; Tracked objects:
  3849 ;;		On entry : 300/0
  3850 ;;		On exit  : 0/0
  3851 ;;		Unchanged: 0/0
  3852 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3853 ;;      Params:         0       1       0       0       0
  3854 ;;      Locals:         0       1       0       0       0
  3855 ;;      Temps:          0       2       0       0       0
  3856 ;;      Totals:         0       4       0       0       0
  3857 ;;Total ram usage:        4 bytes
  3858 ;; Hardware stack levels used:    1
  3859 ;; Hardware stack levels required when called:    9
  3860 ;; This function calls:
  3861 ;;		_Dio_WritePort
  3862 ;;		_Disp_GetDislayValue
  3863 ;;		___lbdiv
  3864 ;;		___lbmod
  3865 ;;		___lwdiv
  3866 ;;		___lwmod
  3867 ;; This function is called by:
  3868 ;;		_task5
  3869 ;; This function uses a non-reentrant model
  3870 ;;
  3871                           
  3872                           
  3873                           ;psect for function _Disp_DisplayNb
  3874  0499                     _Disp_DisplayNb:
  3875                           
  3876                           ;incstack = 0
  3877 ;; hardware stack exceeded
  3878                           ; Regs used in _Disp_DisplayNb: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3879                           ;Disp_DisplayNb@var stored from wreg
  3880  0499  00BB               	movwf	Disp_DisplayNb@var
  3881                           
  3882                           ;EcuAL/Disp.c: 21: void Disp_DisplayNb(uint8_t var, Disp_ModeType Mode);EcuAL/Disp.c: 22
      +                          : {;EcuAL/Disp.c: 23:     static uint16_t blinkFlag=0;;EcuAL/Disp.c: 24:     if(Mode == 
      +                          FIXED)
  3883  049A  0838               	movf	Disp_DisplayNb@Mode,w
  3884  049B  1D03               	btfss	3,2
  3885  049C  2CDE               	goto	l4405
  3886                           
  3887                           ;EcuAL/Disp.c: 25:     {;EcuAL/Disp.c: 26:         Dio_WritePort(PortA, 0x20);
  3888  049D  3020               	movlw	32
  3889  049E  00AB               	movwf	Dio_WritePort@Level
  3890  049F  3000               	movlw	0
  3891  04A0  256E  120A  118A   	fcall	_Dio_WritePort
  3892                           
  3893                           ;EcuAL/Disp.c: 27:         Dio_WritePort(PortD, Disp_GetDislayValue(var%10));
  3894  04A3  300A               	movlw	10
  3895  04A4  00A6               	movwf	___lbmod@divisor
  3896  04A5  083B               	movf	Disp_DisplayNb@var,w
  3897  04A6  2610  120A  118A   	fcall	___lbmod
  3898  04A9  257D  120A  118A   	fcall	_Disp_GetDislayValue
  3899  04AC  00AB               	movwf	Dio_WritePort@Level
  3900  04AD  3003               	movlw	3
  3901  04AE  256E  120A  118A   	fcall	_Dio_WritePort
  3902                           
  3903                           ;EcuAL/Disp.c: 28:         _delay((unsigned long)((50)*(10000000/4000.0)));
  3904  04B1  30A3               	movlw	163
  3905  04B2  1283               	bcf	3,5	;RP0=0, select bank0
  3906  04B3  1303               	bcf	3,6	;RP1=0, select bank0
  3907  04B4  00BA               	movwf	??_Disp_DisplayNb+1
  3908  04B5  3054               	movlw	84
  3909  04B6  00B9               	movwf	??_Disp_DisplayNb
  3910  04B7                     u4157:
  3911  04B7  0BB9               	decfsz	??_Disp_DisplayNb,f
  3912  04B8  2CB7               	goto	u4157
  3913  04B9  0BBA               	decfsz	??_Disp_DisplayNb+1,f
  3914  04BA  2CB7               	goto	u4157
  3915  04BB  0000               	nop
  3916                           
  3917                           ;EcuAL/Disp.c: 29:         Dio_WritePort(PortA, 0x10);
  3918  04BC  3010               	movlw	16
  3919  04BD  1283               	bcf	3,5	;RP0=0, select bank0
  3920  04BE  1303               	bcf	3,6	;RP1=0, select bank0
  3921  04BF  00AB               	movwf	Dio_WritePort@Level
  3922  04C0  3000               	movlw	0
  3923  04C1  256E  120A  118A   	fcall	_Dio_WritePort
  3924                           
  3925                           ;EcuAL/Disp.c: 30:         Dio_WritePort(PortD, Disp_GetDislayValue(var/10));
  3926  04C4  300A               	movlw	10
  3927  04C5  00A6               	movwf	___lbdiv@divisor
  3928  04C6  083B               	movf	Disp_DisplayNb@var,w
  3929  04C7  25F5  120A  118A   	fcall	___lbdiv
  3930  04CA  257D  120A  118A   	fcall	_Disp_GetDislayValue
  3931  04CD  00AB               	movwf	Dio_WritePort@Level
  3932  04CE  3003               	movlw	3
  3933  04CF  256E  120A  118A   	fcall	_Dio_WritePort
  3934                           
  3935                           ;EcuAL/Disp.c: 31:         _delay((unsigned long)((50)*(10000000/4000.0)));
  3936  04D2  30A3               	movlw	163
  3937  04D3  1283               	bcf	3,5	;RP0=0, select bank0
  3938  04D4  1303               	bcf	3,6	;RP1=0, select bank0
  3939  04D5  00BA               	movwf	??_Disp_DisplayNb+1
  3940  04D6  3054               	movlw	84
  3941  04D7  00B9               	movwf	??_Disp_DisplayNb
  3942  04D8                     u4167:
  3943  04D8  0BB9               	decfsz	??_Disp_DisplayNb,f
  3944  04D9  2CD8               	goto	u4167
  3945  04DA  0BBA               	decfsz	??_Disp_DisplayNb+1,f
  3946  04DB  2CD8               	goto	u4167
  3947  04DC  0000               	nop
  3948                           
  3949                           ;EcuAL/Disp.c: 32:     }
  3950  04DD  0008               	return
  3951  04DE                     l4405:
  3952  04DE  0B38               	decfsz	Disp_DisplayNb@Mode,w
  3953  04DF  0008               	return
  3954                           
  3955                           ;EcuAL/Disp.c: 34:     {;EcuAL/Disp.c: 35:         if(blinkFlag < (BlinkingPeriod/(50*2)
      +                          ))
  3956  04E0  3064               	movlw	100
  3957  04E1  00AC               	movwf	___lwdiv@divisor
  3958  04E2  01AD               	clrf	___lwdiv@divisor+1
  3959  04E3  0857               	movf	_BlinkingPeriod+1,w
  3960  04E4  00AF               	movwf	___lwdiv@dividend+1
  3961  04E5  0856               	movf	_BlinkingPeriod,w
  3962  04E6  00AE               	movwf	___lwdiv@dividend
  3963  04E7  25CB  120A  118A   	fcall	___lwdiv
  3964  04EA  082D               	movf	?___lwdiv+1,w
  3965  04EB  0255               	subwf	Disp_DisplayNb@blinkFlag+1,w
  3966  04EC  1D03               	skipz
  3967  04ED  2CF0               	goto	u3885
  3968  04EE  082C               	movf	?___lwdiv,w
  3969  04EF  0254               	subwf	Disp_DisplayNb@blinkFlag,w
  3970  04F0                     u3885:
  3971                           
  3972                           ;EcuAL/Disp.c: 36:         {;EcuAL/Disp.c: 37:            Dio_WritePort(PortA, 0x20);
  3973  04F0  3020               	movlw	32
  3974  04F1  00AB               	movwf	Dio_WritePort@Level
  3975  04F2  3000               	movlw	0
  3976  04F3  1803               	skipnc
  3977  04F4  2D25               	goto	L2
  3978  04F5  256E  120A  118A   	fcall	_Dio_WritePort
  3979                           
  3980                           ;EcuAL/Disp.c: 38:            Dio_WritePort(PortD, Disp_GetDislayValue(var%10));
  3981  04F8  300A               	movlw	10
  3982  04F9  00A6               	movwf	___lbmod@divisor
  3983  04FA  083B               	movf	Disp_DisplayNb@var,w
  3984  04FB  2610  120A  118A   	fcall	___lbmod
  3985  04FE  257D  120A  118A   	fcall	_Disp_GetDislayValue
  3986  0501  00AB               	movwf	Dio_WritePort@Level
  3987  0502  3003               	movlw	3
  3988  0503  256E  120A  118A   	fcall	_Dio_WritePort
  3989                           
  3990                           ;EcuAL/Disp.c: 39:            _delay((unsigned long)((50)*(10000000/4000.0)));
  3991  0506  30A3               	movlw	163
  3992  0507  1283               	bcf	3,5	;RP0=0, select bank0
  3993  0508  1303               	bcf	3,6	;RP1=0, select bank0
  3994  0509  00BA               	movwf	??_Disp_DisplayNb+1
  3995  050A  3054               	movlw	84
  3996  050B  00B9               	movwf	??_Disp_DisplayNb
  3997  050C                     u4177:
  3998  050C  0BB9               	decfsz	??_Disp_DisplayNb,f
  3999  050D  2D0C               	goto	u4177
  4000  050E  0BBA               	decfsz	??_Disp_DisplayNb+1,f
  4001  050F  2D0C               	goto	u4177
  4002  0510  0000               	nop
  4003                           
  4004                           ;EcuAL/Disp.c: 40:            Dio_WritePort(PortA, 0x10);
  4005  0511  3010               	movlw	16
  4006  0512  1283               	bcf	3,5	;RP0=0, select bank0
  4007  0513  1303               	bcf	3,6	;RP1=0, select bank0
  4008  0514  00AB               	movwf	Dio_WritePort@Level
  4009  0515  3000               	movlw	0
  4010  0516  256E  120A  118A   	fcall	_Dio_WritePort
  4011                           
  4012                           ;EcuAL/Disp.c: 41:            Dio_WritePort(PortD, Disp_GetDislayValue(var/10));
  4013  0519  300A               	movlw	10
  4014  051A  00A6               	movwf	___lbdiv@divisor
  4015  051B  083B               	movf	Disp_DisplayNb@var,w
  4016  051C  25F5  120A  118A   	fcall	___lbdiv
  4017  051F  257D  120A  118A   	fcall	_Disp_GetDislayValue
  4018  0522  00AB               	movwf	Dio_WritePort@Level
  4019  0523  3003               	movlw	3
  4020  0524  2D42               	goto	L1
  4021  0525                     L2:	
  4022                           ;EcuAL/Disp.c: 45:         {;EcuAL/Disp.c: 46:            Dio_WritePort(PortA, 0x20);
  4023                           
  4024                           ;EcuAL/Disp.c: 43:         }
  4025                           
  4026  0525  256E  120A  118A   	fcall	_Dio_WritePort
  4027  0528  3003               	movlw	3
  4028                           
  4029                           ;EcuAL/Disp.c: 47:            Dio_WritePort(PortD, 0x00);
  4030  0529  01AB               	clrf	Dio_WritePort@Level
  4031  052A  256E  120A  118A   	fcall	_Dio_WritePort
  4032                           
  4033                           ;EcuAL/Disp.c: 48:            _delay((unsigned long)((50)*(10000000/4000.0)));
  4034  052D  30A3               	movlw	163
  4035  052E  1283               	bcf	3,5	;RP0=0, select bank0
  4036  052F  1303               	bcf	3,6	;RP1=0, select bank0
  4037  0530  00BA               	movwf	??_Disp_DisplayNb+1
  4038  0531  3054               	movlw	84
  4039  0532  00B9               	movwf	??_Disp_DisplayNb
  4040  0533                     u4197:
  4041  0533  0BB9               	decfsz	??_Disp_DisplayNb,f
  4042  0534  2D33               	goto	u4197
  4043  0535  0BBA               	decfsz	??_Disp_DisplayNb+1,f
  4044  0536  2D33               	goto	u4197
  4045  0537  0000               	nop
  4046                           
  4047                           ;EcuAL/Disp.c: 49:            Dio_WritePort(PortA, 0x10);
  4048  0538  3010               	movlw	16
  4049  0539  1283               	bcf	3,5	;RP0=0, select bank0
  4050  053A  1303               	bcf	3,6	;RP1=0, select bank0
  4051  053B  00AB               	movwf	Dio_WritePort@Level
  4052  053C  3000               	movlw	0
  4053  053D  256E  120A  118A   	fcall	_Dio_WritePort
  4054  0540  3003               	movlw	3
  4055                           
  4056                           ;EcuAL/Disp.c: 50:            Dio_WritePort(PortD, 0x00);
  4057  0541  01AB               	clrf	Dio_WritePort@Level
  4058  0542                     L1:
  4059  0542  256E  120A  118A   	fcall	_Dio_WritePort
  4060                           
  4061                           ;EcuAL/Disp.c: 42:            _delay((unsigned long)((50)*(10000000/4000.0)));
  4062  0545  30A3               	movlw	163
  4063  0546  1283               	bcf	3,5	;RP0=0, select bank0
  4064  0547  1303               	bcf	3,6	;RP1=0, select bank0
  4065  0548  00BA               	movwf	??_Disp_DisplayNb+1
  4066  0549  3054               	movlw	84
  4067  054A  00B9               	movwf	??_Disp_DisplayNb
  4068  054B                     u4187:
  4069  054B  0BB9               	decfsz	??_Disp_DisplayNb,f
  4070  054C  2D4B               	goto	u4187
  4071  054D  0BBA               	decfsz	??_Disp_DisplayNb+1,f
  4072  054E  2D4B               	goto	u4187
  4073  054F  0000               	nop
  4074                           
  4075                           ;EcuAL/Disp.c: 53:         blinkFlag = (blinkFlag+1)%(BlinkingPeriod/50);
  4076  0550  3032               	movlw	50
  4077  0551  1283               	bcf	3,5	;RP0=0, select bank0
  4078  0552  1303               	bcf	3,6	;RP1=0, select bank0
  4079  0553  00AC               	movwf	___lwdiv@divisor
  4080  0554  01AD               	clrf	___lwdiv@divisor+1
  4081  0555  0857               	movf	_BlinkingPeriod+1,w
  4082  0556  00AF               	movwf	___lwdiv@dividend+1
  4083  0557  0856               	movf	_BlinkingPeriod,w
  4084  0558  00AE               	movwf	___lwdiv@dividend
  4085  0559  25CB  120A  118A   	fcall	___lwdiv
  4086  055C  082D               	movf	?___lwdiv+1,w
  4087  055D  00B4               	movwf	___lwmod@divisor+1
  4088  055E  082C               	movf	?___lwdiv,w
  4089  055F  00B3               	movwf	___lwmod@divisor
  4090  0560  0854               	movf	Disp_DisplayNb@blinkFlag,w
  4091  0561  3E01               	addlw	1
  4092  0562  00B5               	movwf	___lwmod@dividend
  4093  0563  0855               	movf	Disp_DisplayNb@blinkFlag+1,w
  4094  0564  1803               	skipnc
  4095  0565  3E01               	addlw	1
  4096  0566  3E00               	addlw	0
  4097  0567  00B6               	movwf	___lwmod@dividend+1
  4098  0568  262C               	fcall	___lwmod
  4099  0569  0834               	movf	?___lwmod+1,w
  4100  056A  00D5               	movwf	Disp_DisplayNb@blinkFlag+1
  4101  056B  0833               	movf	?___lwmod,w
  4102  056C  00D4               	movwf	Disp_DisplayNb@blinkFlag
  4103  056D  0008               	return
  4104  056E                     __end_of_Disp_DisplayNb:
  4105  056E                     __ptext13:	
  4106 ;; *************** function _Dio_WritePort *****************
  4107 ;; Defined at:
  4108 ;;		line 86 in file "MCAL/Dio.c"
  4109 ;; Parameters:    Size  Location     Type
  4110 ;;  PortId          1    wreg     unsigned char 
  4111 ;;  Level           1   11[BANK0 ] unsigned char 
  4112 ;; Auto vars:     Size  Location     Type
  4113 ;;  PortId          1   12[BANK0 ] unsigned char 
  4114 ;;  Port_Ptr        2   13[BANK0 ] PTR volatile unsigned ch
  4115 ;;		 -> RAM(512), NULL(0), 
  4116 ;; Return value:  Size  Location     Type
  4117 ;;                  1    wreg      void 
  4118 ;; Registers used:
  4119 ;;		wreg, fsr0l, fsr0h, status,2
  4120 ;; Tracked objects:
  4121 ;;		On entry : 300/0
  4122 ;;		On exit  : 300/0
  4123 ;;		Unchanged: 0/0
  4124 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4125 ;;      Params:         0       1       0       0       0
  4126 ;;      Locals:         0       3       0       0       0
  4127 ;;      Temps:          0       0       0       0       0
  4128 ;;      Totals:         0       4       0       0       0
  4129 ;;Total ram usage:        4 bytes
  4130 ;; Hardware stack levels used:    1
  4131 ;; Hardware stack levels required when called:    8
  4132 ;; This function calls:
  4133 ;;		Nothing
  4134 ;; This function is called by:
  4135 ;;		_Disp_DisplayNb
  4136 ;; This function uses a non-reentrant model
  4137 ;;
  4138                           
  4139                           
  4140                           ;psect for function _Dio_WritePort
  4141  056E                     _Dio_WritePort:
  4142                           
  4143                           ;incstack = 0
  4144 ;; hardware stack exceeded
  4145                           ; Regs used in _Dio_WritePort: [wreg-fsr0h+status,2]
  4146                           ;Dio_WritePort@PortId stored from wreg
  4147  056E  00AC               	movwf	Dio_WritePort@PortId
  4148                           
  4149                           ;MCAL/Dio.c: 89:     Port_Ptr = &(*((volatile uint8*)(((uint8)0x005)+((uint8)PortId))));
  4150  056F  00AD               	movwf	Dio_WritePort@Port_Ptr
  4151  0570  3005               	movlw	5
  4152  0571  01AE               	clrf	Dio_WritePort@Port_Ptr+1
  4153  0572  07AD               	addwf	Dio_WritePort@Port_Ptr,f
  4154  0573  1803               	skipnc
  4155  0574  0AAE               	incf	Dio_WritePort@Port_Ptr+1,f
  4156                           
  4157                           ;MCAL/Dio.c: 90:         (*Port_Ptr=Level);
  4158  0575  082D               	movf	Dio_WritePort@Port_Ptr,w
  4159  0576  0084               	movwf	4
  4160  0577  1783               	bsf	3,7
  4161  0578  1C2E               	btfss	Dio_WritePort@Port_Ptr+1,0
  4162  0579  1383               	bcf	3,7
  4163  057A  082B               	movf	Dio_WritePort@Level,w
  4164  057B  0080               	movwf	0
  4165  057C  0008               	return
  4166  057D                     __end_of_Dio_WritePort:
  4167  057D                     __ptext12:	
  4168 ;; *************** function _Disp_GetDislayValue *****************
  4169 ;; Defined at:
  4170 ;;		line 63 in file "EcuAL/Disp.c"
  4171 ;; Parameters:    Size  Location     Type
  4172 ;;  v               1    wreg     unsigned char 
  4173 ;; Auto vars:     Size  Location     Type
  4174 ;;  v               1    8[BANK0 ] unsigned char 
  4175 ;; Return value:  Size  Location     Type
  4176 ;;                  1    wreg      unsigned char 
  4177 ;; Registers used:
  4178 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4179 ;; Tracked objects:
  4180 ;;		On entry : 300/0
  4181 ;;		On exit  : 300/0
  4182 ;;		Unchanged: 0/0
  4183 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4184 ;;      Params:         0       0       0       0       0
  4185 ;;      Locals:         0       1       0       0       0
  4186 ;;      Temps:          0       2       0       0       0
  4187 ;;      Totals:         0       3       0       0       0
  4188 ;;Total ram usage:        3 bytes
  4189 ;; Hardware stack levels used:    1
  4190 ;; Hardware stack levels required when called:    8
  4191 ;; This function calls:
  4192 ;;		Nothing
  4193 ;; This function is called by:
  4194 ;;		_Disp_DisplayNb
  4195 ;; This function uses a non-reentrant model
  4196 ;;
  4197                           
  4198                           
  4199                           ;psect for function _Disp_GetDislayValue
  4200  057D                     _Disp_GetDislayValue:
  4201                           
  4202                           ;incstack = 0
  4203 ;; hardware stack exceeded
  4204                           ; Regs used in _Disp_GetDislayValue: [wreg-fsr0h+status,2+status,0]
  4205                           ;Disp_GetDislayValue@v stored from wreg
  4206  057D  00A8               	movwf	Disp_GetDislayValue@v
  4207                           
  4208                           ;EcuAL/Disp.c: 63: static uint8_t Disp_GetDislayValue(unsigned char v);EcuAL/Disp.c: 64:
      +                           {;EcuAL/Disp.c: 65:   switch(v)
  4209  057E  2D90               	goto	l3343
  4210  057F                     l3273:
  4211  057F  343F               	retlw	63
  4212  0580                     l3277:
  4213  0580  3406               	retlw	6
  4214  0581                     l3281:
  4215  0581  345B               	retlw	91
  4216  0582                     l3285:
  4217  0582  344F               	retlw	79
  4218  0583                     l3289:
  4219  0583  3466               	retlw	102
  4220  0584                     l3293:
  4221  0584  346D               	retlw	109
  4222  0585                     l3297:
  4223  0585  347D               	retlw	125
  4224  0586                     l3301:
  4225  0586  3407               	retlw	7
  4226  0587                     l3305:
  4227  0587  347F               	retlw	127
  4228  0588                     l3309:
  4229  0588  346F               	retlw	111
  4230  0589                     l3313:
  4231  0589  3477               	retlw	119
  4232  058A                     l3317:
  4233  058A  347C               	retlw	124
  4234  058B                     l3321:
  4235  058B  3458               	retlw	88
  4236  058C                     l3325:
  4237  058C  345E               	retlw	94
  4238  058D                     l3329:
  4239  058D  3479               	retlw	121
  4240  058E                     l3333:
  4241  058E  3471               	retlw	113
  4242  058F                     l3337:
  4243                           
  4244                           ;EcuAL/Disp.c: 84:     return 0;
  4245  058F  3400               	retlw	0
  4246  0590                     l3343:
  4247  0590  0828               	movf	Disp_GetDislayValue@v,w
  4248  0591  00A6               	movwf	??_Disp_GetDislayValue
  4249  0592  01A7               	clrf	??_Disp_GetDislayValue+1
  4250                           
  4251                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4252                           ; Switch size 1, requested type "space"
  4253                           ; Number of cases is 1, Range of values is 0 to 0
  4254                           ; switch strategies available:
  4255                           ; Name         Instructions Cycles
  4256                           ; simple_byte            4     3 (average)
  4257                           ; direct_byte           11     8 (fixed)
  4258                           ; jumptable            260     6 (fixed)
  4259                           ;	Chosen strategy is simple_byte
  4260  0593  0827               	movf	??_Disp_GetDislayValue+1,w
  4261  0594  3A00               	xorlw	0	; case 0
  4262  0595  1903               	skipnz
  4263  0596  2D98               	goto	l4707
  4264  0597  2D8F               	goto	l3337
  4265  0598                     l4707:
  4266                           
  4267                           ; Switch size 1, requested type "space"
  4268                           ; Number of cases is 16, Range of values is 0 to 15
  4269                           ; switch strategies available:
  4270                           ; Name         Instructions Cycles
  4271                           ; simple_byte           49    25 (average)
  4272                           ; direct_byte           56     8 (fixed)
  4273                           ; jumptable            260     6 (fixed)
  4274                           ;	Chosen strategy is simple_byte
  4275  0598  0826               	movf	??_Disp_GetDislayValue,w
  4276  0599  3A00               	xorlw	0	; case 0
  4277  059A  1903               	skipnz
  4278  059B  2D7F               	goto	l3273
  4279  059C  3A01               	xorlw	1	; case 1
  4280  059D  1903               	skipnz
  4281  059E  2D80               	goto	l3277
  4282  059F  3A03               	xorlw	3	; case 2
  4283  05A0  1903               	skipnz
  4284  05A1  2D81               	goto	l3281
  4285  05A2  3A01               	xorlw	1	; case 3
  4286  05A3  1903               	skipnz
  4287  05A4  2D82               	goto	l3285
  4288  05A5  3A07               	xorlw	7	; case 4
  4289  05A6  1903               	skipnz
  4290  05A7  2D83               	goto	l3289
  4291  05A8  3A01               	xorlw	1	; case 5
  4292  05A9  1903               	skipnz
  4293  05AA  2D84               	goto	l3293
  4294  05AB  3A03               	xorlw	3	; case 6
  4295  05AC  1903               	skipnz
  4296  05AD  2D85               	goto	l3297
  4297  05AE  3A01               	xorlw	1	; case 7
  4298  05AF  1903               	skipnz
  4299  05B0  2D86               	goto	l3301
  4300  05B1  3A0F               	xorlw	15	; case 8
  4301  05B2  1903               	skipnz
  4302  05B3  2D87               	goto	l3305
  4303  05B4  3A01               	xorlw	1	; case 9
  4304  05B5  1903               	skipnz
  4305  05B6  2D88               	goto	l3309
  4306  05B7  3A03               	xorlw	3	; case 10
  4307  05B8  1903               	skipnz
  4308  05B9  2D89               	goto	l3313
  4309  05BA  3A01               	xorlw	1	; case 11
  4310  05BB  1903               	skipnz
  4311  05BC  2D8A               	goto	l3317
  4312  05BD  3A07               	xorlw	7	; case 12
  4313  05BE  1903               	skipnz
  4314  05BF  2D8B               	goto	l3321
  4315  05C0  3A01               	xorlw	1	; case 13
  4316  05C1  1903               	skipnz
  4317  05C2  2D8C               	goto	l3325
  4318  05C3  3A03               	xorlw	3	; case 14
  4319  05C4  1903               	skipnz
  4320  05C5  2D8D               	goto	l3329
  4321  05C6  3A01               	xorlw	1	; case 15
  4322  05C7  1903               	skipnz
  4323  05C8  2D8E               	goto	l3333
  4324  05C9  2D8F               	goto	l3337
  4325  05CA  0008               	return
  4326  05CB                     __end_of_Disp_GetDislayValue:
  4327  05CB                     __ptext28:	
  4328 ;; *************** function ___lwdiv *****************
  4329 ;; Defined at:
  4330 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\lwdiv.c"
  4331 ;; Parameters:    Size  Location     Type
  4332 ;;  divisor         2   12[BANK0 ] unsigned int 
  4333 ;;  dividend        2   14[BANK0 ] unsigned int 
  4334 ;; Auto vars:     Size  Location     Type
  4335 ;;  quotient        2   17[BANK0 ] unsigned int 
  4336 ;;  counter         1   16[BANK0 ] unsigned char 
  4337 ;; Return value:  Size  Location     Type
  4338 ;;                  2   12[BANK0 ] unsigned int 
  4339 ;; Registers used:
  4340 ;;		wreg, status,2, status,0
  4341 ;; Tracked objects:
  4342 ;;		On entry : 300/0
  4343 ;;		On exit  : 300/0
  4344 ;;		Unchanged: 0/0
  4345 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4346 ;;      Params:         0       4       0       0       0
  4347 ;;      Locals:         0       3       0       0       0
  4348 ;;      Temps:          0       0       0       0       0
  4349 ;;      Totals:         0       7       0       0       0
  4350 ;;Total ram usage:        7 bytes
  4351 ;; Hardware stack levels used:    1
  4352 ;; Hardware stack levels required when called:    8
  4353 ;; This function calls:
  4354 ;;		Nothing
  4355 ;; This function is called by:
  4356 ;;		_Pwm_Init
  4357 ;;		_Disp_DisplayNb
  4358 ;; This function uses a non-reentrant model
  4359 ;;
  4360                           
  4361                           
  4362                           ;psect for function ___lwdiv
  4363  05CB                     ___lwdiv:
  4364                           
  4365                           ;incstack = 0
  4366 ;; hardware stack exceeded
  4367                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  4368  05CB  01B1               	clrf	___lwdiv@quotient
  4369  05CC  01B2               	clrf	___lwdiv@quotient+1
  4370  05CD  082C               	movf	___lwdiv@divisor,w
  4371  05CE  042D               	iorwf	___lwdiv@divisor+1,w
  4372  05CF  1903               	btfsc	3,2
  4373  05D0  2DF0               	goto	l4389
  4374  05D1  01B0               	clrf	___lwdiv@counter
  4375  05D2                     L8:
  4376  05D2  0AB0               	incf	___lwdiv@counter,f
  4377  05D3  1BAD               	btfsc	___lwdiv@divisor+1,7
  4378  05D4  2DD9               	goto	l4377
  4379  05D5  1003               	clrc
  4380  05D6  0DAC               	rlf	___lwdiv@divisor,f
  4381  05D7  0DAD               	rlf	___lwdiv@divisor+1,f
  4382  05D8  2DD2               	goto	L8
  4383  05D9                     l4377:
  4384  05D9  1003               	clrc
  4385  05DA  0DB1               	rlf	___lwdiv@quotient,f
  4386  05DB  0DB2               	rlf	___lwdiv@quotient+1,f
  4387  05DC  082D               	movf	___lwdiv@divisor+1,w
  4388  05DD  022F               	subwf	___lwdiv@dividend+1,w
  4389  05DE  1D03               	skipz
  4390  05DF  2DE2               	goto	u3845
  4391  05E0  082C               	movf	___lwdiv@divisor,w
  4392  05E1  022E               	subwf	___lwdiv@dividend,w
  4393  05E2                     u3845:
  4394  05E2  1C03               	skipc
  4395  05E3  2DEC               	goto	L9
  4396  05E4  082C               	movf	___lwdiv@divisor,w
  4397  05E5  02AE               	subwf	___lwdiv@dividend,f
  4398  05E6  082D               	movf	___lwdiv@divisor+1,w
  4399  05E7  1C03               	skipc
  4400  05E8  03AF               	decf	___lwdiv@dividend+1,f
  4401  05E9  02AF               	subwf	___lwdiv@dividend+1,f
  4402  05EA  1431               	bsf	___lwdiv@quotient,0
  4403  05EB  1003               	clrc
  4404  05EC                     L9:
  4405  05EC  0CAD               	rrf	___lwdiv@divisor+1,f
  4406  05ED  0CAC               	rrf	___lwdiv@divisor,f
  4407  05EE  0BB0               	decfsz	___lwdiv@counter,f
  4408  05EF  2DD9               	goto	l4377
  4409  05F0                     l4389:
  4410  05F0  0832               	movf	___lwdiv@quotient+1,w
  4411  05F1  00AD               	movwf	?___lwdiv+1
  4412  05F2  0831               	movf	___lwdiv@quotient,w
  4413  05F3  00AC               	movwf	?___lwdiv
  4414  05F4  0008               	return
  4415  05F5                     __end_of___lwdiv:
  4416  05F5                     __ptext11:	
  4417 ;; *************** function ___lbdiv *****************
  4418 ;; Defined at:
  4419 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\lbdiv.c"
  4420 ;; Parameters:    Size  Location     Type
  4421 ;;  dividend        1    wreg     unsigned char 
  4422 ;;  divisor         1    6[BANK0 ] unsigned char 
  4423 ;; Auto vars:     Size  Location     Type
  4424 ;;  dividend        1    7[BANK0 ] unsigned char 
  4425 ;;  quotient        1    9[BANK0 ] unsigned char 
  4426 ;;  counter         1    8[BANK0 ] unsigned char 
  4427 ;; Return value:  Size  Location     Type
  4428 ;;                  1    wreg      unsigned char 
  4429 ;; Registers used:
  4430 ;;		wreg, status,2, status,0
  4431 ;; Tracked objects:
  4432 ;;		On entry : 300/0
  4433 ;;		On exit  : 300/0
  4434 ;;		Unchanged: 0/0
  4435 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4436 ;;      Params:         0       1       0       0       0
  4437 ;;      Locals:         0       3       0       0       0
  4438 ;;      Temps:          0       0       0       0       0
  4439 ;;      Totals:         0       4       0       0       0
  4440 ;;Total ram usage:        4 bytes
  4441 ;; Hardware stack levels used:    1
  4442 ;; Hardware stack levels required when called:    8
  4443 ;; This function calls:
  4444 ;;		Nothing
  4445 ;; This function is called by:
  4446 ;;		_Disp_DisplayNb
  4447 ;; This function uses a non-reentrant model
  4448 ;;
  4449                           
  4450                           
  4451                           ;psect for function ___lbdiv
  4452  05F5                     ___lbdiv:
  4453                           
  4454                           ;incstack = 0
  4455 ;; hardware stack exceeded
  4456                           ; Regs used in ___lbdiv: [wreg+status,2+status,0]
  4457                           ;___lbdiv@dividend stored from wreg
  4458  05F5  00A7               	movwf	___lbdiv@dividend
  4459  05F6  01A9               	clrf	___lbdiv@quotient
  4460  05F7  0826               	movf	___lbdiv@divisor,w
  4461  05F8  1903               	btfsc	3,2
  4462  05F9  2E0E               	goto	l3425
  4463  05FA  01A8               	clrf	___lbdiv@counter
  4464  05FB                     l3411:
  4465  05FB  0AA8               	incf	___lbdiv@counter,f
  4466  05FC  1BA6               	btfsc	___lbdiv@divisor,7
  4467  05FD  2E01               	goto	l1198
  4468  05FE  1003               	clrc
  4469  05FF  0DA6               	rlf	___lbdiv@divisor,f
  4470  0600  2DFB               	goto	l3411
  4471  0601                     l1198:
  4472  0601  1003               	clrc
  4473  0602  0DA9               	rlf	___lbdiv@quotient,f
  4474  0603  0826               	movf	___lbdiv@divisor,w
  4475  0604  0227               	subwf	___lbdiv@dividend,w
  4476  0605  1C03               	skipc
  4477  0606  2E0B               	goto	L6
  4478  0607  0826               	movf	___lbdiv@divisor,w
  4479  0608  02A7               	subwf	___lbdiv@dividend,f
  4480  0609  1429               	bsf	___lbdiv@quotient,0
  4481  060A  1003               	clrc
  4482  060B                     L6:
  4483  060B  0CA6               	rrf	___lbdiv@divisor,f
  4484  060C  0BA8               	decfsz	___lbdiv@counter,f
  4485  060D  2E01               	goto	l1198
  4486  060E                     l3425:
  4487  060E  0829               	movf	___lbdiv@quotient,w
  4488  060F  0008               	return
  4489  0610                     __end_of___lbdiv:
  4490  0610                     __ptext10:	
  4491 ;; *************** function ___lbmod *****************
  4492 ;; Defined at:
  4493 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\lbmod.c"
  4494 ;; Parameters:    Size  Location     Type
  4495 ;;  dividend        1    wreg     unsigned char 
  4496 ;;  divisor         1    6[BANK0 ] unsigned char 
  4497 ;; Auto vars:     Size  Location     Type
  4498 ;;  dividend        1    8[BANK0 ] unsigned char 
  4499 ;;  rem             1   10[BANK0 ] unsigned char 
  4500 ;;  counter         1    9[BANK0 ] unsigned char 
  4501 ;; Return value:  Size  Location     Type
  4502 ;;                  1    wreg      unsigned char 
  4503 ;; Registers used:
  4504 ;;		wreg, status,2, status,0
  4505 ;; Tracked objects:
  4506 ;;		On entry : 300/0
  4507 ;;		On exit  : 300/0
  4508 ;;		Unchanged: 0/0
  4509 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4510 ;;      Params:         0       1       0       0       0
  4511 ;;      Locals:         0       3       0       0       0
  4512 ;;      Temps:          0       1       0       0       0
  4513 ;;      Totals:         0       5       0       0       0
  4514 ;;Total ram usage:        5 bytes
  4515 ;; Hardware stack levels used:    1
  4516 ;; Hardware stack levels required when called:    8
  4517 ;; This function calls:
  4518 ;;		Nothing
  4519 ;; This function is called by:
  4520 ;;		_Disp_DisplayNb
  4521 ;; This function uses a non-reentrant model
  4522 ;;
  4523                           
  4524                           
  4525                           ;psect for function ___lbmod
  4526  0610                     ___lbmod:
  4527                           
  4528                           ;incstack = 0
  4529 ;; hardware stack exceeded
  4530                           ; Regs used in ___lbmod: [wreg+status,2+status,0]
  4531                           ;___lbmod@dividend stored from wreg
  4532  0610  00A8               	movwf	___lbmod@dividend
  4533  0611  3008               	movlw	8
  4534  0612  00A9               	movwf	___lbmod@counter
  4535  0613  01AA               	clrf	___lbmod@rem
  4536  0614                     l3433:
  4537  0614  0828               	movf	___lbmod@dividend,w
  4538  0615  00A7               	movwf	??___lbmod
  4539  0616  3007               	movlw	7
  4540  0617  1003               	clrc
  4541  0618                     L5:
  4542  0618  0CA7               	rrf	??___lbmod,f
  4543  0619  3EFF               	addlw	-1
  4544  061A  1003               	clrc
  4545  061B  1D03               	skipz
  4546  061C  2E18               	goto	L5
  4547  061D  0D2A               	rlf	___lbmod@rem,w
  4548  061E  0427               	iorwf	??___lbmod,w
  4549  061F  00AA               	movwf	___lbmod@rem
  4550  0620  1003               	clrc
  4551  0621  0DA8               	rlf	___lbmod@dividend,f
  4552  0622  0826               	movf	___lbmod@divisor,w
  4553  0623  022A               	subwf	___lbmod@rem,w
  4554  0624  1C03               	skipc
  4555  0625  2E28               	goto	l3441
  4556  0626  0826               	movf	___lbmod@divisor,w
  4557  0627  02AA               	subwf	___lbmod@rem,f
  4558  0628                     l3441:
  4559  0628  0BA9               	decfsz	___lbmod@counter,f
  4560  0629  2E14               	goto	l3433
  4561  062A  082A               	movf	___lbmod@rem,w
  4562  062B  0008               	return
  4563  062C                     __end_of___lbmod:
  4564  062C                     __ptext9:	
  4565 ;; *************** function ___lwmod *****************
  4566 ;; Defined at:
  4567 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\lwmod.c"
  4568 ;; Parameters:    Size  Location     Type
  4569 ;;  divisor         2   19[BANK0 ] unsigned int 
  4570 ;;  dividend        2   21[BANK0 ] unsigned int 
  4571 ;; Auto vars:     Size  Location     Type
  4572 ;;  counter         1   23[BANK0 ] unsigned char 
  4573 ;; Return value:  Size  Location     Type
  4574 ;;                  2   19[BANK0 ] unsigned int 
  4575 ;; Registers used:
  4576 ;;		wreg, status,2, status,0
  4577 ;; Tracked objects:
  4578 ;;		On entry : 300/0
  4579 ;;		On exit  : 300/0
  4580 ;;		Unchanged: 0/0
  4581 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4582 ;;      Params:         0       4       0       0       0
  4583 ;;      Locals:         0       1       0       0       0
  4584 ;;      Temps:          0       0       0       0       0
  4585 ;;      Totals:         0       5       0       0       0
  4586 ;;Total ram usage:        5 bytes
  4587 ;; Hardware stack levels used:    1
  4588 ;; Hardware stack levels required when called:    8
  4589 ;; This function calls:
  4590 ;;		Nothing
  4591 ;; This function is called by:
  4592 ;;		_Disp_DisplayNb
  4593 ;; This function uses a non-reentrant model
  4594 ;;
  4595                           
  4596                           
  4597                           ;psect for function ___lwmod
  4598  062C                     ___lwmod:
  4599                           
  4600                           ;incstack = 0
  4601 ;; hardware stack exceeded
  4602                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  4603  062C  0833               	movf	___lwmod@divisor,w
  4604  062D  0434               	iorwf	___lwmod@divisor+1,w
  4605  062E  1903               	btfsc	3,2
  4606  062F  2E4B               	goto	l3489
  4607  0630  01B7               	clrf	___lwmod@counter
  4608  0631                     L3:
  4609  0631  0AB7               	incf	___lwmod@counter,f
  4610  0632  1BB4               	btfsc	___lwmod@divisor+1,7
  4611  0633  2E38               	goto	l3481
  4612  0634  1003               	clrc
  4613  0635  0DB3               	rlf	___lwmod@divisor,f
  4614  0636  0DB4               	rlf	___lwmod@divisor+1,f
  4615  0637  2E31               	goto	L3
  4616  0638                     l3481:
  4617  0638  0834               	movf	___lwmod@divisor+1,w
  4618  0639  0236               	subwf	___lwmod@dividend+1,w
  4619  063A  1D03               	skipz
  4620  063B  2E3E               	goto	u2515
  4621  063C  0833               	movf	___lwmod@divisor,w
  4622  063D  0235               	subwf	___lwmod@dividend,w
  4623  063E                     u2515:
  4624  063E  1C03               	skipc
  4625  063F  2E47               	goto	L4
  4626  0640  0833               	movf	___lwmod@divisor,w
  4627  0641  02B5               	subwf	___lwmod@dividend,f
  4628  0642  0834               	movf	___lwmod@divisor+1,w
  4629  0643  1C03               	skipc
  4630  0644  03B6               	decf	___lwmod@dividend+1,f
  4631  0645  02B6               	subwf	___lwmod@dividend+1,f
  4632  0646  1003               	clrc
  4633  0647                     L4:
  4634  0647  0CB4               	rrf	___lwmod@divisor+1,f
  4635  0648  0CB3               	rrf	___lwmod@divisor,f
  4636  0649  0BB7               	decfsz	___lwmod@counter,f
  4637  064A  2E38               	goto	l3481
  4638  064B                     l3489:
  4639  064B  0836               	movf	___lwmod@dividend+1,w
  4640  064C  00B4               	movwf	?___lwmod+1
  4641  064D  0835               	movf	___lwmod@dividend,w
  4642  064E  00B3               	movwf	?___lwmod
  4643  064F  0008               	return
  4644  0650                     __end_of___lwmod:
  4645                           
  4646                           	psect	text24
  4647  008D                     __ptext24:	
  4648 ;; *************** function _Init_Task *****************
  4649 ;; Defined at:
  4650 ;;		line 328 in file "main.c"
  4651 ;; Parameters:    Size  Location     Type
  4652 ;;		None
  4653 ;; Auto vars:     Size  Location     Type
  4654 ;;  i               2    1[BANK1 ] int 
  4655 ;; Return value:  Size  Location     Type
  4656 ;;                  1    wreg      void 
  4657 ;; Registers used:
  4658 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4659 ;; Tracked objects:
  4660 ;;		On entry : 0/0
  4661 ;;		On exit  : B00/0
  4662 ;;		Unchanged: 0/0
  4663 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4664 ;;      Params:         0       0       0       0       0
  4665 ;;      Locals:         0       0       2       0       0
  4666 ;;      Temps:          0       0       0       0       0
  4667 ;;      Totals:         0       0       2       0       0
  4668 ;;Total ram usage:        2 bytes
  4669 ;; Hardware stack levels used:    1
  4670 ;; Hardware stack levels required when called:   12
  4671 ;; This function calls:
  4672 ;;		_Disp_Init
  4673 ;;		_Eep_Init
  4674 ;;		_Gpt_Init
  4675 ;;		_Port_Init
  4676 ;;		_TempSensor_Init
  4677 ;;		_TempSystem_Init
  4678 ;; This function is called by:
  4679 ;;		_Os2_start
  4680 ;; This function uses a non-reentrant model
  4681 ;;
  4682                           
  4683                           
  4684                           ;psect for function _Init_Task
  4685  008D                     _Init_Task:
  4686                           
  4687                           ;main.c: 330:     for(int i = 0 ; i<4 ; i++)
  4688                           
  4689                           ;incstack = 0
  4690 ;; hardware stack exceeded
  4691                           ; Regs used in _Init_Task: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4692  008D  1683               	bsf	3,5	;RP0=1, select bank1
  4693  008E  1303               	bcf	3,6	;RP1=0, select bank1
  4694  008F  01E9               	clrf	Init_Task@i^(0+128)
  4695  0090  01EA               	clrf	(Init_Task@i+1)^(0+128)
  4696  0091                     l4611:
  4697                           
  4698                           ;main.c: 331:         Port_Init(&Port_ButtonsConfig[i]);
  4699  0091  1683               	bsf	3,5	;RP0=1, select bank1
  4700  0092  1303               	bcf	3,6	;RP1=0, select bank1
  4701  0093  0869               	movf	Init_Task@i^(0+128),w
  4702  0094  0769               	addwf	Init_Task@i^(0+128),w
  4703  0095  0769               	addwf	Init_Task@i^(0+128),w
  4704  0096  3EA2               	addlw	(low (_Port_ButtonsConfig| (0+256)))& (0+255)
  4705  0097  1283               	bcf	3,5	;RP0=0, select bank0
  4706  0098  00A9               	movwf	Port_Init@ConfigPtr
  4707  0099  3001               	movlw	1
  4708  009A  00AA               	movwf	Port_Init@ConfigPtr+1
  4709  009B  239A  120A  118A   	fcall	_Port_Init
  4710  009E  1683               	bsf	3,5	;RP0=1, select bank1
  4711  009F  0AE9               	incf	Init_Task@i^(0+128),f
  4712  00A0  1903               	skipnz
  4713  00A1  0AEA               	incf	(Init_Task@i+1)^(0+128),f
  4714  00A2  086A               	movf	(Init_Task@i+1)^(0+128),w
  4715  00A3  3A80               	xorlw	128
  4716  00A4  00FF               	movwf	127
  4717  00A5  3080               	movlw	128
  4718  00A6  027F               	subwf	127,w
  4719  00A7  1D03               	skipz
  4720  00A8  28AB               	goto	u4095
  4721  00A9  3004               	movlw	4
  4722  00AA  0269               	subwf	Init_Task@i^(0+128),w
  4723  00AB                     u4095:
  4724  00AB  1C03               	skipc
  4725  00AC  2891               	goto	l4611
  4726                           
  4727                           ;main.c: 332:     Disp_Init(&Disp_Config);
  4728  00AD  30B8               	movlw	(low (_Disp_Config| 0))& (0+255)
  4729  00AE  242E               	fcall	_Disp_Init
  4730                           
  4731                           ;main.c: 333:     Eep_Init(&Eep_Config);
  4732  00AF  3067               	movlw	(low (_Eep_Config| 0))& (0+255)
  4733  00B0  120A  158A  21AB  120A  118A  	fcall	_Eep_Init
  4734                           
  4735                           ;main.c: 334:     TempSensor_Init(&TempSensor_Config);
  4736  00B5  30BD               	movlw	(low (_TempSensor_Config| (0+256)))& (0+255)
  4737  00B6  2484  120A  118A   	fcall	_TempSensor_Init
  4738                           
  4739                           ;main.c: 335:     TempSystem_Init(TempSystem_Configurations);
  4740  00B9  30D1               	movlw	(low (_TempSystem_Configurations| 0))& (0+255)
  4741  00BA  20BF  120A  118A   	fcall	_TempSystem_Init
  4742                           
  4743                           ;main.c: 336:     Gpt_Init(&Gpt_Config);
  4744  00BD  30A9               	movlw	(low (_Gpt_Config| 0))& (0+255)
  4745  00BE  2980               	ljmp	_Gpt_Init
  4746  00BF                     __end_of_Init_Task:
  4747  00BF                     __ptext25:	
  4748 ;; *************** function _TempSystem_Init *****************
  4749 ;; Defined at:
  4750 ;;		line 6 in file "EcuAL/TempSystem.c"
  4751 ;; Parameters:    Size  Location     Type
  4752 ;;  ConfigPtr       1    wreg     PTR struct .
  4753 ;;		 -> TempSystem_Configurations(6), 
  4754 ;; Auto vars:     Size  Location     Type
  4755 ;;  ConfigPtr       1    0[BANK1 ] PTR struct .
  4756 ;;		 -> TempSystem_Configurations(6), 
  4757 ;; Return value:  Size  Location     Type
  4758 ;;                  1    wreg      void 
  4759 ;; Registers used:
  4760 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4761 ;; Tracked objects:
  4762 ;;		On entry : B00/800
  4763 ;;		On exit  : 300/0
  4764 ;;		Unchanged: 0/0
  4765 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4766 ;;      Params:         0       0       0       0       0
  4767 ;;      Locals:         0       0       1       0       0
  4768 ;;      Temps:          0       0       0       0       0
  4769 ;;      Totals:         0       0       1       0       0
  4770 ;;Total ram usage:        1 bytes
  4771 ;; Hardware stack levels used:    1
  4772 ;; Hardware stack levels required when called:   11
  4773 ;; This function calls:
  4774 ;;		_Port_Init
  4775 ;;		_Pwm_Init
  4776 ;; This function is called by:
  4777 ;;		_Init_Task
  4778 ;; This function uses a non-reentrant model
  4779 ;;
  4780                           
  4781                           
  4782                           ;psect for function _TempSystem_Init
  4783  00BF                     _TempSystem_Init:
  4784                           
  4785                           ;incstack = 0
  4786 ;; hardware stack exceeded
  4787                           ; Regs used in _TempSystem_Init: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4788                           ;TempSystem_Init@ConfigPtr stored from wreg
  4789  00BF  1683               	bsf	3,5	;RP0=1, select bank1
  4790  00C0  00E8               	movwf	TempSystem_Init@ConfigPtr^(0+128)
  4791                           
  4792                           ;EcuAL/TempSystem.c: 6: void TempSystem_Init(Port_ConfigType* ConfigPtr);EcuAL/TempSyste
      +                          m.c: 7: {;EcuAL/TempSystem.c: 8:    Pwm_Init(&Pwm_Config);
  4793  00C1  30B1               	movlw	(low (_Pwm_Config| 0))& (0+255)
  4794  00C2  20D4  120A  118A   	fcall	_Pwm_Init
  4795                           
  4796                           ;EcuAL/TempSystem.c: 9:    Port_Init(&ConfigPtr[0]);
  4797  00C5  1683               	bsf	3,5	;RP0=1, select bank1
  4798  00C6  0868               	movf	TempSystem_Init@ConfigPtr^(0+128),w
  4799  00C7  1283               	bcf	3,5	;RP0=0, select bank0
  4800  00C8  00A9               	movwf	Port_Init@ConfigPtr
  4801  00C9  01AA               	clrf	Port_Init@ConfigPtr+1
  4802  00CA  239A  120A  118A   	fcall	_Port_Init
  4803                           
  4804                           ;EcuAL/TempSystem.c: 10:    Port_Init(&ConfigPtr[1]);
  4805  00CD  1683               	bsf	3,5	;RP0=1, select bank1
  4806  00CE  0868               	movf	TempSystem_Init@ConfigPtr^(0+128),w
  4807  00CF  3E03               	addlw	3
  4808  00D0  1283               	bcf	3,5	;RP0=0, select bank0
  4809  00D1  00A9               	movwf	Port_Init@ConfigPtr
  4810  00D2  01AA               	clrf	Port_Init@ConfigPtr+1
  4811  00D3  2B9A               	ljmp	l4217
  4812  00D4                     __end_of_TempSystem_Init:
  4813  00D4                     __ptext26:	
  4814 ;; *************** function _Pwm_Init *****************
  4815 ;; Defined at:
  4816 ;;		line 12 in file "MCAL/Pwm.c"
  4817 ;; Parameters:    Size  Location     Type
  4818 ;;  ConfigPtr       1    wreg     PTR struct .
  4819 ;;		 -> Pwm_Config(7), 
  4820 ;; Auto vars:     Size  Location     Type
  4821 ;;  ConfigPtr       1   29[BANK0 ] PTR struct .
  4822 ;;		 -> Pwm_Config(7), 
  4823 ;;  Gpt_Config2     8   30[BANK0 ] struct .
  4824 ;;  DutyCycle       2   27[BANK0 ] unsigned int 
  4825 ;; Return value:  Size  Location     Type
  4826 ;;                  1    wreg      void 
  4827 ;; Registers used:
  4828 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4829 ;; Tracked objects:
  4830 ;;		On entry : B00/900
  4831 ;;		On exit  : B00/0
  4832 ;;		Unchanged: 0/0
  4833 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4834 ;;      Params:         0       0       0       0       0
  4835 ;;      Locals:         0      11       0       0       0
  4836 ;;      Temps:          0       4       0       0       0
  4837 ;;      Totals:         0      15       0       0       0
  4838 ;;Total ram usage:       15 bytes
  4839 ;; Hardware stack levels used:    1
  4840 ;; Hardware stack levels required when called:   10
  4841 ;; This function calls:
  4842 ;;		_Gpt_Init
  4843 ;;		_Port_Init
  4844 ;;		___aldiv
  4845 ;;		___bmul
  4846 ;;		___lwdiv
  4847 ;;		___wmul
  4848 ;; This function is called by:
  4849 ;;		_TempSystem_Init
  4850 ;; This function uses a non-reentrant model
  4851 ;;
  4852                           
  4853                           
  4854                           ;psect for function _Pwm_Init
  4855  00D4                     _Pwm_Init:
  4856                           
  4857                           ;incstack = 0
  4858 ;; hardware stack exceeded
  4859                           ; Regs used in _Pwm_Init: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4860                           ;Pwm_Init@ConfigPtr stored from wreg
  4861  00D4  1283               	bcf	3,5	;RP0=0, select bank0
  4862  00D5  00BD               	movwf	Pwm_Init@ConfigPtr
  4863                           
  4864                           ;MCAL/Pwm.c: 12: void Pwm_Init(Pwm_ConfigType* ConfigPtr);MCAL/Pwm.c: 13: {;MCAL/Pwm.c: 
      +                          28:     {;MCAL/Pwm.c: 29:         Pwm_ThisConfiguration = ConfigPtr;
  4865  00D6  00E1               	movwf	_Pwm_ThisConfiguration
  4866                           
  4867                           ;MCAL/Pwm.c: 31:         (CCP1CON |= (3 << 2));
  4868  00D7  300C               	movlw	12
  4869  00D8  0497               	iorwf	23,f	;volatile
  4870                           
  4871                           ;MCAL/Pwm.c: 33:         Port_Init(&Pwm_Channels[ConfigPtr->Channel]);
  4872  00D9  3003               	movlw	3
  4873  00DA  00A6               	movwf	___bmul@multiplicand
  4874  00DB  083D               	movf	Pwm_Init@ConfigPtr,w
  4875  00DC  0084               	movwf	4
  4876  00DD  1383               	bcf	3,7	;select IRP bank0
  4877  00DE  0800               	movf	0,w
  4878  00DF  120A  158A  218C  120A  118A  	fcall	___bmul
  4879  00E4  3EC5               	addlw	(low (_Pwm_Channels| 0))& (0+255)
  4880  00E5  00A9               	movwf	Port_Init@ConfigPtr
  4881  00E6  01AA               	clrf	Port_Init@ConfigPtr+1
  4882  00E7  239A  120A  118A   	fcall	_Port_Init
  4883                           
  4884                           ;MCAL/Pwm.c: 35:         Gpt_ConfigType Gpt_Config2 =
  4885  00EA  303E               	movlw	Pwm_Init@Gpt_Config2& (0+255)
  4886  00EB  0084               	movwf	4
  4887  00EC  30E0               	movlw	low Pwm_Init@F1289
  4888  00ED  00B7               	movwf	??_Pwm_Init
  4889  00EE  0804               	movf	4,w
  4890  00EF  00B8               	movwf	??_Pwm_Init+1
  4891  00F0  3008               	movlw	8
  4892  00F1  00B9               	movwf	??_Pwm_Init+2
  4893  00F2                     u3910:
  4894  00F2  0837               	movf	??_Pwm_Init,w
  4895  00F3  0084               	movwf	4
  4896  00F4  1383               	bcf	3,7	;select IRP bank1
  4897  00F5  0800               	movf	0,w
  4898  00F6  00BA               	movwf	??_Pwm_Init+3
  4899  00F7  0AB7               	incf	??_Pwm_Init,f
  4900  00F8  0838               	movf	??_Pwm_Init+1,w
  4901  00F9  0084               	movwf	4
  4902  00FA  083A               	movf	??_Pwm_Init+3,w
  4903  00FB  0080               	movwf	0
  4904  00FC  0AB8               	incf	??_Pwm_Init+1,f
  4905  00FD  0BB9               	decfsz	??_Pwm_Init+2,f
  4906  00FE  28F2               	goto	u3910
  4907  00FF  3002               	movlw	2
  4908  0100  00BE               	movwf	Pwm_Init@Gpt_Config2
  4909  0101  083D               	movf	Pwm_Init@ConfigPtr,w
  4910  0102  0084               	movwf	4
  4911  0103  0800               	movf	0,w
  4912  0104  00BF               	movwf	Pwm_Init@Gpt_Config2+1
  4913  0105  0A3D               	incf	Pwm_Init@ConfigPtr,w
  4914  0106  0084               	movwf	4
  4915  0107  0800               	movf	0,w
  4916  0108  00B7               	movwf	??_Pwm_Init
  4917  0109  0A84               	incf	4,f
  4918  010A  0800               	movf	0,w
  4919  010B  00B8               	movwf	??_Pwm_Init+1
  4920  010C  0837               	movf	??_Pwm_Init,w
  4921  010D  00A6               	movwf	___aldiv@divisor
  4922  010E  0838               	movf	??_Pwm_Init+1,w
  4923  010F  00A7               	movwf	___aldiv@divisor+1
  4924  0110  300F               	movlw	15
  4925  0111  01A8               	clrf	___aldiv@divisor+2
  4926  0112  01A9               	clrf	___aldiv@divisor+3
  4927  0113  01AD               	clrf	___aldiv@dividend+3
  4928  0114  00AC               	movwf	___aldiv@dividend+2
  4929  0115  3042               	movlw	66
  4930  0116  00AB               	movwf	___aldiv@dividend+1
  4931  0117  3040               	movlw	64
  4932  0118  00AA               	movwf	___aldiv@dividend
  4933  0119  22DE  120A  118A   	fcall	___aldiv
  4934  011C  0827               	movf	?___aldiv+1,w
  4935  011D  00C1               	movwf	Pwm_Init@Gpt_Config2+3
  4936  011E  0826               	movf	?___aldiv,w
  4937  011F  00C0               	movwf	Pwm_Init@Gpt_Config2+2
  4938  0120  3002               	movlw	2
  4939  0121  00C3               	movwf	Pwm_Init@Gpt_Config2+5
  4940  0122  303E               	movlw	(low (Pwm_Init@Gpt_Config2| 0))& (0+255)
  4941  0123  01C4               	clrf	Pwm_Init@Gpt_Config2+6
  4942                           
  4943                           ;MCAL/Pwm.c: 44:         Gpt_Init(&Gpt_Config2);
  4944  0124  2180  120A  118A   	fcall	_Gpt_Init
  4945                           
  4946                           ;MCAL/Pwm.c: 46:         uint16_t DutyCycle;;MCAL/Pwm.c: 47:         if(ConfigPtr->Polar
      +                          ity == POLARITY_HIGH)
  4947  0127  083D               	movf	Pwm_Init@ConfigPtr,w
  4948  0128  3E05               	addlw	5
  4949  0129  0084               	movwf	4
  4950  012A  0B00               	decfsz	0,w
  4951  012B  2938               	goto	l4485
  4952                           
  4953                           ;MCAL/Pwm.c: 48:             DutyCycle = (ConfigPtr->DutyCycle*255*2)/100;
  4954  012C  3064               	movlw	100
  4955  012D  00AC               	movwf	___lwdiv@divisor
  4956  012E  01AD               	clrf	___lwdiv@divisor+1
  4957  012F  083D               	movf	Pwm_Init@ConfigPtr,w
  4958  0130  3E03               	addlw	3
  4959  0131  0084               	movwf	4
  4960  0132  0800               	movf	0,w
  4961  0133  00A6               	movwf	___wmul@multiplier
  4962  0134  0A84               	incf	4,f
  4963  0135  0800               	movf	0,w
  4964  0136  00A7               	movwf	___wmul@multiplier+1
  4965  0137  2951               	goto	L7
  4966  0138                     l4485:
  4967  0138  083D               	movf	Pwm_Init@ConfigPtr,w
  4968  0139  3E05               	addlw	5
  4969  013A  0084               	movwf	4
  4970  013B  0800               	movf	0,w
  4971  013C  1D03               	btfss	3,2
  4972  013D  2965               	goto	l4489
  4973                           
  4974                           ;MCAL/Pwm.c: 50:             DutyCycle = ((100 - ConfigPtr->DutyCycle)*255*2)/100;
  4975  013E  3064               	movlw	100
  4976  013F  00AC               	movwf	___lwdiv@divisor
  4977  0140  01AD               	clrf	___lwdiv@divisor+1
  4978  0141  00A6               	movwf	___wmul@multiplier
  4979  0142  01A7               	clrf	___wmul@multiplier+1
  4980  0143  083D               	movf	Pwm_Init@ConfigPtr,w
  4981  0144  3E03               	addlw	3
  4982  0145  0084               	movwf	4
  4983  0146  0800               	movf	0,w
  4984  0147  00B7               	movwf	??_Pwm_Init
  4985  0148  0A84               	incf	4,f
  4986  0149  0800               	movf	0,w
  4987  014A  00B8               	movwf	??_Pwm_Init+1
  4988  014B  0837               	movf	??_Pwm_Init,w
  4989  014C  02A6               	subwf	___wmul@multiplier,f
  4990  014D  0838               	movf	??_Pwm_Init+1,w
  4991  014E  1C03               	skipc
  4992  014F  03A7               	decf	___wmul@multiplier+1,f
  4993  0150  02A7               	subwf	___wmul@multiplier+1,f
  4994  0151                     L7:
  4995  0151  30FE               	movlw	254
  4996  0152  00A8               	movwf	___wmul@multiplicand
  4997  0153  3001               	movlw	1
  4998  0154  00A9               	movwf	___wmul@multiplicand+1
  4999  0155  120A  158A  21BE  120A  118A  	fcall	___wmul
  5000  015A  0827               	movf	?___wmul+1,w
  5001  015B  00AF               	movwf	___lwdiv@dividend+1
  5002  015C  0826               	movf	?___wmul,w
  5003  015D  00AE               	movwf	___lwdiv@dividend
  5004  015E  120A  118A  25CB   	fcall	___lwdiv
  5005  0161  082D               	movf	?___lwdiv+1,w
  5006  0162  00BC               	movwf	Pwm_Init@DutyCycle+1
  5007  0163  082C               	movf	?___lwdiv,w
  5008  0164  00BB               	movwf	Pwm_Init@DutyCycle
  5009  0165                     l4489:
  5010                           
  5011                           ;MCAL/Pwm.c: 52:         Pwm_ThisConfiguration->Status = PWM_IDLE;
  5012  0165  0861               	movf	_Pwm_ThisConfiguration,w
  5013  0166  3E06               	addlw	6
  5014  0167  0084               	movwf	4
  5015  0168  1383               	bcf	3,7	;select IRP bank0
  5016  0169  0180               	clrf	0
  5017  016A  0A80               	incf	0,f
  5018                           
  5019                           ;MCAL/Pwm.c: 54:         (CCP1CON |= (DutyCycle & 0x3 << 4));
  5020  016B  083B               	movf	Pwm_Init@DutyCycle,w	;volatile
  5021  016C  3930               	andlw	48
  5022  016D  0497               	iorwf	23,f	;volatile
  5023                           
  5024                           ;MCAL/Pwm.c: 55:         CCPR1L = (DutyCycle >> 2);
  5025  016E  083C               	movf	Pwm_Init@DutyCycle+1,w
  5026  016F  00B8               	movwf	??_Pwm_Init+1
  5027  0170  083B               	movf	Pwm_Init@DutyCycle,w
  5028  0171  00B7               	movwf	??_Pwm_Init
  5029  0172  1003               	clrc
  5030  0173  0CB8               	rrf	??_Pwm_Init+1,f
  5031  0174  0CB7               	rrf	??_Pwm_Init,f
  5032  0175  1003               	clrc
  5033  0176  0CB8               	rrf	??_Pwm_Init+1,f
  5034  0177  0CB7               	rrf	??_Pwm_Init,f
  5035  0178  0837               	movf	??_Pwm_Init,w
  5036  0179  0095               	movwf	21	;volatile
  5037                           
  5038                           ;MCAL/Pwm.c: 57:         Pwm_ThisConfiguration->Status = PWM_BUSY;
  5039  017A  0861               	movf	_Pwm_ThisConfiguration,w
  5040  017B  3E06               	addlw	6
  5041  017C  0084               	movwf	4
  5042  017D  3002               	movlw	2
  5043  017E  0080               	movwf	0
  5044  017F  0008               	return
  5045  0180                     __end_of_Pwm_Init:
  5046  0180                     __ptext30:	
  5047 ;; *************** function _Gpt_Init *****************
  5048 ;; Defined at:
  5049 ;;		line 14 in file "MCAL/Gpt.c"
  5050 ;; Parameters:    Size  Location     Type
  5051 ;;  ConfigPtr       1    wreg     PTR struct .
  5052 ;;		 -> Pwm_SetPeriodAndDuty@Gpt_Configg(8), Pwm_Init@Gpt_Config2(8), Gpt_Config(8), 
  5053 ;; Auto vars:     Size  Location     Type
  5054 ;;  ConfigPtr       1   22[BANK0 ] PTR struct .
  5055 ;;		 -> Pwm_SetPeriodAndDuty@Gpt_Configg(8), Pwm_Init@Gpt_Config2(8), Gpt_Config(8), 
  5056 ;; Return value:  Size  Location     Type
  5057 ;;                  1    wreg      void 
  5058 ;; Registers used:
  5059 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5060 ;; Tracked objects:
  5061 ;;		On entry : 300/800
  5062 ;;		On exit  : B00/0
  5063 ;;		Unchanged: 0/0
  5064 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5065 ;;      Params:         0       0       0       0       0
  5066 ;;      Locals:         0       1       0       0       0
  5067 ;;      Temps:          0       2       0       0       0
  5068 ;;      Totals:         0       3       0       0       0
  5069 ;;Total ram usage:        3 bytes
  5070 ;; Hardware stack levels used:    1
  5071 ;; Hardware stack levels required when called:    9
  5072 ;; This function calls:
  5073 ;;		_Interrupt_Enable
  5074 ;;		___aldiv
  5075 ;; This function is called by:
  5076 ;;		_Init_Task
  5077 ;;		_Pwm_Init
  5078 ;; This function uses a non-reentrant model
  5079 ;;
  5080                           
  5081                           
  5082                           ;psect for function _Gpt_Init
  5083  0180                     _Gpt_Init:
  5084                           
  5085                           ;incstack = 0
  5086 ;; hardware stack exceeded
  5087                           ; Regs used in _Gpt_Init: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5088                           ;Gpt_Init@ConfigPtr stored from wreg
  5089  0180  00B6               	movwf	Gpt_Init@ConfigPtr
  5090                           
  5091                           ;MCAL/Gpt.c: 14: void Gpt_Init(Gpt_ConfigType* ConfigPtr);MCAL/Gpt.c: 15: {;MCAL/Gpt.c: 
      +                          39:     {;MCAL/Gpt.c: 40:       if(ConfigPtr->Module == TIMER1 && ConfigPtr->Channel == 
      +                          0
  5092  0181  0084               	movwf	4
  5093  0182  1383               	bcf	3,7	;select IRP bank0
  5094  0183  0B00               	decfsz	0,w
  5095  0184  2A5A               	goto	l4287
  5096  0185  0A36               	incf	Gpt_Init@ConfigPtr,w
  5097  0186  0084               	movwf	4
  5098  0187  0800               	movf	0,w
  5099  0188  1D03               	btfss	3,2
  5100  0189  2A5A               	goto	l4287
  5101  018A  0836               	movf	Gpt_Init@ConfigPtr,w
  5102  018B  3E05               	addlw	5
  5103  018C  0084               	movwf	4
  5104  018D  0800               	movf	0,w
  5105  018E  1D03               	btfss	3,2
  5106  018F  2A5A               	goto	l4287
  5107                           
  5108                           ;MCAL/Gpt.c: 42:       {;MCAL/Gpt.c: 43:        T1CON |= (ConfigPtr->ClkSource<<1);
  5109  0190  0836               	movf	Gpt_Init@ConfigPtr,w
  5110  0191  3E06               	addlw	6
  5111  0192  0084               	movwf	4
  5112  0193  1003               	clrc
  5113  0194  0D00               	rlf	0,w
  5114  0195  0490               	iorwf	16,f	;volatile
  5115                           
  5116                           ;MCAL/Gpt.c: 45:       if(ConfigPtr->TickRate>39)
  5117  0196  0836               	movf	Gpt_Init@ConfigPtr,w
  5118  0197  3E02               	addlw	2
  5119  0198  0084               	movwf	4
  5120  0199  0800               	movf	0,w
  5121  019A  00B4               	movwf	??_Gpt_Init
  5122  019B  0A84               	incf	4,f
  5123  019C  0800               	movf	0,w
  5124  019D  00B5               	movwf	??_Gpt_Init+1
  5125  019E  3000               	movlw	0
  5126  019F  0235               	subwf	??_Gpt_Init+1,w
  5127  01A0  3028               	movlw	40
  5128  01A1  1903               	skipnz
  5129  01A2  0234               	subwf	??_Gpt_Init,w
  5130  01A3  1C03               	skipc
  5131  01A4  29AF               	goto	l4245
  5132                           
  5133                           ;MCAL/Gpt.c: 46:       {;MCAL/Gpt.c: 47:           T1CON = (GPT_PRE_1 <<4);
  5134  01A5  0190               	clrf	16	;volatile
  5135                           
  5136                           ;MCAL/Gpt.c: 49:           Gpt_ReloadValue=(65535-(10000000/(ConfigPtr->TickRate*4*1)));
  5137  01A6  0836               	movf	Gpt_Init@ConfigPtr,w
  5138  01A7  3E02               	addlw	2
  5139  01A8  0084               	movwf	4
  5140  01A9  0800               	movf	0,w
  5141  01AA  00B4               	movwf	??_Gpt_Init
  5142  01AB  0A84               	incf	4,f
  5143  01AC  0800               	movf	0,w
  5144  01AD  00B5               	movwf	??_Gpt_Init+1
  5145  01AE  29CB               	goto	L15
  5146  01AF                     l4245:	
  5147                           ;MCAL/Gpt.c: 50:       }
  5148                           
  5149  01AF  0836               	movf	Gpt_Init@ConfigPtr,w
  5150  01B0  3E02               	addlw	2
  5151  01B1  0084               	movwf	4
  5152  01B2  0800               	movf	0,w
  5153  01B3  00B4               	movwf	??_Gpt_Init
  5154  01B4  0A84               	incf	4,f
  5155  01B5  0800               	movf	0,w
  5156  01B6  00B5               	movwf	??_Gpt_Init+1
  5157  01B7  3000               	movlw	0
  5158  01B8  0235               	subwf	??_Gpt_Init+1,w
  5159  01B9  3015               	movlw	21
  5160  01BA  1903               	skipnz
  5161  01BB  0234               	subwf	??_Gpt_Init,w
  5162  01BC  1C03               	skipc
  5163  01BD  29D2               	goto	l4251
  5164                           
  5165                           ;MCAL/Gpt.c: 52:       {;MCAL/Gpt.c: 53:           T1CON = (GPT_PRE_2 <<4);
  5166  01BE  3010               	movlw	16
  5167  01BF  0090               	movwf	16	;volatile
  5168                           
  5169                           ;MCAL/Gpt.c: 55:           Gpt_ReloadValue=(65535-(10000000/(ConfigPtr->TickRate*4*2)));
  5170  01C0  0836               	movf	Gpt_Init@ConfigPtr,w
  5171  01C1  3E02               	addlw	2
  5172  01C2  0084               	movwf	4
  5173  01C3  0800               	movf	0,w
  5174  01C4  00B4               	movwf	??_Gpt_Init
  5175  01C5  0A84               	incf	4,f
  5176  01C6  0800               	movf	0,w
  5177  01C7  00B5               	movwf	??_Gpt_Init+1
  5178  01C8  1003               	clrc
  5179  01C9  0DB4               	rlf	??_Gpt_Init,f
  5180  01CA  0DB5               	rlf	??_Gpt_Init+1,f
  5181  01CB                     L15:
  5182  01CB  1003               	clrc
  5183  01CC  0DB4               	rlf	??_Gpt_Init,f
  5184  01CD  0DB5               	rlf	??_Gpt_Init+1,f
  5185  01CE  1003               	clrc
  5186  01CF  0DB4               	rlf	??_Gpt_Init,f
  5187  01D0  0DB5               	rlf	??_Gpt_Init+1,f
  5188  01D1  2A15               	goto	L14
  5189  01D2                     l4251:	
  5190                           ;MCAL/Gpt.c: 56:       }
  5191                           
  5192  01D2  0836               	movf	Gpt_Init@ConfigPtr,w
  5193  01D3  3E02               	addlw	2
  5194  01D4  0084               	movwf	4
  5195  01D5  0800               	movf	0,w
  5196  01D6  00B4               	movwf	??_Gpt_Init
  5197  01D7  0A84               	incf	4,f
  5198  01D8  0800               	movf	0,w
  5199  01D9  00B5               	movwf	??_Gpt_Init+1
  5200  01DA  3000               	movlw	0
  5201  01DB  0235               	subwf	??_Gpt_Init+1,w
  5202  01DC  300B               	movlw	11
  5203  01DD  1903               	skipnz
  5204  01DE  0234               	subwf	??_Gpt_Init,w
  5205  01DF  1C03               	skipc
  5206  01E0  29F5               	goto	l4257
  5207                           
  5208                           ;MCAL/Gpt.c: 58:       {;MCAL/Gpt.c: 59:           T1CON = (GPT_PRE_4 <<4);
  5209  01E1  3020               	movlw	32
  5210  01E2  0090               	movwf	16	;volatile
  5211                           
  5212                           ;MCAL/Gpt.c: 61:           Gpt_ReloadValue=(65535-(10000000/(ConfigPtr->TickRate*4*4)));
  5213  01E3  0836               	movf	Gpt_Init@ConfigPtr,w
  5214  01E4  3E02               	addlw	2
  5215  01E5  0084               	movwf	4
  5216  01E6  0800               	movf	0,w
  5217  01E7  00B4               	movwf	??_Gpt_Init
  5218  01E8  0A84               	incf	4,f
  5219  01E9  0800               	movf	0,w
  5220  01EA  00B5               	movwf	??_Gpt_Init+1
  5221  01EB  30F0               	movlw	240
  5222  01EC  0EB4               	swapf	??_Gpt_Init,f
  5223  01ED  0EB5               	swapf	??_Gpt_Init+1,f
  5224  01EE  05B5               	andwf	??_Gpt_Init+1,f
  5225  01EF  0834               	movf	??_Gpt_Init,w
  5226  01F0  390F               	andlw	15
  5227  01F1  04B5               	iorwf	??_Gpt_Init+1,f
  5228  01F2  30F0               	movlw	240
  5229  01F3  05B4               	andwf	??_Gpt_Init,f
  5230  01F4  2A15               	goto	L14
  5231  01F5                     l4257:	
  5232                           ;MCAL/Gpt.c: 62:       }
  5233                           
  5234  01F5  0836               	movf	Gpt_Init@ConfigPtr,w
  5235  01F6  3E02               	addlw	2
  5236  01F7  0084               	movwf	4
  5237  01F8  0800               	movf	0,w
  5238  01F9  00B4               	movwf	??_Gpt_Init
  5239  01FA  0A84               	incf	4,f
  5240  01FB  0800               	movf	0,w
  5241  01FC  00B5               	movwf	??_Gpt_Init+1
  5242  01FD  3000               	movlw	0
  5243  01FE  0235               	subwf	??_Gpt_Init+1,w
  5244  01FF  3006               	movlw	6
  5245  0200  1903               	skipnz
  5246  0201  0234               	subwf	??_Gpt_Init,w
  5247  0202  1C03               	skipc
  5248  0203  2A29               	goto	l4263
  5249                           
  5250                           ;MCAL/Gpt.c: 64:       {;MCAL/Gpt.c: 65:           T1CON = (GPT_PRE_8 <<4);
  5251  0204  3030               	movlw	48
  5252  0205  0090               	movwf	16	;volatile
  5253                           
  5254                           ;MCAL/Gpt.c: 67:           Gpt_ReloadValue=(65535-(10000000/(ConfigPtr->TickRate*4*8)));
  5255  0206  0836               	movf	Gpt_Init@ConfigPtr,w
  5256  0207  3E02               	addlw	2
  5257  0208  0084               	movwf	4
  5258  0209  0800               	movf	0,w
  5259  020A  00B4               	movwf	??_Gpt_Init
  5260  020B  0A84               	incf	4,f
  5261  020C  0800               	movf	0,w
  5262  020D  00B5               	movwf	??_Gpt_Init+1
  5263  020E  3005               	movlw	5
  5264  020F  00FF               	movwf	127
  5265  0210                     u3635:
  5266  0210  1003               	clrc
  5267  0211  0DB4               	rlf	??_Gpt_Init,f
  5268  0212  0DB5               	rlf	??_Gpt_Init+1,f
  5269  0213  0BFF               	decfsz	127,f
  5270  0214  2A10               	goto	u3635
  5271  0215                     L14:
  5272  0215  0834               	movf	??_Gpt_Init,w
  5273  0216  00A6               	movwf	___aldiv@divisor
  5274  0217  0835               	movf	??_Gpt_Init+1,w
  5275  0218  00A7               	movwf	___aldiv@divisor+1
  5276  0219  3098               	movlw	152
  5277  021A  01A8               	clrf	___aldiv@divisor+2
  5278  021B  01A9               	clrf	___aldiv@divisor+3
  5279  021C  01AD               	clrf	___aldiv@dividend+3
  5280  021D  00AC               	movwf	___aldiv@dividend+2
  5281  021E  3096               	movlw	150
  5282  021F  00AB               	movwf	___aldiv@dividend+1
  5283  0220  3080               	movlw	128
  5284  0221  00AA               	movwf	___aldiv@dividend
  5285  0222  22DE  120A  118A   	fcall	___aldiv
  5286  0225  0926               	comf	?___aldiv,w
  5287  0226  00D8               	movwf	_Gpt_ReloadValue
  5288  0227  0927               	comf	?___aldiv+1,w
  5289  0228  00D9               	movwf	_Gpt_ReloadValue+1
  5290  0229                     l4263:
  5291                           
  5292                           ;MCAL/Gpt.c: 77:       if(ConfigPtr->Mode==TIMER_MODE && ConfigPtr->ClkSource==GPT_INTER
      +                          NAL)
  5293  0229  0836               	movf	Gpt_Init@ConfigPtr,w
  5294  022A  3E05               	addlw	5
  5295  022B  0084               	movwf	4
  5296  022C  0800               	movf	0,w
  5297  022D  1D03               	btfss	3,2
  5298  022E  2A37               	goto	l4269
  5299  022F  0836               	movf	Gpt_Init@ConfigPtr,w
  5300  0230  3E06               	addlw	6
  5301  0231  0084               	movwf	4
  5302  0232  0800               	movf	0,w
  5303  0233  1D03               	btfss	3,2
  5304  0234  2A37               	goto	l4269
  5305                           
  5306                           ;MCAL/Gpt.c: 78:           (T1CON&=(~(1<<1)));
  5307  0235  1090               	bcf	16,1	;volatile
  5308  0236  2A42               	goto	l4275
  5309  0237                     l4269:
  5310  0237  0836               	movf	Gpt_Init@ConfigPtr,w
  5311  0238  3E05               	addlw	5
  5312  0239  0084               	movwf	4
  5313  023A  0B00               	decfsz	0,w
  5314  023B  2A42               	goto	l4275
  5315  023C  0836               	movf	Gpt_Init@ConfigPtr,w
  5316  023D  3E06               	addlw	6
  5317  023E  0084               	movwf	4
  5318  023F  0B00               	decfsz	0,w
  5319  0240  2A42               	goto	l4275
  5320                           
  5321                           ;MCAL/Gpt.c: 80:           (T1CON|=(1<<1));
  5322  0241  1490               	bsf	16,1	;volatile
  5323  0242                     l4275:
  5324                           
  5325                           ;MCAL/Gpt.c: 82:       Gpt_ThisConfiguration_1 = ConfigPtr ;
  5326  0242  0836               	movf	Gpt_Init@ConfigPtr,w
  5327  0243  00E3               	movwf	_Gpt_ThisConfiguration_1
  5328                           
  5329                           ;MCAL/Gpt.c: 83:       Gpt_ThisConfiguration_1->Status = GPT_IDLE;
  5330  0244  3E07               	addlw	7
  5331  0245  0084               	movwf	4
  5332  0246  0180               	clrf	0
  5333  0247  0A80               	incf	0,f
  5334                           
  5335                           ;MCAL/Gpt.c: 85:       TMR1 = Gpt_ReloadValue;
  5336  0248  0859               	movf	_Gpt_ReloadValue+1,w
  5337  0249  008F               	movwf	15	;volatile
  5338  024A  0858               	movf	_Gpt_ReloadValue,w
  5339  024B  008E               	movwf	14	;volatile
  5340                           
  5341                           ;MCAL/Gpt.c: 86:       (T1CON|=(1<<0));
  5342  024C  1410               	bsf	16,0	;volatile
  5343                           
  5344                           ;MCAL/Gpt.c: 87:       Interrupt_Enable(TIMER,Interrupt_TimerCallbackFn);
  5345  024D  3019               	movlw	(low (fp__Interrupt_TimerCallbackFn-i1fpbase))& (0+255)
  5346  024E  00A6               	movwf	Interrupt_Enable@callback
  5347  024F  3000               	movlw	0
  5348  0250  120A  118A  276F   	fcall	_Interrupt_Enable
  5349                           
  5350                           ;MCAL/Gpt.c: 89:       Gpt_ThisConfiguration_1->Status = GPT_BUSY;
  5351  0253  0863               	movf	_Gpt_ThisConfiguration_1,w
  5352  0254  3E07               	addlw	7
  5353  0255  0084               	movwf	4
  5354  0256  3002               	movlw	2
  5355  0257  1383               	bcf	3,7	;select IRP bank0
  5356  0258  0080               	movwf	0
  5357                           
  5358                           ;MCAL/Gpt.c: 91:     }
  5359  0259  0008               	return
  5360  025A                     l4287:
  5361  025A  0836               	movf	Gpt_Init@ConfigPtr,w
  5362  025B  0084               	movwf	4
  5363  025C  3002               	movlw	2
  5364  025D  0600               	xorwf	0,w
  5365  025E  1D03               	btfss	3,2
  5366  025F  0008               	return
  5367  0260  0836               	movf	Gpt_Init@ConfigPtr,w
  5368  0261  3E05               	addlw	5
  5369  0262  0084               	movwf	4
  5370  0263  3002               	movlw	2
  5371  0264  0600               	xorwf	0,w
  5372  0265  1D03               	btfss	3,2
  5373  0266  0008               	return
  5374                           
  5375                           ;MCAL/Gpt.c: 93:     {;MCAL/Gpt.c: 94:         if(ConfigPtr->TickRate>10000)
  5376  0267  0836               	movf	Gpt_Init@ConfigPtr,w
  5377  0268  3E02               	addlw	2
  5378  0269  0084               	movwf	4
  5379  026A  0800               	movf	0,w
  5380  026B  00B4               	movwf	??_Gpt_Init
  5381  026C  0A84               	incf	4,f
  5382  026D  0800               	movf	0,w
  5383  026E  00B5               	movwf	??_Gpt_Init+1
  5384  026F  3027               	movlw	39
  5385  0270  0235               	subwf	??_Gpt_Init+1,w
  5386  0271  3011               	movlw	17
  5387  0272  1903               	skipnz
  5388  0273  0234               	subwf	??_Gpt_Init,w
  5389  0274  1C03               	skipc
  5390  0275  2A86               	goto	l4297
  5391                           
  5392                           ;MCAL/Gpt.c: 95:       {;MCAL/Gpt.c: 96:           T2CON = ((GPT_PRE_1/2) <<0);
  5393  0276  0192               	clrf	18	;volatile
  5394                           
  5395                           ;MCAL/Gpt.c: 98:           PR2 = 10000000/(ConfigPtr->TickRate*4*1)-1;
  5396  0277  0836               	movf	Gpt_Init@ConfigPtr,w
  5397  0278  3E02               	addlw	2
  5398  0279  0084               	movwf	4
  5399  027A  0800               	movf	0,w
  5400  027B  00B4               	movwf	??_Gpt_Init
  5401  027C  0A84               	incf	4,f
  5402  027D  0800               	movf	0,w
  5403  027E  00B5               	movwf	??_Gpt_Init+1
  5404  027F  1003               	clrc
  5405  0280  0DB4               	rlf	??_Gpt_Init,f
  5406  0281  0DB5               	rlf	??_Gpt_Init+1,f
  5407  0282  1003               	clrc
  5408  0283  0DB4               	rlf	??_Gpt_Init,f
  5409  0284  0DB5               	rlf	??_Gpt_Init+1,f
  5410  0285  2AC9               	goto	L13
  5411  0286                     l4297:	
  5412                           ;MCAL/Gpt.c: 99:       }
  5413                           
  5414  0286  0836               	movf	Gpt_Init@ConfigPtr,w
  5415  0287  3E02               	addlw	2
  5416  0288  0084               	movwf	4
  5417  0289  0800               	movf	0,w
  5418  028A  00B4               	movwf	??_Gpt_Init
  5419  028B  0A84               	incf	4,f
  5420  028C  0800               	movf	0,w
  5421  028D  00B5               	movwf	??_Gpt_Init+1
  5422  028E  3009               	movlw	9
  5423  028F  0235               	subwf	??_Gpt_Init+1,w
  5424  0290  30C5               	movlw	197
  5425  0291  1903               	skipnz
  5426  0292  0234               	subwf	??_Gpt_Init,w
  5427  0293  1C03               	skipc
  5428  0294  2AA9               	goto	l4303
  5429                           
  5430                           ;MCAL/Gpt.c: 101:       {;MCAL/Gpt.c: 102:           T2CON = ((GPT_PRE_4/2) <<0);
  5431  0295  3001               	movlw	1
  5432  0296  0092               	movwf	18	;volatile
  5433                           
  5434                           ;MCAL/Gpt.c: 104:           PR2 = 10000000/(ConfigPtr->TickRate*4*4)-1;
  5435  0297  0836               	movf	Gpt_Init@ConfigPtr,w
  5436  0298  3E02               	addlw	2
  5437  0299  0084               	movwf	4
  5438  029A  0800               	movf	0,w
  5439  029B  00B4               	movwf	??_Gpt_Init
  5440  029C  0A84               	incf	4,f
  5441  029D  0800               	movf	0,w
  5442  029E  00B5               	movwf	??_Gpt_Init+1
  5443  029F  30F0               	movlw	240
  5444  02A0  0EB4               	swapf	??_Gpt_Init,f
  5445  02A1  0EB5               	swapf	??_Gpt_Init+1,f
  5446  02A2  05B5               	andwf	??_Gpt_Init+1,f
  5447  02A3  0834               	movf	??_Gpt_Init,w
  5448  02A4  390F               	andlw	15
  5449  02A5  04B5               	iorwf	??_Gpt_Init+1,f
  5450  02A6  30F0               	movlw	240
  5451  02A7  05B4               	andwf	??_Gpt_Init,f
  5452  02A8  2AC9               	goto	L13
  5453  02A9                     l4303:	
  5454                           ;MCAL/Gpt.c: 105:       }
  5455                           
  5456  02A9  0836               	movf	Gpt_Init@ConfigPtr,w
  5457  02AA  3E02               	addlw	2
  5458  02AB  0084               	movwf	4
  5459  02AC  0800               	movf	0,w
  5460  02AD  00B4               	movwf	??_Gpt_Init
  5461  02AE  0A84               	incf	4,f
  5462  02AF  0800               	movf	0,w
  5463  02B0  00B5               	movwf	??_Gpt_Init+1
  5464  02B1  3002               	movlw	2
  5465  02B2  0235               	subwf	??_Gpt_Init+1,w
  5466  02B3  3059               	movlw	89
  5467  02B4  1903               	skipnz
  5468  02B5  0234               	subwf	??_Gpt_Init,w
  5469  02B6  1C03               	skipc
  5470  02B7  2ADB               	goto	l4309
  5471                           
  5472                           ;MCAL/Gpt.c: 107:       {;MCAL/Gpt.c: 108:           T2CON = ((GPT_PRE_16/2) <<0);
  5473  02B8  3002               	movlw	2
  5474  02B9  0092               	movwf	18	;volatile
  5475                           
  5476                           ;MCAL/Gpt.c: 110:           PR2 = 10000000/(ConfigPtr->TickRate*4*16)-1;
  5477  02BA  0836               	movf	Gpt_Init@ConfigPtr,w
  5478  02BB  3E02               	addlw	2
  5479  02BC  0084               	movwf	4
  5480  02BD  0800               	movf	0,w
  5481  02BE  00B4               	movwf	??_Gpt_Init
  5482  02BF  0A84               	incf	4,f
  5483  02C0  0800               	movf	0,w
  5484  02C1  00B5               	movwf	??_Gpt_Init+1
  5485  02C2  3006               	movlw	6
  5486  02C3  00FF               	movwf	127
  5487  02C4                     u3735:
  5488  02C4  1003               	clrc
  5489  02C5  0DB4               	rlf	??_Gpt_Init,f
  5490  02C6  0DB5               	rlf	??_Gpt_Init+1,f
  5491  02C7  0BFF               	decfsz	127,f
  5492  02C8  2AC4               	goto	u3735
  5493  02C9                     L13:
  5494  02C9  0834               	movf	??_Gpt_Init,w
  5495  02CA  00A6               	movwf	___aldiv@divisor
  5496  02CB  0835               	movf	??_Gpt_Init+1,w
  5497  02CC  00A7               	movwf	___aldiv@divisor+1
  5498  02CD  3098               	movlw	152
  5499  02CE  01A8               	clrf	___aldiv@divisor+2
  5500  02CF  01A9               	clrf	___aldiv@divisor+3
  5501  02D0  01AD               	clrf	___aldiv@dividend+3
  5502  02D1  00AC               	movwf	___aldiv@dividend+2
  5503  02D2  3096               	movlw	150
  5504  02D3  00AB               	movwf	___aldiv@dividend+1
  5505  02D4  3080               	movlw	128
  5506  02D5  00AA               	movwf	___aldiv@dividend
  5507  02D6  22DE               	fcall	___aldiv
  5508  02D7  0826               	movf	?___aldiv,w
  5509  02D8  3EFF               	addlw	255
  5510  02D9  1683               	bsf	3,5	;RP0=1, select bank1
  5511  02DA  0092               	movwf	18	;volatile
  5512  02DB                     l4309:
  5513                           
  5514                           ;MCAL/Gpt.c: 120:        (T2CON|=(1<<2));
  5515  02DB  1283               	bcf	3,5	;RP0=0, select bank0
  5516  02DC  1512               	bsf	18,2	;volatile
  5517  02DD  0008               	return
  5518  02DE                     __end_of_Gpt_Init:
  5519  02DE                     __ptext31:	
  5520 ;; *************** function ___aldiv *****************
  5521 ;; Defined at:
  5522 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\aldiv.c"
  5523 ;; Parameters:    Size  Location     Type
  5524 ;;  divisor         4    6[BANK0 ] long 
  5525 ;;  dividend        4   10[BANK0 ] long 
  5526 ;; Auto vars:     Size  Location     Type
  5527 ;;  quotient        4   16[BANK0 ] long 
  5528 ;;  sign            1   15[BANK0 ] unsigned char 
  5529 ;;  counter         1   14[BANK0 ] unsigned char 
  5530 ;; Return value:  Size  Location     Type
  5531 ;;                  4    6[BANK0 ] long 
  5532 ;; Registers used:
  5533 ;;		wreg, status,2, status,0
  5534 ;; Tracked objects:
  5535 ;;		On entry : B00/0
  5536 ;;		On exit  : B00/0
  5537 ;;		Unchanged: 800/0
  5538 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5539 ;;      Params:         0       8       0       0       0
  5540 ;;      Locals:         0       6       0       0       0
  5541 ;;      Temps:          0       0       0       0       0
  5542 ;;      Totals:         0      14       0       0       0
  5543 ;;Total ram usage:       14 bytes
  5544 ;; Hardware stack levels used:    1
  5545 ;; Hardware stack levels required when called:    8
  5546 ;; This function calls:
  5547 ;;		Nothing
  5548 ;; This function is called by:
  5549 ;;		_Gpt_Init
  5550 ;;		_Pwm_Init
  5551 ;; This function uses a non-reentrant model
  5552 ;;
  5553                           
  5554                           
  5555                           ;psect for function ___aldiv
  5556  02DE                     ___aldiv:
  5557                           
  5558                           ;incstack = 0
  5559 ;; hardware stack exceeded
  5560                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  5561  02DE  01AF               	clrf	___aldiv@sign
  5562  02DF  1FA9               	btfss	___aldiv@divisor+3,7
  5563  02E0  2AEE               	goto	l1060
  5564  02E1  09A6               	comf	___aldiv@divisor,f
  5565  02E2  09A7               	comf	___aldiv@divisor+1,f
  5566  02E3  09A8               	comf	___aldiv@divisor+2,f
  5567  02E4  09A9               	comf	___aldiv@divisor+3,f
  5568  02E5  0AA6               	incf	___aldiv@divisor,f
  5569  02E6  1903               	skipnz
  5570  02E7  0AA7               	incf	___aldiv@divisor+1,f
  5571  02E8  1903               	skipnz
  5572  02E9  0AA8               	incf	___aldiv@divisor+2,f
  5573  02EA  1903               	skipnz
  5574  02EB  0AA9               	incf	___aldiv@divisor+3,f
  5575  02EC  01AF               	clrf	___aldiv@sign
  5576  02ED  0AAF               	incf	___aldiv@sign,f
  5577  02EE                     l1060:
  5578  02EE  1FAD               	btfss	___aldiv@dividend+3,7
  5579  02EF  2AFD               	goto	l4185
  5580  02F0  09AA               	comf	___aldiv@dividend,f
  5581  02F1  09AB               	comf	___aldiv@dividend+1,f
  5582  02F2  09AC               	comf	___aldiv@dividend+2,f
  5583  02F3  09AD               	comf	___aldiv@dividend+3,f
  5584  02F4  0AAA               	incf	___aldiv@dividend,f
  5585  02F5  1903               	skipnz
  5586  02F6  0AAB               	incf	___aldiv@dividend+1,f
  5587  02F7  1903               	skipnz
  5588  02F8  0AAC               	incf	___aldiv@dividend+2,f
  5589  02F9  1903               	skipnz
  5590  02FA  0AAD               	incf	___aldiv@dividend+3,f
  5591  02FB  3001               	movlw	1
  5592  02FC  06AF               	xorwf	___aldiv@sign,f
  5593  02FD                     l4185:
  5594  02FD  01B0               	clrf	___aldiv@quotient
  5595  02FE  01B1               	clrf	___aldiv@quotient+1
  5596  02FF  01B2               	clrf	___aldiv@quotient+2
  5597  0300  01B3               	clrf	___aldiv@quotient+3
  5598  0301  0829               	movf	___aldiv@divisor+3,w
  5599  0302  0428               	iorwf	___aldiv@divisor+2,w
  5600  0303  0427               	iorwf	___aldiv@divisor+1,w
  5601  0304  0426               	iorwf	___aldiv@divisor,w
  5602  0305  1903               	skipnz
  5603  0306  2B3C               	goto	l4207
  5604  0307  01AE               	clrf	___aldiv@counter
  5605  0308                     L16:
  5606  0308  0AAE               	incf	___aldiv@counter,f
  5607  0309  1BA9               	btfsc	___aldiv@divisor+3,7
  5608  030A  2B11               	goto	l4195
  5609  030B  1003               	clrc
  5610  030C  0DA6               	rlf	___aldiv@divisor,f
  5611  030D  0DA7               	rlf	___aldiv@divisor+1,f
  5612  030E  0DA8               	rlf	___aldiv@divisor+2,f
  5613  030F  0DA9               	rlf	___aldiv@divisor+3,f
  5614  0310  2B08               	goto	L16
  5615  0311                     l4195:
  5616  0311  1003               	clrc
  5617  0312  0DB0               	rlf	___aldiv@quotient,f
  5618  0313  0DB1               	rlf	___aldiv@quotient+1,f
  5619  0314  0DB2               	rlf	___aldiv@quotient+2,f
  5620  0315  0DB3               	rlf	___aldiv@quotient+3,f
  5621  0316  0829               	movf	___aldiv@divisor+3,w
  5622  0317  022D               	subwf	___aldiv@dividend+3,w
  5623  0318  1D03               	skipz
  5624  0319  2B24               	goto	u3485
  5625  031A  0828               	movf	___aldiv@divisor+2,w
  5626  031B  022C               	subwf	___aldiv@dividend+2,w
  5627  031C  1D03               	skipz
  5628  031D  2B24               	goto	u3485
  5629  031E  0827               	movf	___aldiv@divisor+1,w
  5630  031F  022B               	subwf	___aldiv@dividend+1,w
  5631  0320  1D03               	skipz
  5632  0321  2B24               	goto	u3485
  5633  0322  0826               	movf	___aldiv@divisor,w
  5634  0323  022A               	subwf	___aldiv@dividend,w
  5635  0324                     u3485:
  5636  0324  1C03               	skipc
  5637  0325  2B36               	goto	L17
  5638  0326  0826               	movf	___aldiv@divisor,w
  5639  0327  02AA               	subwf	___aldiv@dividend,f
  5640  0328  0827               	movf	___aldiv@divisor+1,w
  5641  0329  1C03               	skipc
  5642  032A  0F27               	incfsz	___aldiv@divisor+1,w
  5643  032B  02AB               	subwf	___aldiv@dividend+1,f
  5644  032C  0828               	movf	___aldiv@divisor+2,w
  5645  032D  1C03               	skipc
  5646  032E  0F28               	incfsz	___aldiv@divisor+2,w
  5647  032F  02AC               	subwf	___aldiv@dividend+2,f
  5648  0330  0829               	movf	___aldiv@divisor+3,w
  5649  0331  1C03               	skipc
  5650  0332  0F29               	incfsz	___aldiv@divisor+3,w
  5651  0333  02AD               	subwf	___aldiv@dividend+3,f
  5652  0334  1430               	bsf	___aldiv@quotient,0
  5653  0335  1003               	clrc
  5654  0336                     L17:
  5655  0336  0CA9               	rrf	___aldiv@divisor+3,f
  5656  0337  0CA8               	rrf	___aldiv@divisor+2,f
  5657  0338  0CA7               	rrf	___aldiv@divisor+1,f
  5658  0339  0CA6               	rrf	___aldiv@divisor,f
  5659  033A  0BAE               	decfsz	___aldiv@counter,f
  5660  033B  2B11               	goto	l4195
  5661  033C                     l4207:
  5662  033C  082F               	movf	___aldiv@sign,w
  5663  033D  1903               	btfsc	3,2
  5664  033E  2B4A               	goto	l4211
  5665  033F  09B0               	comf	___aldiv@quotient,f
  5666  0340  09B1               	comf	___aldiv@quotient+1,f
  5667  0341  09B2               	comf	___aldiv@quotient+2,f
  5668  0342  09B3               	comf	___aldiv@quotient+3,f
  5669  0343  0AB0               	incf	___aldiv@quotient,f
  5670  0344  1903               	skipnz
  5671  0345  0AB1               	incf	___aldiv@quotient+1,f
  5672  0346  1903               	skipnz
  5673  0347  0AB2               	incf	___aldiv@quotient+2,f
  5674  0348  1903               	skipnz
  5675  0349  0AB3               	incf	___aldiv@quotient+3,f
  5676  034A                     l4211:
  5677  034A  0833               	movf	___aldiv@quotient+3,w
  5678  034B  00A9               	movwf	?___aldiv+3
  5679  034C  0832               	movf	___aldiv@quotient+2,w
  5680  034D  00A8               	movwf	?___aldiv+2
  5681  034E  0831               	movf	___aldiv@quotient+1,w
  5682  034F  00A7               	movwf	?___aldiv+1
  5683  0350  0830               	movf	___aldiv@quotient,w
  5684  0351  00A6               	movwf	?___aldiv
  5685  0352  0008               	return
  5686  0353                     __end_of___aldiv:
  5687  0353                     __ptext36:	
  5688 ;; *************** function _I2c_Init *****************
  5689 ;; Defined at:
  5690 ;;		line 7 in file "MCAL/I2c.c"
  5691 ;; Parameters:    Size  Location     Type
  5692 ;;  Config_Ptr      1    wreg     PTR struct .
  5693 ;;		 -> I2c_Config(12), 
  5694 ;; Auto vars:     Size  Location     Type
  5695 ;;  Config_Ptr      1   20[BANK0 ] PTR struct .
  5696 ;;		 -> I2c_Config(12), 
  5697 ;; Return value:  Size  Location     Type
  5698 ;;                  1    wreg      void 
  5699 ;; Registers used:
  5700 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5701 ;; Tracked objects:
  5702 ;;		On entry : B00/0
  5703 ;;		On exit  : B00/800
  5704 ;;		Unchanged: 0/0
  5705 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5706 ;;      Params:         0       0       0       0       0
  5707 ;;      Locals:         0       1       0       0       0
  5708 ;;      Temps:          0       1       0       0       0
  5709 ;;      Totals:         0       2       0       0       0
  5710 ;;Total ram usage:        2 bytes
  5711 ;; Hardware stack levels used:    1
  5712 ;; Hardware stack levels required when called:    9
  5713 ;; This function calls:
  5714 ;;		_Port_Init
  5715 ;;		___lldiv
  5716 ;; This function is called by:
  5717 ;;		_Eep_Init
  5718 ;; This function uses a non-reentrant model
  5719 ;;
  5720                           
  5721                           
  5722                           ;psect for function _I2c_Init
  5723  0353                     _I2c_Init:
  5724                           
  5725                           ;incstack = 0
  5726 ;; hardware stack exceeded
  5727                           ; Regs used in _I2c_Init: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5728                           ;I2c_Init@Config_Ptr stored from wreg
  5729  0353  00B4               	movwf	I2c_Init@Config_Ptr
  5730                           
  5731                           ;MCAL/I2c.c: 7: void I2c_Init(I2c_ConfigType *Config_Ptr);MCAL/I2c.c: 8: {;MCAL/I2c.c: 2
      +                          3:     {;MCAL/I2c.c: 24:         Port_Init(&I2c_ConfigPins[0]);
  5732  0354  30CB               	movlw	(low (_I2c_ConfigPins| 0))& (0+255)
  5733  0355  00A9               	movwf	Port_Init@ConfigPtr
  5734  0356  01AA               	clrf	Port_Init@ConfigPtr+1
  5735  0357  239A  120A  118A   	fcall	_Port_Init
  5736                           
  5737                           ;MCAL/I2c.c: 25:         Port_Init(&I2c_ConfigPins[1]);
  5738  035A  30CE               	movlw	(low ((_I2c_ConfigPins| 0+3)))& (0+255)
  5739  035B  00A9               	movwf	Port_Init@ConfigPtr
  5740  035C  01AA               	clrf	Port_Init@ConfigPtr+1
  5741  035D  239A  120A  118A   	fcall	_Port_Init
  5742                           
  5743                           ;MCAL/I2c.c: 27:         SSPCON |= 0x0F & Config_Ptr->I2c_Mode;
  5744  0360  0834               	movf	I2c_Init@Config_Ptr,w
  5745  0361  3E06               	addlw	6
  5746  0362  0084               	movwf	4
  5747  0363  1783               	bsf	3,7	;select IRP bank2
  5748  0364  0800               	movf	0,w
  5749  0365  390F               	andlw	15
  5750  0366  0494               	iorwf	20,f	;volatile
  5751                           
  5752                           ;MCAL/I2c.c: 28:         (SSPCON|=(1<<5));
  5753  0367  1694               	bsf	20,5	;volatile
  5754                           
  5755                           ;MCAL/I2c.c: 29:         SSPCON2 = 0;
  5756  0368  1683               	bsf	3,5	;RP0=1, select bank1
  5757  0369  0191               	clrf	17	;volatile
  5758                           
  5759                           ;MCAL/I2c.c: 30:         SSPADD = (10000000/(4*Config_Ptr->I2c_Baudrate))-1;
  5760  036A  1283               	bcf	3,5	;RP0=0, select bank0
  5761  036B  0834               	movf	I2c_Init@Config_Ptr,w
  5762  036C  3E02               	addlw	2
  5763  036D  0084               	movwf	4
  5764  036E  0800               	movf	0,w
  5765  036F  00A6               	movwf	___lldiv@divisor
  5766  0370  0A84               	incf	4,f
  5767  0371  0800               	movf	0,w
  5768  0372  00A7               	movwf	___lldiv@divisor+1
  5769  0373  0A84               	incf	4,f
  5770  0374  0800               	movf	0,w
  5771  0375  00A8               	movwf	___lldiv@divisor+2
  5772  0376  0A84               	incf	4,f
  5773  0377  0800               	movf	0,w
  5774  0378  00A9               	movwf	___lldiv@divisor+3
  5775  0379  3002               	movlw	2
  5776  037A  00B3               	movwf	??_I2c_Init
  5777  037B                     u3895:
  5778  037B  1003               	clrc
  5779  037C  0DA6               	rlf	___lldiv@divisor,f
  5780  037D  0DA7               	rlf	___lldiv@divisor+1,f
  5781  037E  0DA8               	rlf	___lldiv@divisor+2,f
  5782  037F  0DA9               	rlf	___lldiv@divisor+3,f
  5783  0380  0BB3               	decfsz	??_I2c_Init,f
  5784  0381  2B7B               	goto	u3895
  5785  0382  3000               	movlw	0
  5786  0383  00AD               	movwf	___lldiv@dividend+3
  5787  0384  3098               	movlw	152
  5788  0385  00AC               	movwf	___lldiv@dividend+2
  5789  0386  3096               	movlw	150
  5790  0387  00AB               	movwf	___lldiv@dividend+1
  5791  0388  3080               	movlw	128
  5792  0389  00AA               	movwf	___lldiv@dividend
  5793  038A  120A  158A  2364   	fcall	___lldiv
  5794  038D  0826               	movf	?___lldiv,w
  5795  038E  3EFF               	addlw	255
  5796  038F  1683               	bsf	3,5	;RP0=1, select bank1
  5797  0390  0093               	movwf	19	;volatile
  5798                           
  5799                           ;MCAL/I2c.c: 31:         SSPSTAT = 0;
  5800  0391  0194               	clrf	20	;volatile
  5801                           
  5802                           ;MCAL/I2c.c: 33:         I2c_ThisConfiguration = Config_Ptr;
  5803  0392  1283               	bcf	3,5	;RP0=0, select bank0
  5804  0393  0834               	movf	I2c_Init@Config_Ptr,w
  5805  0394  00E2               	movwf	_I2c_ThisConfiguration
  5806                           
  5807                           ;MCAL/I2c.c: 34:         I2c_ThisConfiguration->I2c_Status = I2C_IDLE;
  5808  0395  3E0B               	addlw	11
  5809  0396  0084               	movwf	4
  5810  0397  0180               	clrf	0
  5811  0398  0A80               	incf	0,f
  5812  0399  0008               	return
  5813  039A                     __end_of_I2c_Init:
  5814  039A                     __ptext40:	
  5815 ;; *************** function _Port_Init *****************
  5816 ;; Defined at:
  5817 ;;		line 7 in file "MCAL/Port.c"
  5818 ;; Parameters:    Size  Location     Type
  5819 ;;  ConfigPtr       2    9[BANK0 ] PTR struct .
  5820 ;;		 -> Uart_PinsConfig(6), Adc_PortConfig(9), Pwm_Channels(6), I2c_ConfigPins(6), 
  5821 ;;		 -> TempSystem_Configurations(6), Port_ButtonsConfig(15), Disp_PinsConfiguration(9), 
  5822 ;; Auto vars:     Size  Location     Type
  5823 ;;  Port_Dir_Ptr    2   16[BANK0 ] PTR volatile unsigned ch
  5824 ;;		 -> RAM(512), 
  5825 ;;  Port_Ptr        2   14[BANK0 ] PTR volatile unsigned ch
  5826 ;;		 -> RAM(512), NULL(0), 
  5827 ;; Return value:  Size  Location     Type
  5828 ;;                  1    wreg      void 
  5829 ;; Registers used:
  5830 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  5831 ;; Tracked objects:
  5832 ;;		On entry : 300/0
  5833 ;;		On exit  : 300/0
  5834 ;;		Unchanged: 0/0
  5835 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5836 ;;      Params:         0       2       0       0       0
  5837 ;;      Locals:         0       4       0       0       0
  5838 ;;      Temps:          0       3       0       0       0
  5839 ;;      Totals:         0       9       0       0       0
  5840 ;;Total ram usage:        9 bytes
  5841 ;; Hardware stack levels used:    1
  5842 ;; Hardware stack levels required when called:    8
  5843 ;; This function calls:
  5844 ;;		Nothing
  5845 ;; This function is called by:
  5846 ;;		_Init_Task
  5847 ;;		_I2c_Init
  5848 ;;		_Port_InitPort
  5849 ;;		_Pwm_Init
  5850 ;;		_Adc_Init
  5851 ;;		_Disp_Init
  5852 ;;		_TempSystem_Init
  5853 ;; This function uses a non-reentrant model
  5854 ;;
  5855                           
  5856                           
  5857                           ;psect for function _Port_Init
  5858  039A                     _Port_Init:
  5859  039A                     l4217:	
  5860                           ;incstack = 0
  5861 ;; hardware stack exceeded
  5862                           ; Regs used in _Port_Init: [wreg-fsr0h+status,2+status,0+btemp+1]
  5863                           
  5864                           
  5865                           ;MCAL/Port.c: 18:         Port_Dir_Ptr = &(*((volatile uint8*)(((uint8)0x085)+((uint8)Co
      +                          nfigPtr->Port))));
  5866  039A  0829               	movf	Port_Init@ConfigPtr,w
  5867  039B  0084               	movwf	4
  5868  039C  1783               	bsf	3,7
  5869  039D  1C2A               	btfss	Port_Init@ConfigPtr+1,0
  5870  039E  1383               	bcf	3,7
  5871  039F  0800               	movf	0,w
  5872  03A0  00B0               	movwf	Port_Init@Port_Dir_Ptr
  5873  03A1  3085               	movlw	133
  5874  03A2  01B1               	clrf	Port_Init@Port_Dir_Ptr+1
  5875  03A3  07B0               	addwf	Port_Init@Port_Dir_Ptr,f
  5876  03A4  1803               	skipnc
  5877  03A5  0AB1               	incf	Port_Init@Port_Dir_Ptr+1,f
  5878                           
  5879                           ;MCAL/Port.c: 19:         Port_Ptr = &(*((volatile uint8*)(((uint8)0x005)+((uint8)Config
      +                          Ptr->Port))));
  5880  03A6  0829               	movf	Port_Init@ConfigPtr,w
  5881  03A7  0084               	movwf	4
  5882  03A8  1783               	bsf	3,7
  5883  03A9  1C2A               	btfss	Port_Init@ConfigPtr+1,0
  5884  03AA  1383               	bcf	3,7
  5885  03AB  0800               	movf	0,w
  5886  03AC  00AE               	movwf	Port_Init@Port_Ptr
  5887  03AD  3005               	movlw	5
  5888  03AE  01AF               	clrf	Port_Init@Port_Ptr+1
  5889  03AF  07AE               	addwf	Port_Init@Port_Ptr,f
  5890  03B0  1803               	skipnc
  5891  03B1  0AAF               	incf	Port_Init@Port_Ptr+1,f
  5892                           
  5893                           ;MCAL/Port.c: 22:         if (ConfigPtr->PinDirection == PORT_PIN_OUT)
  5894  03B2  0829               	movf	Port_Init@ConfigPtr,w
  5895  03B3  3E02               	addlw	2
  5896  03B4  00AB               	movwf	??_Port_Init
  5897  03B5  082A               	movf	Port_Init@ConfigPtr+1,w
  5898  03B6  1803               	skipnc
  5899  03B7  3E01               	addlw	1
  5900  03B8  00AC               	movwf	??_Port_Init+1
  5901  03B9  082B               	movf	??_Port_Init,w
  5902  03BA  0084               	movwf	4
  5903  03BB  1783               	bsf	3,7
  5904  03BC  1C2C               	btfss	??_Port_Init+1,0
  5905  03BD  1383               	bcf	3,7
  5906  03BE  0B00               	decfsz	0,w
  5907  03BF  2BFF               	goto	l4229
  5908                           
  5909                           ;MCAL/Port.c: 23:         {;MCAL/Port.c: 24:             (*Port_Dir_Ptr&=(~(1<<ConfigPtr
      +                          ->Pin)));
  5910  03C0  3001               	movlw	1
  5911  03C1  00AB               	movwf	??_Port_Init
  5912  03C2  0829               	movf	Port_Init@ConfigPtr,w
  5913  03C3  3E01               	addlw	1
  5914  03C4  00AC               	movwf	??_Port_Init+1
  5915  03C5  082A               	movf	Port_Init@ConfigPtr+1,w
  5916  03C6  1803               	skipnc
  5917  03C7  3E01               	addlw	1
  5918  03C8  00AD               	movwf	??_Port_Init+2
  5919  03C9  082C               	movf	??_Port_Init+1,w
  5920  03CA  0084               	movwf	4
  5921  03CB  1783               	bsf	3,7
  5922  03CC  1C2D               	btfss	??_Port_Init+2,0
  5923  03CD  1383               	bcf	3,7
  5924  03CE  0A00               	incf	0,w
  5925  03CF  2BD2               	goto	u3524
  5926  03D0                     u3525:
  5927  03D0  1003               	clrc
  5928  03D1  0DAB               	rlf	??_Port_Init,f
  5929  03D2                     u3524:
  5930  03D2  3EFF               	addlw	-1
  5931  03D3  1D03               	skipz
  5932  03D4  2BD0               	goto	u3525
  5933  03D5  082B               	movf	??_Port_Init,w
  5934  03D6  3AFF               	xorlw	255
  5935  03D7  00FF               	movwf	127
  5936  03D8  0830               	movf	Port_Init@Port_Dir_Ptr,w
  5937  03D9  0084               	movwf	4
  5938  03DA  1783               	bsf	3,7
  5939  03DB  1C31               	btfss	Port_Init@Port_Dir_Ptr+1,0
  5940  03DC  1383               	bcf	3,7
  5941  03DD  087F               	movf	127,w
  5942  03DE  0580               	andwf	0,f
  5943                           
  5944                           ;MCAL/Port.c: 34:             (*Port_Ptr&=(~(1<<ConfigPtr->Pin)));
  5945  03DF  3001               	movlw	1
  5946  03E0  00AB               	movwf	??_Port_Init
  5947  03E1  0829               	movf	Port_Init@ConfigPtr,w
  5948  03E2  3E01               	addlw	1
  5949  03E3  00AC               	movwf	??_Port_Init+1
  5950  03E4  082A               	movf	Port_Init@ConfigPtr+1,w
  5951  03E5  1803               	skipnc
  5952  03E6  3E01               	addlw	1
  5953  03E7  00AD               	movwf	??_Port_Init+2
  5954  03E8  082C               	movf	??_Port_Init+1,w
  5955  03E9  0084               	movwf	4
  5956  03EA  1783               	bsf	3,7
  5957  03EB  1C2D               	btfss	??_Port_Init+2,0
  5958  03EC  1383               	bcf	3,7
  5959  03ED  0A00               	incf	0,w
  5960  03EE  2BF1               	goto	u3534
  5961  03EF                     u3535:
  5962  03EF  1003               	clrc
  5963  03F0  0DAB               	rlf	??_Port_Init,f
  5964  03F1                     u3534:
  5965  03F1  3EFF               	addlw	-1
  5966  03F2  1D03               	skipz
  5967  03F3  2BEF               	goto	u3535
  5968  03F4  082B               	movf	??_Port_Init,w
  5969  03F5  3AFF               	xorlw	255
  5970  03F6  00FF               	movwf	127
  5971  03F7  082E               	movf	Port_Init@Port_Ptr,w
  5972  03F8  0084               	movwf	4
  5973  03F9  1783               	bsf	3,7
  5974  03FA  1C2F               	btfss	Port_Init@Port_Ptr+1,0
  5975  03FB  1383               	bcf	3,7
  5976  03FC  087F               	movf	127,w
  5977  03FD  0580               	andwf	0,f
  5978                           
  5979                           ;MCAL/Port.c: 36:         }
  5980  03FE  0008               	return
  5981  03FF                     l4229:
  5982  03FF  0829               	movf	Port_Init@ConfigPtr,w
  5983  0400  3E02               	addlw	2
  5984  0401  00AB               	movwf	??_Port_Init
  5985  0402  082A               	movf	Port_Init@ConfigPtr+1,w
  5986  0403  1803               	skipnc
  5987  0404  3E01               	addlw	1
  5988  0405  3E00               	addlw	0
  5989  0406  00AC               	movwf	??_Port_Init+1
  5990  0407  082B               	movf	??_Port_Init,w
  5991  0408  0084               	movwf	4
  5992  0409  1783               	bsf	3,7
  5993  040A  1C2C               	btfss	??_Port_Init+1,0
  5994  040B  1383               	bcf	3,7
  5995  040C  0800               	movf	0,w
  5996  040D  1D03               	btfss	3,2
  5997  040E  0008               	return
  5998                           
  5999                           ;MCAL/Port.c: 38:             (*Port_Dir_Ptr|=(1<<ConfigPtr->Pin));
  6000  040F  3001               	movlw	1
  6001  0410  00AB               	movwf	??_Port_Init
  6002  0411  0829               	movf	Port_Init@ConfigPtr,w
  6003  0412  3E01               	addlw	1
  6004  0413  00AC               	movwf	??_Port_Init+1
  6005  0414  082A               	movf	Port_Init@ConfigPtr+1,w
  6006  0415  1803               	skipnc
  6007  0416  3E01               	addlw	1
  6008  0417  00AD               	movwf	??_Port_Init+2
  6009  0418  082C               	movf	??_Port_Init+1,w
  6010  0419  0084               	movwf	4
  6011  041A  1783               	bsf	3,7
  6012  041B  1C2D               	btfss	??_Port_Init+2,0
  6013  041C  1383               	bcf	3,7
  6014  041D  0A00               	incf	0,w
  6015  041E  2C21               	goto	u3554
  6016  041F                     u3555:
  6017  041F  1003               	clrc
  6018  0420  0DAB               	rlf	??_Port_Init,f
  6019  0421                     u3554:
  6020  0421  3EFF               	addlw	-1
  6021  0422  1D03               	skipz
  6022  0423  2C1F               	goto	u3555
  6023  0424  082B               	movf	??_Port_Init,w
  6024  0425  00FF               	movwf	127
  6025  0426  0830               	movf	Port_Init@Port_Dir_Ptr,w
  6026  0427  0084               	movwf	4
  6027  0428  1783               	bsf	3,7
  6028  0429  1C31               	btfss	Port_Init@Port_Dir_Ptr+1,0
  6029  042A  1383               	bcf	3,7
  6030  042B  087F               	movf	127,w
  6031  042C  0480               	iorwf	0,f
  6032  042D  0008               	return
  6033  042E                     __end_of_Port_Init:
  6034  042E                     __ptext38:	
  6035 ;; *************** function _Disp_Init *****************
  6036 ;; Defined at:
  6037 ;;		line 7 in file "EcuAL/Disp.c"
  6038 ;; Parameters:    Size  Location     Type
  6039 ;;  ConfigPtr       1    wreg     PTR struct .
  6040 ;;		 -> Disp_Config(7), 
  6041 ;; Auto vars:     Size  Location     Type
  6042 ;;  ConfigPtr       1   22[BANK0 ] PTR struct .
  6043 ;;		 -> Disp_Config(7), 
  6044 ;;  i               2   23[BANK0 ] int 
  6045 ;; Return value:  Size  Location     Type
  6046 ;;                  1    wreg      void 
  6047 ;; Registers used:
  6048 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6049 ;; Tracked objects:
  6050 ;;		On entry : 0/100
  6051 ;;		On exit  : B00/0
  6052 ;;		Unchanged: 0/0
  6053 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6054 ;;      Params:         0       0       0       0       0
  6055 ;;      Locals:         0       3       0       0       0
  6056 ;;      Temps:          0       1       0       0       0
  6057 ;;      Totals:         0       4       0       0       0
  6058 ;;Total ram usage:        4 bytes
  6059 ;; Hardware stack levels used:    1
  6060 ;; Hardware stack levels required when called:   10
  6061 ;; This function calls:
  6062 ;;		_Port_Init
  6063 ;;		_Port_InitPort
  6064 ;; This function is called by:
  6065 ;;		_Init_Task
  6066 ;; This function uses a non-reentrant model
  6067 ;;
  6068                           
  6069                           
  6070                           ;psect for function _Disp_Init
  6071  042E                     _Disp_Init:
  6072                           
  6073                           ;incstack = 0
  6074 ;; hardware stack exceeded
  6075                           ; Regs used in _Disp_Init: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6076                           ;Disp_Init@ConfigPtr stored from wreg
  6077  042E  1283               	bcf	3,5	;RP0=0, select bank0
  6078  042F  1303               	bcf	3,6	;RP1=0, select bank0
  6079  0430  00B6               	movwf	Disp_Init@ConfigPtr
  6080                           
  6081                           ;EcuAL/Disp.c: 7: void Disp_Init(Disp_ConfigType* ConfigPtr);EcuAL/Disp.c: 8: {;EcuAL/Di
      +                          sp.c: 10:     Disp_PinsConfiguration[0].Port = ConfigPtr->DisplayPort;
  6082  0431  0084               	movwf	4
  6083  0432  1383               	bcf	3,7	;select IRP bank0
  6084  0433  0800               	movf	0,w
  6085  0434  1683               	bsf	3,5	;RP0=1, select bank1
  6086  0435  00A0               	movwf	_Disp_PinsConfiguration^(0+128)
  6087                           
  6088                           ;EcuAL/Disp.c: 11:     Port_InitPort(&Disp_PinsConfiguration[0]);
  6089  0436  30A0               	movlw	(low (_Disp_PinsConfiguration| 0))& (0+255)
  6090  0437  120A  158A  21F8  120A  118A  	fcall	_Port_InitPort
  6091                           
  6092                           ;EcuAL/Disp.c: 12:     for(int i=0 ; i<ConfigPtr->NbDigits;i++)
  6093  043C  1283               	bcf	3,5	;RP0=0, select bank0
  6094  043D  1303               	bcf	3,6	;RP1=0, select bank0
  6095  043E  01B7               	clrf	Disp_Init@i
  6096  043F  01B8               	clrf	Disp_Init@i+1
  6097  0440                     l4539:
  6098  0440  0836               	movf	Disp_Init@ConfigPtr,w
  6099  0441  3E04               	addlw	4
  6100  0442  0084               	movwf	4
  6101  0443  0838               	movf	Disp_Init@i+1,w
  6102  0444  3A80               	xorlw	128
  6103  0445  00B5               	movwf	??_Disp_Init
  6104  0446  3080               	movlw	128
  6105  0447  0235               	subwf	??_Disp_Init,w
  6106  0448  1D03               	skipz
  6107  0449  2C4D               	goto	u3985
  6108  044A  1383               	bcf	3,7	;select IRP bank0
  6109  044B  0800               	movf	0,w
  6110  044C  0237               	subwf	Disp_Init@i,w
  6111  044D                     u3985:
  6112  044D  1803               	btfsc	3,0
  6113  044E  2C78               	goto	l4541
  6114                           
  6115                           ;EcuAL/Disp.c: 13:     {;EcuAL/Disp.c: 14:       Disp_PinsConfiguration[i+1].Port = Conf
      +                          igPtr->EnablePort;
  6116  044F  1283               	bcf	3,5	;RP0=0, select bank0
  6117  0450  1303               	bcf	3,6	;RP1=0, select bank0
  6118  0451  0A36               	incf	Disp_Init@ConfigPtr,w
  6119  0452  0084               	movwf	4
  6120  0453  1383               	bcf	3,7	;select IRP bank0
  6121  0454  0800               	movf	0,w
  6122  0455  00FF               	movwf	127
  6123  0456  0837               	movf	Disp_Init@i,w
  6124  0457  0737               	addwf	Disp_Init@i,w
  6125  0458  0737               	addwf	Disp_Init@i,w
  6126  0459  3EA3               	addlw	(low ((_Disp_PinsConfiguration| 0+3)))& (0+255)
  6127  045A  0084               	movwf	4
  6128  045B  087F               	movf	127,w
  6129  045C  0080               	movwf	0
  6130                           
  6131                           ;EcuAL/Disp.c: 15:       Disp_PinsConfiguration[i+1].Pin = ConfigPtr->EnablePins[i];
  6132  045D  0837               	movf	Disp_Init@i,w
  6133  045E  0736               	addwf	Disp_Init@ConfigPtr,w
  6134  045F  00B5               	movwf	??_Disp_Init
  6135  0460  3E02               	addlw	2
  6136  0461  0084               	movwf	4
  6137  0462  0800               	movf	0,w
  6138  0463  00FF               	movwf	127
  6139  0464  0837               	movf	Disp_Init@i,w
  6140  0465  0737               	addwf	Disp_Init@i,w
  6141  0466  0737               	addwf	Disp_Init@i,w
  6142  0467  3EA4               	addlw	(low ((_Disp_PinsConfiguration| 0+4)))& (0+255)
  6143  0468  0084               	movwf	4
  6144  0469  087F               	movf	127,w
  6145  046A  0080               	movwf	0
  6146                           
  6147                           ;EcuAL/Disp.c: 16:       Port_Init(&Disp_PinsConfiguration[i+1]);
  6148  046B  0837               	movf	Disp_Init@i,w
  6149  046C  0737               	addwf	Disp_Init@i,w
  6150  046D  0737               	addwf	Disp_Init@i,w
  6151  046E  3EA3               	addlw	(low ((_Disp_PinsConfiguration| 0+3)))& (0+255)
  6152  046F  00A9               	movwf	Port_Init@ConfigPtr
  6153  0470  01AA               	clrf	Port_Init@ConfigPtr+1
  6154  0471  239A  120A  118A   	fcall	_Port_Init
  6155                           
  6156                           ;EcuAL/Disp.c: 17:     }
  6157  0474  0AB7               	incf	Disp_Init@i,f
  6158  0475  1903               	skipnz
  6159  0476  0AB8               	incf	Disp_Init@i+1,f
  6160  0477  2C40               	goto	l4539
  6161  0478                     l4541:
  6162                           
  6163                           ;EcuAL/Disp.c: 18:      BlinkingPeriod = ConfigPtr->BlinkingPeriod;
  6164  0478  1283               	bcf	3,5	;RP0=0, select bank0
  6165  0479  1303               	bcf	3,6	;RP1=0, select bank0
  6166  047A  0836               	movf	Disp_Init@ConfigPtr,w
  6167  047B  3E05               	addlw	5
  6168  047C  0084               	movwf	4
  6169  047D  1383               	bcf	3,7	;select IRP bank0
  6170  047E  0800               	movf	0,w
  6171  047F  00D6               	movwf	_BlinkingPeriod
  6172  0480  0A84               	incf	4,f
  6173  0481  0800               	movf	0,w
  6174  0482  00D7               	movwf	_BlinkingPeriod+1
  6175  0483  0008               	return
  6176  0484                     __end_of_Disp_Init:
  6177  0484                     __ptext32:	
  6178 ;; *************** function _TempSensor_Init *****************
  6179 ;; Defined at:
  6180 ;;		line 4 in file "EcuAL/TempSensor.c"
  6181 ;; Parameters:    Size  Location     Type
  6182 ;;  ConfigPtr       1    wreg     PTR struct .
  6183 ;;		 -> TempSensor_Config(11), 
  6184 ;; Auto vars:     Size  Location     Type
  6185 ;;  ConfigPtr       1   23[BANK0 ] PTR struct .
  6186 ;;		 -> TempSensor_Config(11), 
  6187 ;; Return value:  Size  Location     Type
  6188 ;;                  1    wreg      void 
  6189 ;; Registers used:
  6190 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6191 ;; Tracked objects:
  6192 ;;		On entry : B00/0
  6193 ;;		On exit  : B00/800
  6194 ;;		Unchanged: 0/0
  6195 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6196 ;;      Params:         0       0       0       0       0
  6197 ;;      Locals:         0       1       0       0       0
  6198 ;;      Temps:          0       0       0       0       0
  6199 ;;      Totals:         0       1       0       0       0
  6200 ;;Total ram usage:        1 bytes
  6201 ;; Hardware stack levels used:    1
  6202 ;; Hardware stack levels required when called:   10
  6203 ;; This function calls:
  6204 ;;		_Adc_Init
  6205 ;; This function is called by:
  6206 ;;		_Init_Task
  6207 ;; This function uses a non-reentrant model
  6208 ;;
  6209                           
  6210                           
  6211                           ;psect for function _TempSensor_Init
  6212  0484                     _TempSensor_Init:
  6213                           
  6214                           ;incstack = 0
  6215 ;; hardware stack exceeded
  6216                           ; Regs used in _TempSensor_Init: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6217                           ;TempSensor_Init@ConfigPtr stored from wreg
  6218  0484  00B7               	movwf	TempSensor_Init@ConfigPtr
  6219                           
  6220                           ;EcuAL/TempSensor.c: 4: void TempSensor_Init(Adc_ConfigType* ConfigPtr);EcuAL/TempSensor
      +                          .c: 5: {;EcuAL/TempSensor.c: 6:     Adc_Init(ConfigPtr);
  6221  0485  120A  118A  2EFF   	ljmp	_Adc_Init
  6222  0488                     __end_of_TempSensor_Init:
  6223                           
  6224                           	psect	text27
  6225  09BE                     __ptext27:	
  6226 ;; *************** function ___wmul *****************
  6227 ;; Defined at:
  6228 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\Umul16.c"
  6229 ;; Parameters:    Size  Location     Type
  6230 ;;  multiplier      2    6[BANK0 ] unsigned int 
  6231 ;;  multiplicand    2    8[BANK0 ] unsigned int 
  6232 ;; Auto vars:     Size  Location     Type
  6233 ;;  product         2   10[BANK0 ] unsigned int 
  6234 ;; Return value:  Size  Location     Type
  6235 ;;                  2    6[BANK0 ] unsigned int 
  6236 ;; Registers used:
  6237 ;;		wreg, status,2, status,0
  6238 ;; Tracked objects:
  6239 ;;		On entry : B00/0
  6240 ;;		On exit  : B00/0
  6241 ;;		Unchanged: 800/0
  6242 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6243 ;;      Params:         0       4       0       0       0
  6244 ;;      Locals:         0       2       0       0       0
  6245 ;;      Temps:          0       0       0       0       0
  6246 ;;      Totals:         0       6       0       0       0
  6247 ;;Total ram usage:        6 bytes
  6248 ;; Hardware stack levels used:    1
  6249 ;; Hardware stack levels required when called:    8
  6250 ;; This function calls:
  6251 ;;		Nothing
  6252 ;; This function is called by:
  6253 ;;		_Pwm_Init
  6254 ;; This function uses a non-reentrant model
  6255 ;;
  6256                           
  6257                           
  6258                           ;psect for function ___wmul
  6259  09BE                     ___wmul:
  6260                           
  6261                           ;incstack = 0
  6262 ;; hardware stack exceeded
  6263                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  6264  09BE  01AA               	clrf	___wmul@product
  6265  09BF  01AB               	clrf	___wmul@product+1
  6266  09C0                     l4313:
  6267  09C0  1C26               	btfss	___wmul@multiplier,0
  6268  09C1  29C8               	goto	l4317
  6269  09C2  0828               	movf	___wmul@multiplicand,w
  6270  09C3  07AA               	addwf	___wmul@product,f
  6271  09C4  1803               	skipnc
  6272  09C5  0AAB               	incf	___wmul@product+1,f
  6273  09C6  0829               	movf	___wmul@multiplicand+1,w
  6274  09C7  07AB               	addwf	___wmul@product+1,f
  6275  09C8                     l4317:
  6276  09C8  1003               	clrc
  6277  09C9  0DA8               	rlf	___wmul@multiplicand,f
  6278  09CA  0DA9               	rlf	___wmul@multiplicand+1,f
  6279  09CB  1003               	clrc
  6280  09CC  0CA7               	rrf	___wmul@multiplier+1,f
  6281  09CD  0CA6               	rrf	___wmul@multiplier,f
  6282  09CE  0826               	movf	___wmul@multiplier,w
  6283  09CF  0427               	iorwf	___wmul@multiplier+1,w
  6284  09D0  1D03               	btfss	3,2
  6285  09D1  29C0               	goto	l4313
  6286  09D2  082B               	movf	___wmul@product+1,w
  6287  09D3  00A7               	movwf	?___wmul+1
  6288  09D4  082A               	movf	___wmul@product,w
  6289  09D5  00A6               	movwf	?___wmul
  6290  09D6  0008               	return
  6291  09D7                     __end_of___wmul:
  6292                           
  6293                           	psect	text29
  6294  098C                     __ptext29:	
  6295 ;; *************** function ___bmul *****************
  6296 ;; Defined at:
  6297 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\Umul8.c"
  6298 ;; Parameters:    Size  Location     Type
  6299 ;;  multiplier      1    wreg     unsigned char 
  6300 ;;  multiplicand    1    6[BANK0 ] unsigned char 
  6301 ;; Auto vars:     Size  Location     Type
  6302 ;;  multiplier      1    8[BANK0 ] unsigned char 
  6303 ;;  product         1    7[BANK0 ] unsigned char 
  6304 ;; Return value:  Size  Location     Type
  6305 ;;                  1    wreg      unsigned char 
  6306 ;; Registers used:
  6307 ;;		wreg, status,2, status,0
  6308 ;; Tracked objects:
  6309 ;;		On entry : B00/0
  6310 ;;		On exit  : B00/0
  6311 ;;		Unchanged: 800/0
  6312 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6313 ;;      Params:         0       1       0       0       0
  6314 ;;      Locals:         0       2       0       0       0
  6315 ;;      Temps:          0       0       0       0       0
  6316 ;;      Totals:         0       3       0       0       0
  6317 ;;Total ram usage:        3 bytes
  6318 ;; Hardware stack levels used:    1
  6319 ;; Hardware stack levels required when called:    8
  6320 ;; This function calls:
  6321 ;;		Nothing
  6322 ;; This function is called by:
  6323 ;;		_Pwm_Init
  6324 ;; This function uses a non-reentrant model
  6325 ;;
  6326                           
  6327                           
  6328                           ;psect for function ___bmul
  6329  098C                     ___bmul:
  6330                           
  6331                           ;incstack = 0
  6332 ;; hardware stack exceeded
  6333                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  6334                           ;___bmul@multiplier stored from wreg
  6335  098C  00A8               	movwf	___bmul@multiplier
  6336  098D  01A7               	clrf	___bmul@product
  6337  098E                     l4329:
  6338  098E  0826               	movf	___bmul@multiplicand,w
  6339  098F  1828               	btfsc	___bmul@multiplier,0
  6340  0990  07A7               	addwf	___bmul@product,f
  6341  0991  1003               	clrc
  6342  0992  0DA6               	rlf	___bmul@multiplicand,f
  6343  0993  1003               	clrc
  6344  0994  0CA8               	rrf	___bmul@multiplier,f
  6345  0995  0828               	movf	___bmul@multiplier,w
  6346  0996  1D03               	btfss	3,2
  6347  0997  298E               	goto	l4329
  6348  0998  0827               	movf	___bmul@product,w
  6349  0999  0008               	return
  6350  099A                     __end_of___bmul:
  6351                           
  6352                           	psect	text33
  6353  06FF                     __ptext33:	
  6354 ;; *************** function _Adc_Init *****************
  6355 ;; Defined at:
  6356 ;;		line 24 in file "MCAL/adc.c"
  6357 ;; Parameters:    Size  Location     Type
  6358 ;;  Adc_Config      1    wreg     PTR struct .
  6359 ;;		 -> TempSensor_Config(11), 
  6360 ;; Auto vars:     Size  Location     Type
  6361 ;;  Adc_Config      1   22[BANK0 ] PTR struct .
  6362 ;;		 -> TempSensor_Config(11), 
  6363 ;;  i               2   20[BANK0 ] int 
  6364 ;; Return value:  Size  Location     Type
  6365 ;;                  1    wreg      void 
  6366 ;; Registers used:
  6367 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6368 ;; Tracked objects:
  6369 ;;		On entry : B00/0
  6370 ;;		On exit  : B00/800
  6371 ;;		Unchanged: 0/0
  6372 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6373 ;;      Params:         0       0       0       0       0
  6374 ;;      Locals:         0       3       0       0       0
  6375 ;;      Temps:          0       2       0       0       0
  6376 ;;      Totals:         0       5       0       0       0
  6377 ;;Total ram usage:        5 bytes
  6378 ;; Hardware stack levels used:    1
  6379 ;; Hardware stack levels required when called:    9
  6380 ;; This function calls:
  6381 ;;		_Interrupt_Enable
  6382 ;;		_Port_Init
  6383 ;; This function is called by:
  6384 ;;		_TempSensor_Init
  6385 ;; This function uses a non-reentrant model
  6386 ;;
  6387                           
  6388                           
  6389                           ;psect for function _Adc_Init
  6390  06FF                     _Adc_Init:
  6391                           
  6392                           ;incstack = 0
  6393 ;; hardware stack exceeded
  6394                           ; Regs used in _Adc_Init: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6395                           ;Adc_Init@Adc_Config stored from wreg
  6396  06FF  00B6               	movwf	Adc_Init@Adc_Config
  6397                           
  6398                           ;MCAL/adc.c: 24: void Adc_Init(Adc_ConfigType* Adc_Config);MCAL/adc.c: 25: {;MCAL/adc.c:
      +                           40:     {;MCAL/adc.c: 41:         (ADCON0 = 0 );
  6399  0700  019F               	clrf	31	;volatile
  6400                           
  6401                           ;MCAL/adc.c: 42:         (ADCON1 = 0 );
  6402  0701  1683               	bsf	3,5	;RP0=1, select bank1
  6403  0702  019F               	clrf	31	;volatile
  6404                           
  6405                           ;MCAL/adc.c: 43:         for(int i=0 ; i<Adc_Config->Adc_NbChannels; i++)
  6406  0703  1283               	bcf	3,5	;RP0=0, select bank0
  6407  0704  01B4               	clrf	Adc_Init@i
  6408  0705  01B5               	clrf	Adc_Init@i+1
  6409  0706                     l4511:
  6410  0706  0836               	movf	Adc_Init@Adc_Config,w
  6411  0707  0084               	movwf	4
  6412  0708  0835               	movf	Adc_Init@i+1,w
  6413  0709  3A80               	xorlw	128
  6414  070A  00B2               	movwf	??_Adc_Init
  6415  070B  3080               	movlw	128
  6416  070C  0232               	subwf	??_Adc_Init,w
  6417  070D  1D03               	skipz
  6418  070E  2F12               	goto	u3955
  6419  070F  1783               	bsf	3,7	;select IRP bank2
  6420  0710  0800               	movf	0,w
  6421  0711  0234               	subwf	Adc_Init@i,w
  6422  0712                     u3955:
  6423  0712  1803               	btfsc	3,0
  6424  0713  2F58               	goto	l443
  6425                           
  6426                           ;MCAL/adc.c: 44:          {;MCAL/adc.c: 45:             Port_Init(&Adc_PortConfig[i]);
  6427  0714  1283               	bcf	3,5	;RP0=0, select bank0
  6428  0715  1303               	bcf	3,6	;RP1=0, select bank0
  6429  0716  0834               	movf	Adc_Init@i,w
  6430  0717  0734               	addwf	Adc_Init@i,w
  6431  0718  0734               	addwf	Adc_Init@i,w
  6432  0719  3EC8               	addlw	(low (_Adc_PortConfig| (0+256)))& (0+255)
  6433  071A  00A9               	movwf	Port_Init@ConfigPtr
  6434  071B  3001               	movlw	1
  6435  071C  00AA               	movwf	Port_Init@ConfigPtr+1
  6436  071D  120A  118A  239A  120A  118A  	fcall	_Port_Init
  6437                           
  6438                           ;MCAL/adc.c: 46:             (ADCON0 |= (Adc_Config->ArrayOfAdcChannels[i] << 3));
  6439  0722  0834               	movf	Adc_Init@i,w
  6440  0723  0736               	addwf	Adc_Init@Adc_Config,w
  6441  0724  00B2               	movwf	??_Adc_Init
  6442  0725  0A32               	incf	??_Adc_Init,w
  6443  0726  0084               	movwf	4
  6444  0727  1783               	bsf	3,7	;select IRP bank2
  6445  0728  0800               	movf	0,w
  6446  0729  00B3               	movwf	??_Adc_Init+1
  6447  072A  1003               	clrc
  6448  072B  0DB3               	rlf	??_Adc_Init+1,f
  6449  072C  1003               	clrc
  6450  072D  0DB3               	rlf	??_Adc_Init+1,f
  6451  072E  1003               	clrc
  6452  072F  0D33               	rlf	??_Adc_Init+1,w
  6453  0730  049F               	iorwf	31,f	;volatile
  6454                           
  6455                           ;MCAL/adc.c: 47:             (ADCON0 |= ((Adc_Config->Adc_Prescale & 0x03) << 6));
  6456  0731  0836               	movf	Adc_Init@Adc_Config,w
  6457  0732  3E08               	addlw	8
  6458  0733  0084               	movwf	4
  6459  0734  0800               	movf	0,w
  6460  0735  3903               	andlw	3
  6461  0736  00B2               	movwf	??_Adc_Init
  6462  0737  0CB2               	rrf	??_Adc_Init,f
  6463  0738  0CB2               	rrf	??_Adc_Init,f
  6464  0739  0C32               	rrf	??_Adc_Init,w
  6465  073A  39C0               	andlw	192
  6466  073B  049F               	iorwf	31,f	;volatile
  6467                           
  6468                           ;MCAL/adc.c: 48:             (ADCON1 |= ((Adc_Config->Adc_Prescale & 0x04) << 4));
  6469  073C  0836               	movf	Adc_Init@Adc_Config,w
  6470  073D  3E08               	addlw	8
  6471  073E  0084               	movwf	4
  6472  073F  0E00               	swapf	0,w
  6473  0740  3940               	andlw	64
  6474  0741  1683               	bsf	3,5	;RP0=1, select bank1
  6475  0742  049F               	iorwf	31,f	;volatile
  6476                           
  6477                           ;MCAL/adc.c: 49:             (ADCON1 |= (Adc_Config->Adc_ResultAlignment << 7));
  6478  0743  1283               	bcf	3,5	;RP0=0, select bank0
  6479  0744  0836               	movf	Adc_Init@Adc_Config,w
  6480  0745  3E07               	addlw	7
  6481  0746  0084               	movwf	4
  6482  0747  0800               	movf	0,w
  6483  0748  00B2               	movwf	??_Adc_Init
  6484  0749  3006               	movlw	6
  6485  074A  1003               	clrc
  6486  074B                     L18:
  6487  074B  0DB2               	rlf	??_Adc_Init,f
  6488  074C  3EFF               	addlw	-1
  6489  074D  1003               	clrc
  6490  074E  1D03               	skipz
  6491  074F  2F4B               	goto	L18
  6492  0750  0D32               	rlf	??_Adc_Init,w
  6493  0751  1683               	bsf	3,5	;RP0=1, select bank1
  6494  0752  049F               	iorwf	31,f	;volatile
  6495                           
  6496                           ;MCAL/adc.c: 50:          }
  6497  0753  1283               	bcf	3,5	;RP0=0, select bank0
  6498  0754  0AB4               	incf	Adc_Init@i,f
  6499  0755  1903               	skipnz
  6500  0756  0AB5               	incf	Adc_Init@i+1,f
  6501  0757  2F06               	goto	l4511
  6502  0758                     l443:
  6503                           
  6504                           ;MCAL/adc.c: 52:         ADCON1 |= (0x2<<0);
  6505  0758  1683               	bsf	3,5	;RP0=1, select bank1
  6506  0759  1303               	bcf	3,6	;RP1=0, select bank1
  6507  075A  149F               	bsf	31,1	;volatile
  6508                           
  6509                           ;MCAL/adc.c: 53:         ADCON0 |= (1>>0);
  6510  075B  1283               	bcf	3,5	;RP0=0, select bank0
  6511  075C  141F               	bsf	31,0	;volatile
  6512                           
  6513                           ;MCAL/adc.c: 55:         if(Adc_Config->Adc_GroupConvMode == ADC_CONV_MODE_CONTINUOUS_IN
      +                          TERRUPT)
  6514  075D  0836               	movf	Adc_Init@Adc_Config,w
  6515  075E  3E06               	addlw	6
  6516  075F  0084               	movwf	4
  6517  0760  1783               	bsf	3,7	;select IRP bank2
  6518  0761  0B00               	decfsz	0,w
  6519  0762  2F67               	goto	l4517
  6520                           
  6521                           ;MCAL/adc.c: 56:              Interrupt_Enable(ADC,Adc_CallbackFn);
  6522  0763  301C               	movlw	(low (fp__Adc_CallbackFn-i1fpbase))& (0+255)
  6523  0764  00A6               	movwf	Interrupt_Enable@callback
  6524  0765  3001               	movlw	1
  6525  0766  276F               	fcall	_Interrupt_Enable
  6526  0767                     l4517:
  6527                           
  6528                           ;MCAL/adc.c: 58:         Adc_ThisConfiguration =Adc_Config;
  6529  0767  0836               	movf	Adc_Init@Adc_Config,w
  6530  0768  00E0               	movwf	_Adc_ThisConfiguration
  6531                           
  6532                           ;MCAL/adc.c: 60:         Adc_ThisConfiguration->Adc_Status = ADC_IDLE;
  6533  0769  3E0A               	addlw	10
  6534  076A  0084               	movwf	4
  6535  076B  1783               	bsf	3,7	;select IRP bank2
  6536  076C  0180               	clrf	0
  6537  076D  0A80               	incf	0,f
  6538  076E  0008               	return
  6539  076F                     __end_of_Adc_Init:
  6540  076F                     __ptext34:	
  6541 ;; *************** function _Interrupt_Enable *****************
  6542 ;; Defined at:
  6543 ;;		line 32 in file "MCAL/interrupt.c"
  6544 ;; Parameters:    Size  Location     Type
  6545 ;;  Interrupt_So    1    wreg     enum E1192
  6546 ;;  callback        1    6[BANK0 ] PTR FTN()void 
  6547 ;;		 -> Uart_RX_Callback(1), Uart_TX_Callback(1), Adc_CallbackFn(1), Interrupt_TimerCallbackFn(1), 
  6548 ;; Auto vars:     Size  Location     Type
  6549 ;;  Interrupt_So    1    7[BANK0 ] enum E1192
  6550 ;; Return value:  Size  Location     Type
  6551 ;;                  1    wreg      void 
  6552 ;; Registers used:
  6553 ;;		wreg, status,2, status,0
  6554 ;; Tracked objects:
  6555 ;;		On entry : 300/0
  6556 ;;		On exit  : 300/0
  6557 ;;		Unchanged: 0/0
  6558 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6559 ;;      Params:         0       1       0       0       0
  6560 ;;      Locals:         0       1       0       0       0
  6561 ;;      Temps:          0       0       0       0       0
  6562 ;;      Totals:         0       2       0       0       0
  6563 ;;Total ram usage:        2 bytes
  6564 ;; Hardware stack levels used:    1
  6565 ;; Hardware stack levels required when called:    8
  6566 ;; This function calls:
  6567 ;;		Nothing
  6568 ;; This function is called by:
  6569 ;;		_Gpt_Init
  6570 ;;		_Adc_Init
  6571 ;; This function uses a non-reentrant model
  6572 ;;
  6573                           
  6574                           
  6575                           ;psect for function _Interrupt_Enable
  6576  076F                     _Interrupt_Enable:
  6577                           
  6578                           ;incstack = 0
  6579 ;; hardware stack exceeded
  6580                           ; Regs used in _Interrupt_Enable: [wreg+status,2+status,0]
  6581                           ;Interrupt_Enable@Interrupt_Source stored from wreg
  6582  076F  00A7               	movwf	Interrupt_Enable@Interrupt_Source
  6583                           
  6584                           ;MCAL/interrupt.c: 32: void Interrupt_Enable(Interrupt_SourceType Interrupt_Source, void
      +                           (*callback)());MCAL/interrupt.c: 33: {;MCAL/interrupt.c: 34:     if(Interrupt_Source ==
      +                           TIMER)
  6585  0770  0827               	movf	Interrupt_Enable@Interrupt_Source,w
  6586  0771  1D03               	btfss	3,2
  6587  0772  2F7B               	goto	l4151
  6588                           
  6589                           ;MCAL/interrupt.c: 35:     {;MCAL/interrupt.c: 36:         TMR1IF = 0;
  6590  0773  100C               	bcf	12,0	;volatile
  6591                           
  6592                           ;MCAL/interrupt.c: 37:         TMR1IE = 1;
  6593  0774  1683               	bsf	3,5	;RP0=1, select bank1
  6594  0775  140C               	bsf	12,0	;volatile
  6595                           
  6596                           ;MCAL/interrupt.c: 38:         PEIE = 1;
  6597  0776  170B               	bsf	11,6	;volatile
  6598                           
  6599                           ;MCAL/interrupt.c: 39:         GIE = 1;
  6600  0777  178B               	bsf	11,7	;volatile
  6601                           
  6602                           ;MCAL/interrupt.c: 40:         callbackTable[TIMER] = callback;
  6603  0778  1283               	bcf	3,5	;RP0=0, select bank0
  6604  0779  0826               	movf	Interrupt_Enable@callback,w
  6605  077A  00CF               	movwf	_callbackTable
  6606  077B                     l4151:
  6607                           
  6608                           ;MCAL/interrupt.c: 43:     if(Interrupt_Source == ADC)
  6609  077B  0B27               	decfsz	Interrupt_Enable@Interrupt_Source,w
  6610  077C  2F85               	goto	l4157
  6611                           
  6612                           ;MCAL/interrupt.c: 44:     {;MCAL/interrupt.c: 45:         ADIF = 0;
  6613  077D  130C               	bcf	12,6	;volatile
  6614                           
  6615                           ;MCAL/interrupt.c: 46:         ADIE = 1;
  6616  077E  1683               	bsf	3,5	;RP0=1, select bank1
  6617  077F  170C               	bsf	12,6	;volatile
  6618                           
  6619                           ;MCAL/interrupt.c: 47:         PEIE = 1;
  6620  0780  170B               	bsf	11,6	;volatile
  6621                           
  6622                           ;MCAL/interrupt.c: 48:         GIE = 1;
  6623  0781  178B               	bsf	11,7	;volatile
  6624                           
  6625                           ;MCAL/interrupt.c: 49:         callbackTable[ADC] = callback;
  6626  0782  1283               	bcf	3,5	;RP0=0, select bank0
  6627  0783  0826               	movf	Interrupt_Enable@callback,w
  6628  0784  00D0               	movwf	low ((_callbackTable| 0+1))
  6629  0785                     l4157:
  6630                           
  6631                           ;MCAL/interrupt.c: 51:      if(Interrupt_Source == UART_TX)
  6632  0785  3002               	movlw	2
  6633  0786  0627               	xorwf	Interrupt_Enable@Interrupt_Source,w
  6634  0787  1D03               	btfss	3,2
  6635  0788  2F91               	goto	l4163
  6636                           
  6637                           ;MCAL/interrupt.c: 52:     {;MCAL/interrupt.c: 53:         TXIF = 0 ;
  6638  0789  120C               	bcf	12,4	;volatile
  6639                           
  6640                           ;MCAL/interrupt.c: 54:         TXIE = 0;
  6641  078A  1683               	bsf	3,5	;RP0=1, select bank1
  6642  078B  120C               	bcf	12,4	;volatile
  6643                           
  6644                           ;MCAL/interrupt.c: 55:         PEIE = 1;
  6645  078C  170B               	bsf	11,6	;volatile
  6646                           
  6647                           ;MCAL/interrupt.c: 56:         GIE = 1;
  6648  078D  178B               	bsf	11,7	;volatile
  6649                           
  6650                           ;MCAL/interrupt.c: 57:         callbackTable[UART_TX] = callback;
  6651  078E  1283               	bcf	3,5	;RP0=0, select bank0
  6652  078F  0826               	movf	Interrupt_Enable@callback,w
  6653  0790  00D1               	movwf	low ((_callbackTable| 0+2))
  6654  0791                     l4163:
  6655                           
  6656                           ;MCAL/interrupt.c: 59:      if(Interrupt_Source == UART_RX)
  6657  0791  3003               	movlw	3
  6658  0792  0627               	xorwf	Interrupt_Enable@Interrupt_Source,w
  6659  0793  1D03               	btfss	3,2
  6660  0794  2F9D               	goto	l4169
  6661                           
  6662                           ;MCAL/interrupt.c: 60:     {;MCAL/interrupt.c: 61:         RCIF = 0 ;
  6663  0795  128C               	bcf	12,5	;volatile
  6664                           
  6665                           ;MCAL/interrupt.c: 62:         RCIE = 0;
  6666  0796  1683               	bsf	3,5	;RP0=1, select bank1
  6667  0797  128C               	bcf	12,5	;volatile
  6668                           
  6669                           ;MCAL/interrupt.c: 63:         PEIE = 1;
  6670  0798  170B               	bsf	11,6	;volatile
  6671                           
  6672                           ;MCAL/interrupt.c: 64:         GIE = 1;
  6673  0799  178B               	bsf	11,7	;volatile
  6674                           
  6675                           ;MCAL/interrupt.c: 65:         callbackTable[UART_RX] = callback;
  6676  079A  1283               	bcf	3,5	;RP0=0, select bank0
  6677  079B  0826               	movf	Interrupt_Enable@callback,w
  6678  079C  00D2               	movwf	low ((_callbackTable| 0+3))
  6679  079D                     l4169:
  6680                           
  6681                           ;MCAL/interrupt.c: 67:     if(Interrupt_Source == EXTERNAL_OR_SW)
  6682  079D  3004               	movlw	4
  6683  079E  0627               	xorwf	Interrupt_Enable@Interrupt_Source,w
  6684  079F  1D03               	btfss	3,2
  6685  07A0  0008               	return
  6686                           
  6687                           ;MCAL/interrupt.c: 68:     {;MCAL/interrupt.c: 69:         INTF = 0 ;
  6688  07A1  108B               	bcf	11,1	;volatile
  6689                           
  6690                           ;MCAL/interrupt.c: 70:         INTEDG = 0;
  6691  07A2  1683               	bsf	3,5	;RP0=1, select bank1
  6692  07A3  1301               	bcf	1,6	;volatile
  6693                           
  6694                           ;MCAL/interrupt.c: 71:         INTE = 1;
  6695  07A4  160B               	bsf	11,4	;volatile
  6696                           
  6697                           ;MCAL/interrupt.c: 72:         GIE = 1;
  6698  07A5  178B               	bsf	11,7	;volatile
  6699                           
  6700                           ;MCAL/interrupt.c: 73:         callbackTable[EXTERNAL_OR_SW] = callback;
  6701  07A6  1283               	bcf	3,5	;RP0=0, select bank0
  6702  07A7  0826               	movf	Interrupt_Enable@callback,w
  6703  07A8  00D3               	movwf	low ((_callbackTable| 0+4))
  6704  07A9  0008               	return
  6705  07AA                     __end_of_Interrupt_Enable:
  6706                           
  6707                           	psect	text35
  6708  09AB                     __ptext35:	
  6709 ;; *************** function _Eep_Init *****************
  6710 ;; Defined at:
  6711 ;;		line 9 in file "EcuAL/Eeprom.c"
  6712 ;; Parameters:    Size  Location     Type
  6713 ;;  ConfigPtr       1    wreg     PTR struct .
  6714 ;;		 -> Eep_Config(3), 
  6715 ;; Auto vars:     Size  Location     Type
  6716 ;;  ConfigPtr       1   21[BANK0 ] PTR struct .
  6717 ;;		 -> Eep_Config(3), 
  6718 ;; Return value:  Size  Location     Type
  6719 ;;                  1    wreg      void 
  6720 ;; Registers used:
  6721 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6722 ;; Tracked objects:
  6723 ;;		On entry : B00/0
  6724 ;;		On exit  : B00/0
  6725 ;;		Unchanged: 0/0
  6726 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6727 ;;      Params:         0       0       0       0       0
  6728 ;;      Locals:         0       1       0       0       0
  6729 ;;      Temps:          0       0       0       0       0
  6730 ;;      Totals:         0       1       0       0       0
  6731 ;;Total ram usage:        1 bytes
  6732 ;; Hardware stack levels used:    1
  6733 ;; Hardware stack levels required when called:   10
  6734 ;; This function calls:
  6735 ;;		_I2c_Init
  6736 ;; This function is called by:
  6737 ;;		_Init_Task
  6738 ;; This function uses a non-reentrant model
  6739 ;;
  6740                           
  6741                           
  6742                           ;psect for function _Eep_Init
  6743  09AB                     _Eep_Init:
  6744                           
  6745                           ;incstack = 0
  6746 ;; hardware stack exceeded
  6747                           ; Regs used in _Eep_Init: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6748                           ;Eep_Init@ConfigPtr stored from wreg
  6749  09AB  00B5               	movwf	Eep_Init@ConfigPtr
  6750                           
  6751                           ;EcuAL/Eeprom.c: 9: void Eep_Init(Eep_ConfigType* ConfigPtr);EcuAL/Eeprom.c: 10: {;EcuAL
      +                          /Eeprom.c: 24:     {;EcuAL/Eeprom.c: 25:         I2c_Init(&I2c_Config);
  6752  09AC  30B1               	movlw	(low (_I2c_Config| (0+256)))& (0+255)
  6753  09AD  120A  118A  2353   	fcall	_I2c_Init
  6754                           
  6755                           ;EcuAL/Eeprom.c: 26:         *Eep_SlaveAddress = ConfigPtr->Eep_SlaveAddress;
  6756  09B0  0835               	movf	Eep_Init@ConfigPtr,w
  6757  09B1  0084               	movwf	4
  6758  09B2  1383               	bcf	3,7	;select IRP bank0
  6759  09B3  0800               	movf	0,w
  6760  09B4  00FF               	movwf	127
  6761  09B5  0184               	clrf	4
  6762  09B6  0080               	movwf	0
  6763                           
  6764                           ;EcuAL/Eeprom.c: 27:         Eep_ThisConfiguration = ConfigPtr;
  6765  09B7  0835               	movf	Eep_Init@ConfigPtr,w
  6766  09B8  00DE               	movwf	_Eep_ThisConfiguration
  6767                           
  6768                           ;EcuAL/Eeprom.c: 28:         Eep_ThisConfiguration->Eep_Status = EEP_IDLE;
  6769  09B9  3E02               	addlw	2
  6770  09BA  0084               	movwf	4
  6771  09BB  0180               	clrf	0
  6772  09BC  0A80               	incf	0,f
  6773  09BD  0008               	return
  6774  09BE                     __end_of_Eep_Init:
  6775                           
  6776                           	psect	text37
  6777  0B64                     __ptext37:	
  6778 ;; *************** function ___lldiv *****************
  6779 ;; Defined at:
  6780 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\__lldiv.c"
  6781 ;; Parameters:    Size  Location     Type
  6782 ;;  divisor         4    6[BANK0 ] unsigned long 
  6783 ;;  dividend        4   10[BANK0 ] unsigned long 
  6784 ;; Auto vars:     Size  Location     Type
  6785 ;;  quotient        4   14[BANK0 ] unsigned long 
  6786 ;;  counter         1   18[BANK0 ] unsigned char 
  6787 ;; Return value:  Size  Location     Type
  6788 ;;                  4    6[BANK0 ] unsigned long 
  6789 ;; Registers used:
  6790 ;;		wreg, status,2, status,0
  6791 ;; Tracked objects:
  6792 ;;		On entry : B00/800
  6793 ;;		On exit  : B00/800
  6794 ;;		Unchanged: 800/0
  6795 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6796 ;;      Params:         0       8       0       0       0
  6797 ;;      Locals:         0       5       0       0       0
  6798 ;;      Temps:          0       0       0       0       0
  6799 ;;      Totals:         0      13       0       0       0
  6800 ;;Total ram usage:       13 bytes
  6801 ;; Hardware stack levels used:    1
  6802 ;; Hardware stack levels required when called:    8
  6803 ;; This function calls:
  6804 ;;		Nothing
  6805 ;; This function is called by:
  6806 ;;		_I2c_Init
  6807 ;; This function uses a non-reentrant model
  6808 ;;
  6809                           
  6810                           
  6811                           ;psect for function ___lldiv
  6812  0B64                     ___lldiv:
  6813                           
  6814                           ;incstack = 0
  6815 ;; hardware stack exceeded
  6816                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  6817  0B64  01AE               	clrf	___lldiv@quotient
  6818  0B65  01AF               	clrf	___lldiv@quotient+1
  6819  0B66  01B0               	clrf	___lldiv@quotient+2
  6820  0B67  01B1               	clrf	___lldiv@quotient+3
  6821  0B68  0829               	movf	___lldiv@divisor+3,w
  6822  0B69  0428               	iorwf	___lldiv@divisor+2,w
  6823  0B6A  0427               	iorwf	___lldiv@divisor+1,w
  6824  0B6B  0426               	iorwf	___lldiv@divisor,w
  6825  0B6C  1903               	skipnz
  6826  0B6D  2BA3               	goto	l4363
  6827  0B6E  01B2               	clrf	___lldiv@counter
  6828  0B6F                     L19:
  6829  0B6F  0AB2               	incf	___lldiv@counter,f
  6830  0B70  1BA9               	btfsc	___lldiv@divisor+3,7
  6831  0B71  2B78               	goto	l4351
  6832  0B72  1003               	clrc
  6833  0B73  0DA6               	rlf	___lldiv@divisor,f
  6834  0B74  0DA7               	rlf	___lldiv@divisor+1,f
  6835  0B75  0DA8               	rlf	___lldiv@divisor+2,f
  6836  0B76  0DA9               	rlf	___lldiv@divisor+3,f
  6837  0B77  2B6F               	goto	L19
  6838  0B78                     l4351:
  6839  0B78  1003               	clrc
  6840  0B79  0DAE               	rlf	___lldiv@quotient,f
  6841  0B7A  0DAF               	rlf	___lldiv@quotient+1,f
  6842  0B7B  0DB0               	rlf	___lldiv@quotient+2,f
  6843  0B7C  0DB1               	rlf	___lldiv@quotient+3,f
  6844  0B7D  0829               	movf	___lldiv@divisor+3,w
  6845  0B7E  022D               	subwf	___lldiv@dividend+3,w
  6846  0B7F  1D03               	skipz
  6847  0B80  2B8B               	goto	u3805
  6848  0B81  0828               	movf	___lldiv@divisor+2,w
  6849  0B82  022C               	subwf	___lldiv@dividend+2,w
  6850  0B83  1D03               	skipz
  6851  0B84  2B8B               	goto	u3805
  6852  0B85  0827               	movf	___lldiv@divisor+1,w
  6853  0B86  022B               	subwf	___lldiv@dividend+1,w
  6854  0B87  1D03               	skipz
  6855  0B88  2B8B               	goto	u3805
  6856  0B89  0826               	movf	___lldiv@divisor,w
  6857  0B8A  022A               	subwf	___lldiv@dividend,w
  6858  0B8B                     u3805:
  6859  0B8B  1C03               	skipc
  6860  0B8C  2B9D               	goto	L20
  6861  0B8D  0826               	movf	___lldiv@divisor,w
  6862  0B8E  02AA               	subwf	___lldiv@dividend,f
  6863  0B8F  0827               	movf	___lldiv@divisor+1,w
  6864  0B90  1C03               	skipc
  6865  0B91  0F27               	incfsz	___lldiv@divisor+1,w
  6866  0B92  02AB               	subwf	___lldiv@dividend+1,f
  6867  0B93  0828               	movf	___lldiv@divisor+2,w
  6868  0B94  1C03               	skipc
  6869  0B95  0F28               	incfsz	___lldiv@divisor+2,w
  6870  0B96  02AC               	subwf	___lldiv@dividend+2,f
  6871  0B97  0829               	movf	___lldiv@divisor+3,w
  6872  0B98  1C03               	skipc
  6873  0B99  0F29               	incfsz	___lldiv@divisor+3,w
  6874  0B9A  02AD               	subwf	___lldiv@dividend+3,f
  6875  0B9B  142E               	bsf	___lldiv@quotient,0
  6876  0B9C  1003               	clrc
  6877  0B9D                     L20:
  6878  0B9D  0CA9               	rrf	___lldiv@divisor+3,f
  6879  0B9E  0CA8               	rrf	___lldiv@divisor+2,f
  6880  0B9F  0CA7               	rrf	___lldiv@divisor+1,f
  6881  0BA0  0CA6               	rrf	___lldiv@divisor,f
  6882  0BA1  0BB2               	decfsz	___lldiv@counter,f
  6883  0BA2  2B78               	goto	l4351
  6884  0BA3                     l4363:
  6885  0BA3  0831               	movf	___lldiv@quotient+3,w
  6886  0BA4  00A9               	movwf	?___lldiv+3
  6887  0BA5  0830               	movf	___lldiv@quotient+2,w
  6888  0BA6  00A8               	movwf	?___lldiv+2
  6889  0BA7  082F               	movf	___lldiv@quotient+1,w
  6890  0BA8  00A7               	movwf	?___lldiv+1
  6891  0BA9  082E               	movf	___lldiv@quotient,w
  6892  0BAA  00A6               	movwf	?___lldiv
  6893  0BAB  0008               	return
  6894  0BAC                     __end_of___lldiv:
  6895                           
  6896                           	psect	text39
  6897  09F8                     __ptext39:	
  6898 ;; *************** function _Port_InitPort *****************
  6899 ;; Defined at:
  6900 ;;		line 59 in file "MCAL/Port.c"
  6901 ;; Parameters:    Size  Location     Type
  6902 ;;  ConfigPtr       1    wreg     PTR struct .
  6903 ;;		 -> Disp_PinsConfiguration(9), 
  6904 ;; Auto vars:     Size  Location     Type
  6905 ;;  ConfigPtr       1   18[BANK0 ] PTR struct .
  6906 ;;		 -> Disp_PinsConfiguration(9), 
  6907 ;;  i               2   19[BANK0 ] int 
  6908 ;; Return value:  Size  Location     Type
  6909 ;;                  1    wreg      void 
  6910 ;; Registers used:
  6911 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6912 ;; Tracked objects:
  6913 ;;		On entry : B00/100
  6914 ;;		On exit  : 0/0
  6915 ;;		Unchanged: 0/0
  6916 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6917 ;;      Params:         0       0       0       0       0
  6918 ;;      Locals:         0       3       0       0       0
  6919 ;;      Temps:          0       0       0       0       0
  6920 ;;      Totals:         0       3       0       0       0
  6921 ;;Total ram usage:        3 bytes
  6922 ;; Hardware stack levels used:    1
  6923 ;; Hardware stack levels required when called:    9
  6924 ;; This function calls:
  6925 ;;		_Port_Init
  6926 ;; This function is called by:
  6927 ;;		_Disp_Init
  6928 ;; This function uses a non-reentrant model
  6929 ;;
  6930                           
  6931                           
  6932                           ;psect for function _Port_InitPort
  6933  09F8                     _Port_InitPort:
  6934                           
  6935                           ;incstack = 0
  6936 ;; hardware stack exceeded
  6937                           ; Regs used in _Port_InitPort: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6938                           ;Port_InitPort@ConfigPtr stored from wreg
  6939  09F8  1283               	bcf	3,5	;RP0=0, select bank0
  6940  09F9  00B2               	movwf	Port_InitPort@ConfigPtr
  6941                           
  6942                           ;MCAL/Port.c: 59: void Port_InitPort(Port_ConfigType* ConfigPtr);MCAL/Port.c: 60: {;MCAL
      +                          /Port.c: 61:     for(int i=0 ; i<8 ; i++)
  6943  09FA  01B3               	clrf	Port_InitPort@i
  6944  09FB  01B4               	clrf	Port_InitPort@i+1
  6945  09FC                     l4453:
  6946                           
  6947                           ;MCAL/Port.c: 62:     {;MCAL/Port.c: 63:         Port_Init(ConfigPtr);
  6948  09FC  1283               	bcf	3,5	;RP0=0, select bank0
  6949  09FD  1303               	bcf	3,6	;RP1=0, select bank0
  6950  09FE  0832               	movf	Port_InitPort@ConfigPtr,w
  6951  09FF  00A9               	movwf	Port_Init@ConfigPtr
  6952  0A00  01AA               	clrf	Port_Init@ConfigPtr+1
  6953  0A01  120A  118A  239A  120A  158A  	fcall	_Port_Init
  6954                           
  6955                           ;MCAL/Port.c: 64:         ConfigPtr->Pin++;
  6956  0A06  0A32               	incf	Port_InitPort@ConfigPtr,w
  6957  0A07  0084               	movwf	4
  6958  0A08  1383               	bcf	3,7	;select IRP bank0
  6959  0A09  0A80               	incf	0,f
  6960                           
  6961                           ;MCAL/Port.c: 65:     }
  6962  0A0A  0AB3               	incf	Port_InitPort@i,f
  6963  0A0B  1903               	skipnz
  6964  0A0C  0AB4               	incf	Port_InitPort@i+1,f
  6965  0A0D  0834               	movf	Port_InitPort@i+1,w
  6966  0A0E  3A80               	xorlw	128
  6967  0A0F  00FF               	movwf	127
  6968  0A10  3080               	movlw	128
  6969  0A11  027F               	subwf	127,w
  6970  0A12  1D03               	skipz
  6971  0A13  2A16               	goto	u3905
  6972  0A14  3008               	movlw	8
  6973  0A15  0233               	subwf	Port_InitPort@i,w
  6974  0A16                     u3905:
  6975  0A16  1803               	btfsc	3,0
  6976  0A17  0008               	return
  6977  0A18  29FC               	goto	l4453
  6978  0A19                     __end_of_Port_InitPort:
  6979                           
  6980                           	psect	text41
  6981  09D7                     __ptext41:	
  6982 ;; *************** function _Os2_Init *****************
  6983 ;; Defined at:
  6984 ;;		line 20 in file "OS/OS2.c"
  6985 ;; Parameters:    Size  Location     Type
  6986 ;;  EndTimes        1    wreg     PTR unsigned char 
  6987 ;;		 -> EndTimes(9), 
  6988 ;; Auto vars:     Size  Location     Type
  6989 ;;  EndTimes        1    7[BANK0 ] PTR unsigned char 
  6990 ;;		 -> EndTimes(9), 
  6991 ;;  i               2    8[BANK0 ] int 
  6992 ;; Return value:  Size  Location     Type
  6993 ;;                  1    wreg      void 
  6994 ;; Registers used:
  6995 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  6996 ;; Tracked objects:
  6997 ;;		On entry : B00/0
  6998 ;;		On exit  : 0/0
  6999 ;;		Unchanged: 0/0
  7000 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7001 ;;      Params:         0       0       0       0       0
  7002 ;;      Locals:         0       3       0       0       0
  7003 ;;      Temps:          0       1       0       0       0
  7004 ;;      Totals:         0       4       0       0       0
  7005 ;;Total ram usage:        4 bytes
  7006 ;; Hardware stack levels used:    1
  7007 ;; Hardware stack levels required when called:    8
  7008 ;; This function calls:
  7009 ;;		Nothing
  7010 ;; This function is called by:
  7011 ;;		_main
  7012 ;; This function uses a non-reentrant model
  7013 ;;
  7014                           
  7015                           
  7016                           ;psect for function _Os2_Init
  7017  09D7                     _Os2_Init:
  7018                           
  7019                           ;incstack = 0
  7020 ;; hardware stack exceeded
  7021                           ; Regs used in _Os2_Init: [wreg-fsr0h+status,2+status,0+btemp+1]
  7022                           ;Os2_Init@EndTimes stored from wreg
  7023  09D7  00A7               	movwf	Os2_Init@EndTimes
  7024                           
  7025                           ;OS/OS2.c: 20: void Os2_Init(CounterType *EndTimes);OS/OS2.c: 21: {;OS/OS2.c: 22:     fo
      +                          r(int i = 0 ; i<9 ; i++)
  7026  09D8  01A8               	clrf	Os2_Init@i
  7027  09D9  01A9               	clrf	Os2_Init@i+1
  7028  09DA                     l4023:
  7029                           
  7030                           ;OS/OS2.c: 23:         States_EndTime[i] = EndTimes[i];
  7031  09DA  1283               	bcf	3,5	;RP0=0, select bank0
  7032  09DB  1303               	bcf	3,6	;RP1=0, select bank0
  7033  09DC  0828               	movf	Os2_Init@i,w
  7034  09DD  0727               	addwf	Os2_Init@EndTimes,w
  7035  09DE  00A6               	movwf	??_Os2_Init
  7036  09DF  0084               	movwf	4
  7037  09E0  1783               	bsf	3,7	;select IRP bank2
  7038  09E1  0800               	movf	0,w
  7039  09E2  00FF               	movwf	127
  7040  09E3  0828               	movf	Os2_Init@i,w
  7041  09E4  3ED7               	addlw	(low (_States_EndTime| 0))& (0+255)
  7042  09E5  0084               	movwf	4
  7043  09E6  087F               	movf	127,w
  7044  09E7  1383               	bcf	3,7	;select IRP bank1
  7045  09E8  0080               	movwf	0
  7046  09E9  0AA8               	incf	Os2_Init@i,f
  7047  09EA  1903               	skipnz
  7048  09EB  0AA9               	incf	Os2_Init@i+1,f
  7049  09EC  0829               	movf	Os2_Init@i+1,w
  7050  09ED  3A80               	xorlw	128
  7051  09EE  00FF               	movwf	127
  7052  09EF  3080               	movlw	128
  7053  09F0  027F               	subwf	127,w
  7054  09F1  1D03               	skipz
  7055  09F2  29F5               	goto	u3305
  7056  09F3  3009               	movlw	9
  7057  09F4  0228               	subwf	Os2_Init@i,w
  7058  09F5                     u3305:
  7059  09F5  1803               	btfsc	3,0
  7060  09F6  0008               	return
  7061  09F7  29DA               	goto	l4023
  7062  09F8                     __end_of_Os2_Init:
  7063                           
  7064                           	psect	text42
  7065  0A19                     __ptext42:	
  7066 ;; *************** function _Os2_AddThreads *****************
  7067 ;; Defined at:
  7068 ;;		line 35 in file "OS/OS2.c"
  7069 ;; Parameters:    Size  Location     Type
  7070 ;;  Tasks           1    wreg     PTR PTR FTN()void 
  7071 ;;		 -> Tasks(9), 
  7072 ;; Auto vars:     Size  Location     Type
  7073 ;;  Tasks           1    7[BANK0 ] PTR PTR FTN()void 
  7074 ;;		 -> Tasks(9), 
  7075 ;;  i               2    8[BANK0 ] int 
  7076 ;; Return value:  Size  Location     Type
  7077 ;;                  1    wreg      void 
  7078 ;; Registers used:
  7079 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  7080 ;; Tracked objects:
  7081 ;;		On entry : 0/0
  7082 ;;		On exit  : 0/0
  7083 ;;		Unchanged: 0/0
  7084 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7085 ;;      Params:         0       0       0       0       0
  7086 ;;      Locals:         0       3       0       0       0
  7087 ;;      Temps:          0       1       0       0       0
  7088 ;;      Totals:         0       4       0       0       0
  7089 ;;Total ram usage:        4 bytes
  7090 ;; Hardware stack levels used:    1
  7091 ;; Hardware stack levels required when called:    8
  7092 ;; This function calls:
  7093 ;;		Nothing
  7094 ;; This function is called by:
  7095 ;;		_main
  7096 ;; This function uses a non-reentrant model
  7097 ;;
  7098                           
  7099                           
  7100                           ;psect for function _Os2_AddThreads
  7101  0A19                     _Os2_AddThreads:
  7102                           
  7103                           ;incstack = 0
  7104 ;; hardware stack exceeded
  7105                           ; Regs used in _Os2_AddThreads: [wreg-fsr0h+status,2+status,0+btemp+1]
  7106                           ;Os2_AddThreads@Tasks stored from wreg
  7107  0A19  1283               	bcf	3,5	;RP0=0, select bank0
  7108  0A1A  1303               	bcf	3,6	;RP1=0, select bank0
  7109  0A1B  00A7               	movwf	Os2_AddThreads@Tasks
  7110                           
  7111                           ;OS/OS2.c: 35: void Os2_AddThreads(void (**Tasks) (void));OS/OS2.c: 36: {;OS/OS2.c: 37: 
      +                              for(int i = 0 ; i<9 ; i++)
  7112  0A1C  01A8               	clrf	Os2_AddThreads@i
  7113  0A1D  01A9               	clrf	Os2_AddThreads@i+1
  7114  0A1E                     l4035:
  7115                           
  7116                           ;OS/OS2.c: 38:         TaskTable[i] = Tasks[i];
  7117  0A1E  1283               	bcf	3,5	;RP0=0, select bank0
  7118  0A1F  1303               	bcf	3,6	;RP1=0, select bank0
  7119  0A20  0828               	movf	Os2_AddThreads@i,w
  7120  0A21  0727               	addwf	Os2_AddThreads@Tasks,w
  7121  0A22  00A6               	movwf	??_Os2_AddThreads
  7122  0A23  0084               	movwf	4
  7123  0A24  1783               	bsf	3,7	;select IRP bank2
  7124  0A25  0800               	movf	0,w
  7125  0A26  00FF               	movwf	127
  7126  0A27  0828               	movf	Os2_AddThreads@i,w
  7127  0A28  3E46               	addlw	(low (_TaskTable| 0))& (0+255)
  7128  0A29  0084               	movwf	4
  7129  0A2A  087F               	movf	127,w
  7130  0A2B  1383               	bcf	3,7	;select IRP bank0
  7131  0A2C  0080               	movwf	0
  7132  0A2D  0AA8               	incf	Os2_AddThreads@i,f
  7133  0A2E  1903               	skipnz
  7134  0A2F  0AA9               	incf	Os2_AddThreads@i+1,f
  7135  0A30  0829               	movf	Os2_AddThreads@i+1,w
  7136  0A31  3A80               	xorlw	128
  7137  0A32  00FF               	movwf	127
  7138  0A33  3080               	movlw	128
  7139  0A34  027F               	subwf	127,w
  7140  0A35  1D03               	skipz
  7141  0A36  2A39               	goto	u3315
  7142  0A37  3009               	movlw	9
  7143  0A38  0228               	subwf	Os2_AddThreads@i,w
  7144  0A39                     u3315:
  7145  0A39  1803               	btfsc	3,0
  7146  0A3A  0008               	return
  7147  0A3B  2A1E               	goto	l4035
  7148  0A3C                     __end_of_Os2_AddThreads:
  7149                           
  7150                           	psect	text43
  7151  0A9E                     __ptext43:	
  7152 ;; *************** function _ISR *****************
  7153 ;; Defined at:
  7154 ;;		line 5 in file "MCAL/interrupt.c"
  7155 ;; Parameters:    Size  Location     Type
  7156 ;;		None
  7157 ;; Auto vars:     Size  Location     Type
  7158 ;;		None
  7159 ;; Return value:  Size  Location     Type
  7160 ;;                  1    wreg      void 
  7161 ;; Registers used:
  7162 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7163 ;; Tracked objects:
  7164 ;;		On entry : 0/0
  7165 ;;		On exit  : 300/0
  7166 ;;		Unchanged: 0/0
  7167 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7168 ;;      Params:         0       0       0       0       0
  7169 ;;      Locals:         0       0       0       0       0
  7170 ;;      Temps:          0       4       0       0       0
  7171 ;;      Totals:         0       4       0       0       0
  7172 ;;Total ram usage:        4 bytes
  7173 ;; Hardware stack levels used:    1
  7174 ;; Hardware stack levels required when called:    7
  7175 ;; This function calls:
  7176 ;;		_Adc_CallbackFn
  7177 ;;		_Interrupt_TimerCallbackFn
  7178 ;;		_Uart_RX_Callback
  7179 ;;		_Uart_TX_Callback
  7180 ;; This function is called by:
  7181 ;;		Interrupt level 1
  7182 ;; This function uses a non-reentrant model
  7183 ;;
  7184                           
  7185                           
  7186                           ;psect for function _ISR
  7187  0A9E                     _ISR:
  7188                           
  7189                           ;MCAL/interrupt.c: 7:   if(TMR1IF)
  7190  0A9E  1C0C               	btfss	12,0	;volatile
  7191  0A9F  2AA6               	goto	i1l4645
  7192                           
  7193                           ;MCAL/interrupt.c: 8:   {;MCAL/interrupt.c: 9:       callbackTable[TIMER]();
  7194  0AA0  084F               	movf	_callbackTable,w
  7195  0AA1  120A  118A  2066  120A  158A  	fcall	i1fptable
  7196  0AA6                     i1l4645:
  7197                           
  7198                           ;MCAL/interrupt.c: 11:   if(ADIF)
  7199  0AA6  1283               	bcf	3,5	;RP0=0, select bank0
  7200  0AA7  1303               	bcf	3,6	;RP1=0, select bank0
  7201  0AA8  1F0C               	btfss	12,6	;volatile
  7202  0AA9  2AB0               	goto	i1l4649
  7203                           
  7204                           ;MCAL/interrupt.c: 12:   {;MCAL/interrupt.c: 13:       callbackTable[ADC]();
  7205  0AAA  0850               	movf	low ((_callbackTable| 0+1)),w
  7206  0AAB  120A  118A  2066  120A  158A  	fcall	i1fptable
  7207  0AB0                     i1l4649:
  7208                           
  7209                           ;MCAL/interrupt.c: 15:   if (TXIF)
  7210  0AB0  1283               	bcf	3,5	;RP0=0, select bank0
  7211  0AB1  1303               	bcf	3,6	;RP1=0, select bank0
  7212  0AB2  1E0C               	btfss	12,4	;volatile
  7213  0AB3  2ABD               	goto	i1l4655
  7214                           
  7215                           ;MCAL/interrupt.c: 16:   {;MCAL/interrupt.c: 17:     callbackTable[UART_TX]();
  7216  0AB4  0851               	movf	low ((_callbackTable| 0+2)),w
  7217  0AB5  120A  118A  2066  120A  158A  	fcall	i1fptable
  7218                           
  7219                           ;MCAL/interrupt.c: 18:     TXIF = 0;
  7220  0ABA  1283               	bcf	3,5	;RP0=0, select bank0
  7221  0ABB  1303               	bcf	3,6	;RP1=0, select bank0
  7222  0ABC  120C               	bcf	12,4	;volatile
  7223  0ABD                     i1l4655:
  7224                           
  7225                           ;MCAL/interrupt.c: 20:   if (RCIF)
  7226  0ABD  1E8C               	btfss	12,5	;volatile
  7227  0ABE  2AC8               	goto	i1l4661
  7228                           
  7229                           ;MCAL/interrupt.c: 21:   {;MCAL/interrupt.c: 22:     callbackTable[UART_RX]();
  7230  0ABF  0852               	movf	low ((_callbackTable| 0+3)),w
  7231  0AC0  120A  118A  2066  120A  158A  	fcall	i1fptable
  7232                           
  7233                           ;MCAL/interrupt.c: 23:     RCIF = 0;
  7234  0AC5  1283               	bcf	3,5	;RP0=0, select bank0
  7235  0AC6  1303               	bcf	3,6	;RP1=0, select bank0
  7236  0AC7  128C               	bcf	12,5	;volatile
  7237  0AC8                     i1l4661:
  7238                           
  7239                           ;MCAL/interrupt.c: 25:   if (INTF)
  7240  0AC8  1C8B               	btfss	11,1	;volatile
  7241  0AC9  2AD1               	goto	i1l524
  7242                           
  7243                           ;MCAL/interrupt.c: 26:   {;MCAL/interrupt.c: 27:     callbackTable[EXTERNAL_OR_SW]();
  7244  0ACA  0853               	movf	low ((_callbackTable| 0+4)),w
  7245  0ACB  120A  118A  2066  120A  158A  	fcall	i1fptable
  7246                           
  7247                           ;MCAL/interrupt.c: 28:     INTF = 0;
  7248  0AD0  108B               	bcf	11,1	;volatile
  7249  0AD1                     i1l524:
  7250  0AD1  1283               	bcf	3,5	;RP0=0, select bank0
  7251  0AD2  1303               	bcf	3,6	;RP1=0, select bank0
  7252  0AD3  0825               	movf	??_ISR+3,w
  7253  0AD4  00FF               	movwf	127
  7254  0AD5  0824               	movf	??_ISR+2,w
  7255  0AD6  008A               	movwf	10
  7256  0AD7  0823               	movf	??_ISR+1,w
  7257  0AD8  0084               	movwf	4
  7258  0AD9  0E22               	swapf	??_ISR^0,w
  7259  0ADA  0083               	movwf	3
  7260  0ADB  0EFE               	swapf	126,f
  7261  0ADC  0E7E               	swapf	126,w
  7262  0ADD  0009               	retfie
  7263  0ADE                     __end_of_ISR:
  7264                           
  7265                           	psect	intentry
  7266  0004                     __pintentry:	
  7267                           ;incstack = 0
  7268 ;; hardware stack exceeded
  7269                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7270                           
  7271  0004                     interrupt_function:
  7272  007E                     saved_w	set	btemp
  7273  0004  00FE               	movwf	btemp
  7274  0005  0E03               	swapf	3,w
  7275  0006  1283               	bcf	3,5	;RP0=0, select bank0
  7276  0007  1303               	bcf	3,6	;RP1=0, select bank0
  7277  0008  00A2               	movwf	??_ISR
  7278  0009  0804               	movf	4,w
  7279  000A  00A3               	movwf	??_ISR+1
  7280  000B  080A               	movf	10,w
  7281  000C  00A4               	movwf	??_ISR+2
  7282  000D  087F               	movf	btemp+1,w
  7283  000E  00A5               	movwf	??_ISR+3
  7284  000F  120A  158A  2A9E   	ljmp	_ISR
  7285                           
  7286                           	psect	text44
  7287  0975                     __ptext44:	
  7288 ;; *************** function _Uart_RX_Callback *****************
  7289 ;; Defined at:
  7290 ;;		line 12 in file "MCAL/Uart.c"
  7291 ;; Parameters:    Size  Location     Type
  7292 ;;		None
  7293 ;; Auto vars:     Size  Location     Type
  7294 ;;		None
  7295 ;; Return value:  Size  Location     Type
  7296 ;;                  1    wreg      void 
  7297 ;; Registers used:
  7298 ;;		wreg, fsr0l, fsr0h
  7299 ;; Tracked objects:
  7300 ;;		On entry : 300/0
  7301 ;;		On exit  : 300/0
  7302 ;;		Unchanged: 0/0
  7303 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7304 ;;      Params:         0       0       0       0       0
  7305 ;;      Locals:         0       0       0       0       0
  7306 ;;      Temps:          0       0       0       0       0
  7307 ;;      Totals:         0       0       0       0       0
  7308 ;;Total ram usage:        0 bytes
  7309 ;; Hardware stack levels used:    1
  7310 ;; This function calls:
  7311 ;;		Nothing
  7312 ;; This function is called by:
  7313 ;;		_ISR
  7314 ;; This function uses a non-reentrant model
  7315 ;;
  7316                           
  7317                           
  7318                           ;psect for function _Uart_RX_Callback
  7319  0975                     _Uart_RX_Callback:
  7320                           
  7321                           ;MCAL/Uart.c: 14:     if (RCIF == 1)
  7322                           
  7323                           ;incstack = 0
  7324                           ; Regs used in _Uart_RX_Callback: [wregfsr0]
  7325  0975  1E8C               	btfss	12,5	;volatile
  7326  0976  0008               	return
  7327                           
  7328                           ;MCAL/Uart.c: 15:   {;MCAL/Uart.c: 16:     *RX_Data = RCREG;
  7329  0977  085D               	movf	_RX_Data,w
  7330  0978  0084               	movwf	4
  7331  0979  081A               	movf	26,w	;volatile
  7332  097A  1383               	bcf	3,7	;select IRP bank0
  7333  097B  0080               	movwf	0
  7334                           
  7335                           ;MCAL/Uart.c: 17:     RCIF = 0;
  7336  097C  128C               	bcf	12,5	;volatile
  7337  097D  0008               	return
  7338  097E                     __end_of_Uart_RX_Callback:
  7339                           
  7340                           	psect	text45
  7341  0C08                     __ptext45:	
  7342 ;; *************** function _Adc_CallbackFn *****************
  7343 ;; Defined at:
  7344 ;;		line 13 in file "MCAL/adc.c"
  7345 ;; Parameters:    Size  Location     Type
  7346 ;;		None
  7347 ;; Auto vars:     Size  Location     Type
  7348 ;;		None
  7349 ;; Return value:  Size  Location     Type
  7350 ;;                  1    wreg      void 
  7351 ;; Registers used:
  7352 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7353 ;; Tracked objects:
  7354 ;;		On entry : 300/0
  7355 ;;		On exit  : B00/800
  7356 ;;		Unchanged: 0/0
  7357 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7358 ;;      Params:         0       0       0       0       0
  7359 ;;      Locals:         0       0       0       0       0
  7360 ;;      Temps:          0       0       0       0       0
  7361 ;;      Totals:         0       0       0       0       0
  7362 ;;Total ram usage:        0 bytes
  7363 ;; Hardware stack levels used:    1
  7364 ;; Hardware stack levels required when called:    1
  7365 ;; This function calls:
  7366 ;;		_Adc_Handler
  7367 ;;		___awdiv
  7368 ;; This function is called by:
  7369 ;;		_Adc_Init
  7370 ;;		_ISR
  7371 ;; This function uses a non-reentrant model
  7372 ;;
  7373                           
  7374                           
  7375                           ;psect for function _Adc_CallbackFn
  7376  0C08                     _Adc_CallbackFn:
  7377                           
  7378                           ;MCAL/adc.c: 15:    **(Adc_Result) = ((ADRESH << 8) + ADRESL)/2;
  7379                           
  7380                           ;incstack = 0
  7381 ;; hardware stack exceeded
  7382                           ; Regs used in _Adc_CallbackFn: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7383  0C08  085F               	movf	_Adc_Result,w
  7384  0C09  0084               	movwf	4
  7385  0C0A  1383               	bcf	3,7	;select IRP bank0
  7386  0C0B  0800               	movf	0,w
  7387  0C0C  0084               	movwf	4
  7388  0C0D  081E               	movf	30,w	;volatile
  7389  0C0E  00F3               	movwf	___awdiv@dividend+1
  7390  0C0F  01F2               	clrf	___awdiv@dividend
  7391  0C10  1683               	bsf	3,5	;RP0=1, select bank1
  7392  0C11  081E               	movf	30,w	;volatile
  7393  0C12  07F2               	addwf	___awdiv@dividend,f
  7394  0C13  1803               	skipnc
  7395  0C14  0AF3               	incf	___awdiv@dividend+1,f
  7396  0C15  3002               	movlw	2
  7397  0C16  00F0               	movwf	___awdiv@divisor
  7398  0C17  01F1               	clrf	___awdiv@divisor+1
  7399  0C18  243A               	fcall	___awdiv
  7400  0C19  0870               	movf	?___awdiv,w
  7401  0C1A  0080               	movwf	0
  7402                           
  7403                           ;MCAL/adc.c: 16:    Adc_ThisConfiguration->CallbackFn(**(Adc_Result));
  7404  0C1B  1283               	bcf	3,5	;RP0=0, select bank0
  7405  0C1C  085F               	movf	_Adc_Result,w
  7406  0C1D  0084               	movwf	4
  7407  0C1E  0800               	movf	0,w
  7408  0C1F  0084               	movwf	4
  7409  0C20  0800               	movf	0,w
  7410  0C21  00F0               	movwf	Adc_Handler@x
  7411  0C22  0860               	movf	_Adc_ThisConfiguration,w
  7412  0C23  3E09               	addlw	9
  7413  0C24  0084               	movwf	4
  7414  0C25  1783               	bsf	3,7	;select IRP bank2
  7415  0C26  0800               	movf	0,w
  7416  0C27  120A  118A  2066  120A  158A  	fcall	i1fptable
  7417                           
  7418                           ;MCAL/adc.c: 17:    ADIF = 0;
  7419  0C2C  130C               	bcf	12,6	;volatile
  7420                           
  7421                           ;MCAL/adc.c: 18:    if(Adc_ThisConfiguration->Adc_GroupConvMode == ADC_CONV_MODE_CONTINU
      +                          OUS_INTERRUPT)
  7422  0C2D  0860               	movf	_Adc_ThisConfiguration,w
  7423  0C2E  3E06               	addlw	6
  7424  0C2F  0084               	movwf	4
  7425  0C30  0B00               	decfsz	0,w
  7426  0C31  2C34               	goto	i1l4059
  7427                           
  7428                           ;MCAL/adc.c: 19:         (ADCON0|=(1<<Pin2));
  7429  0C32  151F               	bsf	31,2	;volatile
  7430  0C33  0008               	return
  7431  0C34                     i1l4059:
  7432                           
  7433                           ;MCAL/adc.c: 21:         Adc_ThisConfiguration->Adc_Status = ADC_COMPLETED;
  7434  0C34  0860               	movf	_Adc_ThisConfiguration,w
  7435  0C35  3E0A               	addlw	10
  7436  0C36  0084               	movwf	4
  7437  0C37  3003               	movlw	3
  7438  0C38  0080               	movwf	0
  7439  0C39  0008               	return
  7440  0C3A                     __end_of_Adc_CallbackFn:
  7441  0C3A                     __ptext72:	
  7442 ;; *************** function ___awdiv *****************
  7443 ;; Defined at:
  7444 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\awdiv.c"
  7445 ;; Parameters:    Size  Location     Type
  7446 ;;  divisor         2    0[COMMON] int 
  7447 ;;  dividend        2    2[COMMON] int 
  7448 ;; Auto vars:     Size  Location     Type
  7449 ;;  quotient        2    6[COMMON] int 
  7450 ;;  sign            1    5[COMMON] unsigned char 
  7451 ;;  counter         1    4[COMMON] unsigned char 
  7452 ;; Return value:  Size  Location     Type
  7453 ;;                  2    0[COMMON] int 
  7454 ;; Registers used:
  7455 ;;		wreg, status,2, status,0
  7456 ;; Tracked objects:
  7457 ;;		On entry : B00/100
  7458 ;;		On exit  : B00/100
  7459 ;;		Unchanged: B00/0
  7460 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7461 ;;      Params:         4       0       0       0       0
  7462 ;;      Locals:         4       0       0       0       0
  7463 ;;      Temps:          0       0       0       0       0
  7464 ;;      Totals:         8       0       0       0       0
  7465 ;;Total ram usage:        8 bytes
  7466 ;; Hardware stack levels used:    1
  7467 ;; This function calls:
  7468 ;;		Nothing
  7469 ;; This function is called by:
  7470 ;;		_Adc_CallbackFn
  7471 ;; This function uses a non-reentrant model
  7472 ;;
  7473                           
  7474                           
  7475                           ;psect for function ___awdiv
  7476  0C3A                     ___awdiv:
  7477                           
  7478                           ;incstack = 0
  7479 ;; hardware stack exceeded
  7480                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  7481  0C3A  01F5               	clrf	___awdiv@sign
  7482  0C3B  1FF1               	btfss	___awdiv@divisor+1,7
  7483  0C3C  2C44               	goto	i1l3981
  7484  0C3D  09F0               	comf	___awdiv@divisor,f
  7485  0C3E  09F1               	comf	___awdiv@divisor+1,f
  7486  0C3F  0AF0               	incf	___awdiv@divisor,f
  7487  0C40  1903               	skipnz
  7488  0C41  0AF1               	incf	___awdiv@divisor+1,f
  7489  0C42  01F5               	clrf	___awdiv@sign
  7490  0C43  0AF5               	incf	___awdiv@sign,f
  7491  0C44                     i1l3981:
  7492  0C44  1FF3               	btfss	___awdiv@dividend+1,7
  7493  0C45  2C4D               	goto	i1l3987
  7494  0C46  09F2               	comf	___awdiv@dividend,f
  7495  0C47  09F3               	comf	___awdiv@dividend+1,f
  7496  0C48  0AF2               	incf	___awdiv@dividend,f
  7497  0C49  1903               	skipnz
  7498  0C4A  0AF3               	incf	___awdiv@dividend+1,f
  7499  0C4B  3001               	movlw	1
  7500  0C4C  06F5               	xorwf	___awdiv@sign,f
  7501  0C4D                     i1l3987:
  7502  0C4D  01F6               	clrf	___awdiv@quotient
  7503  0C4E  01F7               	clrf	___awdiv@quotient+1
  7504  0C4F  0870               	movf	___awdiv@divisor,w
  7505  0C50  0471               	iorwf	___awdiv@divisor+1,w
  7506  0C51  1903               	btfsc	3,2
  7507  0C52  2C72               	goto	i1l4009
  7508  0C53  01F4               	clrf	___awdiv@counter
  7509  0C54                     L29:
  7510  0C54  0AF4               	incf	___awdiv@counter,f
  7511  0C55  1BF1               	btfsc	___awdiv@divisor+1,7
  7512  0C56  2C5B               	goto	i1l3997
  7513  0C57  1003               	clrc
  7514  0C58  0DF0               	rlf	___awdiv@divisor,f
  7515  0C59  0DF1               	rlf	___awdiv@divisor+1,f
  7516  0C5A  2C54               	goto	L29
  7517  0C5B                     i1l3997:
  7518  0C5B  1003               	clrc
  7519  0C5C  0DF6               	rlf	___awdiv@quotient,f
  7520  0C5D  0DF7               	rlf	___awdiv@quotient+1,f
  7521  0C5E  0871               	movf	___awdiv@divisor+1,w
  7522  0C5F  0273               	subwf	___awdiv@dividend+1,w
  7523  0C60  1D03               	skipz
  7524  0C61  2C64               	goto	u327_25
  7525  0C62  0870               	movf	___awdiv@divisor,w
  7526  0C63  0272               	subwf	___awdiv@dividend,w
  7527  0C64                     u327_25:
  7528  0C64  1C03               	skipc
  7529  0C65  2C6E               	goto	L30
  7530  0C66  0870               	movf	___awdiv@divisor,w
  7531  0C67  02F2               	subwf	___awdiv@dividend,f
  7532  0C68  0871               	movf	___awdiv@divisor+1,w
  7533  0C69  1C03               	skipc
  7534  0C6A  03F3               	decf	___awdiv@dividend+1,f
  7535  0C6B  02F3               	subwf	___awdiv@dividend+1,f
  7536  0C6C  1476               	bsf	___awdiv@quotient,0
  7537  0C6D  1003               	clrc
  7538  0C6E                     L30:
  7539  0C6E  0CF1               	rrf	___awdiv@divisor+1,f
  7540  0C6F  0CF0               	rrf	___awdiv@divisor,f
  7541  0C70  0BF4               	decfsz	___awdiv@counter,f
  7542  0C71  2C5B               	goto	i1l3997
  7543  0C72                     i1l4009:
  7544  0C72  0875               	movf	___awdiv@sign,w
  7545  0C73  1903               	btfsc	3,2
  7546  0C74  2C7A               	goto	i1l4013
  7547  0C75  09F6               	comf	___awdiv@quotient,f
  7548  0C76  09F7               	comf	___awdiv@quotient+1,f
  7549  0C77  0AF6               	incf	___awdiv@quotient,f
  7550  0C78  1903               	skipnz
  7551  0C79  0AF7               	incf	___awdiv@quotient+1,f
  7552  0C7A                     i1l4013:
  7553  0C7A  0877               	movf	___awdiv@quotient+1,w
  7554  0C7B  00F1               	movwf	?___awdiv+1
  7555  0C7C  0876               	movf	___awdiv@quotient,w
  7556  0C7D  00F0               	movwf	?___awdiv
  7557  0C7E  0008               	return
  7558  0C7F                     __end_of___awdiv:
  7559                           
  7560                           	psect	text46
  7561  097E                     __ptext46:	
  7562 ;; *************** function _Interrupt_TimerCallbackFn *****************
  7563 ;; Defined at:
  7564 ;;		line 7 in file "MCAL/Gpt.c"
  7565 ;; Parameters:    Size  Location     Type
  7566 ;;		None
  7567 ;; Auto vars:     Size  Location     Type
  7568 ;;		None
  7569 ;; Return value:  Size  Location     Type
  7570 ;;                  1    wreg      void 
  7571 ;; Registers used:
  7572 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7573 ;; Tracked objects:
  7574 ;;		On entry : 300/0
  7575 ;;		On exit  : 0/0
  7576 ;;		Unchanged: 0/0
  7577 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7578 ;;      Params:         0       0       0       0       0
  7579 ;;      Locals:         0       0       0       0       0
  7580 ;;      Temps:          0       0       0       0       0
  7581 ;;      Totals:         0       0       0       0       0
  7582 ;;Total ram usage:        0 bytes
  7583 ;; Hardware stack levels used:    1
  7584 ;; Hardware stack levels required when called:    6
  7585 ;; This function calls:
  7586 ;;		Absolute function
  7587 ;;		_TickHandler
  7588 ;; This function is called by:
  7589 ;;		_Gpt_Init
  7590 ;;		_ISR
  7591 ;; This function uses a non-reentrant model
  7592 ;;
  7593                           
  7594                           
  7595                           ;psect for function _Interrupt_TimerCallbackFn
  7596  097E                     _Interrupt_TimerCallbackFn:
  7597                           
  7598                           ;MCAL/Gpt.c: 9:     TMR1=Gpt_ReloadValue;
  7599                           
  7600                           ;incstack = 0
  7601 ;; hardware stack exceeded
  7602                           ; Regs used in _Interrupt_TimerCallbackFn: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7603  097E  0859               	movf	_Gpt_ReloadValue+1,w
  7604  097F  008F               	movwf	15	;volatile
  7605  0980  0858               	movf	_Gpt_ReloadValue,w
  7606  0981  008E               	movwf	14	;volatile
  7607                           
  7608                           ;MCAL/Gpt.c: 10:     TMR1IF = 0;
  7609  0982  100C               	bcf	12,0	;volatile
  7610                           
  7611                           ;MCAL/Gpt.c: 11:     Gpt_ThisConfiguration_1->CallbackFn();
  7612  0983  0863               	movf	_Gpt_ThisConfiguration_1,w
  7613  0984  3E04               	addlw	4
  7614  0985  0084               	movwf	4
  7615  0986  1383               	bcf	3,7	;select IRP bank0
  7616  0987  0800               	movf	0,w
  7617  0988  120A  118A  2066   	fcall	i1fptable
  7618  098B  0008               	return
  7619  098C                     __end_of_Interrupt_TimerCallbackFn:
  7620                           
  7621                           	psect	text47
  7622  07F9                     __ptext47:	
  7623 ;; *************** function _Uart_TX_Callback *****************
  7624 ;; Defined at:
  7625 ;;		line 11 in file "MCAL/Uart.c"
  7626 ;; Parameters:    Size  Location     Type
  7627 ;;		None
  7628 ;; Auto vars:     Size  Location     Type
  7629 ;;		None
  7630 ;; Return value:  Size  Location     Type
  7631 ;;                  1    wreg      void 
  7632 ;; Registers used:
  7633 ;;		None
  7634 ;; Tracked objects:
  7635 ;;		On entry : 300/0
  7636 ;;		On exit  : 300/0
  7637 ;;		Unchanged: 300/0
  7638 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7639 ;;      Params:         0       0       0       0       0
  7640 ;;      Locals:         0       0       0       0       0
  7641 ;;      Temps:          0       0       0       0       0
  7642 ;;      Totals:         0       0       0       0       0
  7643 ;;Total ram usage:        0 bytes
  7644 ;; Hardware stack levels used:    1
  7645 ;; This function calls:
  7646 ;;		Nothing
  7647 ;; This function is called by:
  7648 ;;		_ISR
  7649 ;; This function uses a non-reentrant model
  7650 ;;
  7651                           
  7652                           
  7653                           ;psect for function _Uart_TX_Callback
  7654  07F9                     _Uart_TX_Callback:
  7655                           
  7656                           ;incstack = 0
  7657                           ; Regs used in _Uart_TX_Callback: []
  7658  07F9  0008               	return
  7659  07FA                     __end_of_Uart_TX_Callback:
  7660                           
  7661                           	psect	text48
  7662  0ADE                     __ptext48:	
  7663 ;; *************** function _TickHandler *****************
  7664 ;; Defined at:
  7665 ;;		line 298 in file "main.c"
  7666 ;; Parameters:    Size  Location     Type
  7667 ;;		None
  7668 ;; Auto vars:     Size  Location     Type
  7669 ;;		None
  7670 ;; Return value:  Size  Location     Type
  7671 ;;                  1    wreg      void 
  7672 ;; Registers used:
  7673 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7674 ;; Tracked objects:
  7675 ;;		On entry : B00/0
  7676 ;;		On exit  : 0/0
  7677 ;;		Unchanged: 0/0
  7678 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7679 ;;      Params:         0       0       0       0       0
  7680 ;;      Locals:         0       0       0       0       0
  7681 ;;      Temps:          0       0       0       0       0
  7682 ;;      Totals:         0       0       0       0       0
  7683 ;;Total ram usage:        0 bytes
  7684 ;; Hardware stack levels used:    1
  7685 ;; Hardware stack levels required when called:    5
  7686 ;; This function calls:
  7687 ;;		i1_Os2_scheduler
  7688 ;; This function is called by:
  7689 ;;		_Interrupt_TimerCallbackFn
  7690 ;; This function uses a non-reentrant model
  7691 ;;
  7692                           
  7693                           
  7694                           ;psect for function _TickHandler
  7695  0ADE                     _TickHandler:
  7696                           
  7697                           ;main.c: 300:     Os2_scheduler();
  7698                           
  7699                           ;incstack = 0
  7700 ;; hardware stack exceeded
  7701                           ; Regs used in _TickHandler: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7702  0ADE  22E0               	fcall	i1_Os2_scheduler
  7703  0ADF  0008               	return
  7704  0AE0                     __end_of_TickHandler:
  7705  0AE0                     __ptext49:	
  7706 ;; *************** function i1_Os2_scheduler *****************
  7707 ;; Defined at:
  7708 ;;		line 41 in file "OS/OS2.c"
  7709 ;; Parameters:    Size  Location     Type
  7710 ;;		None
  7711 ;; Auto vars:     Size  Location     Type
  7712 ;;		None
  7713 ;; Return value:  Size  Location     Type
  7714 ;;                  1    wreg      void 
  7715 ;; Registers used:
  7716 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7717 ;; Tracked objects:
  7718 ;;		On entry : B00/0
  7719 ;;		On exit  : 0/0
  7720 ;;		Unchanged: 0/0
  7721 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7722 ;;      Params:         0       0       0       0       0
  7723 ;;      Locals:         0       0       0       0       0
  7724 ;;      Temps:          0       0       0       0       0
  7725 ;;      Totals:         0       0       0       0       0
  7726 ;;Total ram usage:        0 bytes
  7727 ;; Hardware stack levels used:    1
  7728 ;; Hardware stack levels required when called:    4
  7729 ;; This function calls:
  7730 ;;		i1_task1
  7731 ;;		i1_task2
  7732 ;;		i1_task3
  7733 ;;		i1_task4
  7734 ;;		i1_task5
  7735 ;; This function is called by:
  7736 ;;		_TickHandler
  7737 ;; This function uses a non-reentrant model
  7738 ;;
  7739                           
  7740                           
  7741                           ;psect for function i1_Os2_scheduler
  7742  0AE0                     i1_Os2_scheduler:
  7743                           
  7744                           ;OS/OS2.c: 43:     TickCount += 1;
  7745                           
  7746                           ;incstack = 0
  7747 ;; hardware stack exceeded
  7748                           ; Regs used in i1_Os2_scheduler: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7749  0AE0  0ADC               	incf	_TickCount,f
  7750                           
  7751                           ;OS/OS2.c: 45:     if(TickCount<=States_EndTime[0])
  7752  0AE1  085C               	movf	_TickCount,w
  7753  0AE2  1683               	bsf	3,5	;RP0=1, select bank1
  7754  0AE3  0257               	subwf	_States_EndTime^(0+128),w
  7755  0AE4  1C03               	skipc
  7756  0AE5  2AEC               	goto	i1l4561
  7757                           
  7758                           ;OS/OS2.c: 46:     {;OS/OS2.c: 47:         TaskTable[0]();
  7759  0AE6  1283               	bcf	3,5	;RP0=0, select bank0
  7760  0AE7  0846               	movf	_TaskTable,w
  7761  0AE8  120A  118A  2066   	fcall	i1fptable
  7762                           
  7763                           ;OS/OS2.c: 48:     }
  7764  0AEB  0008               	return
  7765  0AEC                     i1l4561:
  7766  0AEC  1283               	bcf	3,5	;RP0=0, select bank0
  7767  0AED  085C               	movf	_TickCount,w
  7768  0AEE  1683               	bsf	3,5	;RP0=1, select bank1
  7769  0AEF  0258               	subwf	(_States_EndTime^(0+128)+1),w
  7770  0AF0  1C03               	skipc
  7771  0AF1  2AF8               	goto	i1l4565
  7772                           
  7773                           ;OS/OS2.c: 50:     {;OS/OS2.c: 51:         TaskTable[1]();
  7774  0AF2  1283               	bcf	3,5	;RP0=0, select bank0
  7775  0AF3  0847               	movf	low ((_TaskTable| 0+1)),w
  7776  0AF4  120A  118A  2066   	fcall	i1fptable
  7777                           
  7778                           ;OS/OS2.c: 52:     }
  7779  0AF7  0008               	return
  7780  0AF8                     i1l4565:
  7781  0AF8  1283               	bcf	3,5	;RP0=0, select bank0
  7782  0AF9  085C               	movf	_TickCount,w
  7783  0AFA  1683               	bsf	3,5	;RP0=1, select bank1
  7784  0AFB  0259               	subwf	(_States_EndTime^(0+128)+2),w
  7785  0AFC  1C03               	skipc
  7786  0AFD  2B04               	goto	i1l4569
  7787                           
  7788                           ;OS/OS2.c: 54:     {;OS/OS2.c: 55:         TaskTable[2]();
  7789  0AFE  1283               	bcf	3,5	;RP0=0, select bank0
  7790  0AFF  0848               	movf	low ((_TaskTable| 0+2)),w
  7791  0B00  120A  118A  2066   	fcall	i1fptable
  7792                           
  7793                           ;OS/OS2.c: 56:     }
  7794  0B03  0008               	return
  7795  0B04                     i1l4569:
  7796  0B04  1283               	bcf	3,5	;RP0=0, select bank0
  7797  0B05  085C               	movf	_TickCount,w
  7798  0B06  1683               	bsf	3,5	;RP0=1, select bank1
  7799  0B07  025A               	subwf	(_States_EndTime^(0+128)+3),w
  7800  0B08  1C03               	skipc
  7801  0B09  2B10               	goto	i1l4573
  7802                           
  7803                           ;OS/OS2.c: 58:     {;OS/OS2.c: 59:         TaskTable[3]();
  7804  0B0A  1283               	bcf	3,5	;RP0=0, select bank0
  7805  0B0B  0849               	movf	low ((_TaskTable| 0+3)),w
  7806  0B0C  120A  118A  2066   	fcall	i1fptable
  7807                           
  7808                           ;OS/OS2.c: 60:     }
  7809  0B0F  0008               	return
  7810  0B10                     i1l4573:
  7811  0B10  1283               	bcf	3,5	;RP0=0, select bank0
  7812  0B11  085C               	movf	_TickCount,w
  7813  0B12  1683               	bsf	3,5	;RP0=1, select bank1
  7814  0B13  025B               	subwf	(_States_EndTime^(0+128)+4),w
  7815  0B14  1C03               	skipc
  7816  0B15  2B1C               	goto	i1l4577
  7817                           
  7818                           ;OS/OS2.c: 62:     {;OS/OS2.c: 63:         TaskTable[4]();
  7819  0B16  1283               	bcf	3,5	;RP0=0, select bank0
  7820  0B17  084A               	movf	low ((_TaskTable| 0+4)),w
  7821  0B18  120A  118A  2066   	fcall	i1fptable
  7822                           
  7823                           ;OS/OS2.c: 64:     }
  7824  0B1B  0008               	return
  7825  0B1C                     i1l4577:
  7826                           
  7827                           ;OS/OS2.c: 66:     {;OS/OS2.c: 67:         TickCount = 0;
  7828  0B1C  1283               	bcf	3,5	;RP0=0, select bank0
  7829  0B1D  01DC               	clrf	_TickCount
  7830  0B1E  0008               	return
  7831  0B1F                     __end_ofi1_Os2_scheduler:
  7832                           
  7833                           	psect	text52
  7834  0C7F                     __ptext52:	
  7835 ;; *************** function i1_task2 *****************
  7836 ;; Defined at:
  7837 ;;		line 360 in file "main.c"
  7838 ;; Parameters:    Size  Location     Type
  7839 ;;		None
  7840 ;; Auto vars:     Size  Location     Type
  7841 ;;		None
  7842 ;; Return value:  Size  Location     Type
  7843 ;;                  1    wreg      void 
  7844 ;; Registers used:
  7845 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7846 ;; Tracked objects:
  7847 ;;		On entry : B00/0
  7848 ;;		On exit  : 300/0
  7849 ;;		Unchanged: 0/0
  7850 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7851 ;;      Params:         0       0       0       0       0
  7852 ;;      Locals:         0       0       0       0       0
  7853 ;;      Temps:          0       0       0       0       0
  7854 ;;      Totals:         0       0       0       0       0
  7855 ;;Total ram usage:        0 bytes
  7856 ;; Hardware stack levels used:    1
  7857 ;; Hardware stack levels required when called:    3
  7858 ;; This function calls:
  7859 ;;		i1_Eep_Read
  7860 ;; This function is called by:
  7861 ;;		i1_Os2_scheduler
  7862 ;;		_Os2_scheduler
  7863 ;; This function uses a non-reentrant model
  7864 ;;
  7865                           
  7866                           
  7867                           ;psect for function i1_task2
  7868  0C7F                     i1_task2:
  7869  0C7F                     i1l159:	
  7870                           ;incstack = 0
  7871 ;; hardware stack exceeded
  7872                           ; Regs used in i1_task2: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7873                           ;main.c: 362:     while(1)
  7874                           
  7875                           
  7876                           ;main.c: 363:     {;main.c: 364:         GIE=0;
  7877  0C7F  138B               	bcf	11,7	;volatile
  7878                           
  7879                           ;main.c: 365:         if(State == 1)
  7880  0C80  0B64               	decfsz	_State,w
  7881  0C81  2C92               	goto	i1l3773
  7882                           
  7883                           ;main.c: 366:         {;main.c: 367:             Eep_Read (Eeprom_Address,&SetTemp,1);
  7884  0C82  3066               	movlw	(low (_SetTemp| 0))& (0+255)
  7885  0C83  00F1               	movwf	i1Eep_Read@DataBufferPtr
  7886  0C84  01F2               	clrf	i1Eep_Read@Length
  7887  0C85  0AF2               	incf	i1Eep_Read@Length,f
  7888  0C86  0865               	movf	_Eeprom_Address,w
  7889  0C87  24A4  120A  158A   	fcall	i1_Eep_Read
  7890                           
  7891                           ;main.c: 368:             if(SetTemp == 0)
  7892  0C8A  1283               	bcf	3,5	;RP0=0, select bank0
  7893  0C8B  0866               	movf	_SetTemp,w
  7894  0C8C  1D03               	btfss	3,2
  7895  0C8D  2C90               	goto	i1l161
  7896                           
  7897                           ;main.c: 369:                 SetTemp = 60 ;
  7898  0C8E  303C               	movlw	60
  7899  0C8F  00E6               	movwf	_SetTemp
  7900  0C90                     i1l161:
  7901                           
  7902                           ;main.c: 370:             State = 2;
  7903  0C90  3002               	movlw	2
  7904  0C91  00E4               	movwf	_State
  7905  0C92                     i1l3773:
  7906                           
  7907                           ;main.c: 372:         GIE=1;
  7908  0C92  178B               	bsf	11,7	;volatile
  7909  0C93  2C7F               	goto	i1l159
  7910  0C94                     __end_ofi1_task2:
  7911  0C94                     __ptext65:	
  7912 ;; *************** function i1_I2c_ReadIB *****************
  7913 ;; Defined at:
  7914 ;;		line 95 in file "MCAL/I2c.c"
  7915 ;; Parameters:    Size  Location     Type
  7916 ;;  Channel         1    wreg     unsigned char 
  7917 ;;  DataBufferPt    1    0[COMMON] PTR unsigned char 
  7918 ;;		 -> Eep_Compare@x(1), SetTemp(1), 
  7919 ;; Auto vars:     Size  Location     Type
  7920 ;;  Channel         1  (no storage) unsigned char 
  7921 ;; Return value:  Size  Location     Type
  7922 ;;                  1    wreg      unsigned char 
  7923 ;; Registers used:
  7924 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7925 ;; Tracked objects:
  7926 ;;		On entry : 200/100
  7927 ;;		On exit  : B00/0
  7928 ;;		Unchanged: 0/0
  7929 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7930 ;;      Params:         1       0       0       0       0
  7931 ;;      Locals:         0       0       0       0       0
  7932 ;;      Temps:          0       0       0       0       0
  7933 ;;      Totals:         1       0       0       0       0
  7934 ;;Total ram usage:        1 bytes
  7935 ;; Hardware stack levels used:    1
  7936 ;; Hardware stack levels required when called:    1
  7937 ;; This function calls:
  7938 ;;		i1_I2C_Master_Wait
  7939 ;; This function is called by:
  7940 ;;		i1_Eep_Read
  7941 ;; This function uses a non-reentrant model
  7942 ;;
  7943                           
  7944                           
  7945                           ;psect for function i1_I2c_ReadIB
  7946  0C94                     i1_I2c_ReadIB:
  7947                           
  7948                           ;MCAL/I2c.c: 95: Std_ReturnType I2c_ReadIB ( I2c_ChannelType Channel, I2c_DataBufferType
      +                          * DataBufferPtr );MCAL/I2c.c: 96: {;MCAL/I2c.c: 114:     {;MCAL/I2c.c: 115:         I2C_
      +                          Master_Wait();
  7949                           
  7950                           ;incstack = 0
  7951 ;; hardware stack exceeded
  7952                           ; Regs used in i1_I2c_ReadIB: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7953  0C94  24EF  120A  158A   	fcall	i1_I2C_Master_Wait
  7954                           
  7955                           ;MCAL/I2c.c: 116:         (SSPCON2|=(1<<RCEN_BIT));
  7956  0C97  1591               	bsf	17,3	;volatile
  7957  0C98                     i1l326:	
  7958                           ;MCAL/I2c.c: 117:         while(!SSPIF);
  7959                           
  7960  0C98  1283               	bcf	3,5	;RP0=0, select bank0
  7961  0C99  1D8C               	btfss	12,3	;volatile
  7962  0C9A  2C98               	goto	i1l326
  7963                           
  7964                           ;MCAL/I2c.c: 118:         SSPIF = 0;
  7965  0C9B  118C               	bcf	12,3	;volatile
  7966                           
  7967                           ;MCAL/I2c.c: 119:         I2C_Master_Wait();
  7968  0C9C  24EF               	fcall	i1_I2C_Master_Wait
  7969                           
  7970                           ;MCAL/I2c.c: 120:         *DataBufferPtr = SSPBUF;
  7971  0C9D  0870               	movf	i1I2c_ReadIB@DataBufferPtr,w
  7972  0C9E  0084               	movwf	4
  7973  0C9F  1283               	bcf	3,5	;RP0=0, select bank0
  7974  0CA0  0813               	movf	19,w	;volatile
  7975  0CA1  1383               	bcf	3,7	;select IRP bank0
  7976  0CA2  0080               	movwf	0
  7977  0CA3  0008               	return
  7978  0CA4                     __end_ofi1_I2c_ReadIB:
  7979  0CA4                     __ptext62:	
  7980 ;; *************** function i1_Eep_Read *****************
  7981 ;; Defined at:
  7982 ;;		line 71 in file "EcuAL/Eeprom.c"
  7983 ;; Parameters:    Size  Location     Type
  7984 ;;  EepromAddres    1    wreg     unsigned char 
  7985 ;;  DataBufferPt    1    1[COMMON] PTR unsigned char 
  7986 ;;		 -> Eep_Compare@x(1), SetTemp(1), 
  7987 ;;  Length          1    2[COMMON] unsigned char 
  7988 ;; Auto vars:     Size  Location     Type
  7989 ;;  EepromAddres    1    7[COMMON] unsigned char 
  7990 ;;  i               2    5[COMMON] unsigned int 
  7991 ;; Return value:  Size  Location     Type
  7992 ;;                  1    wreg      unsigned char 
  7993 ;; Registers used:
  7994 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7995 ;; Tracked objects:
  7996 ;;		On entry : 300/0
  7997 ;;		On exit  : 300/100
  7998 ;;		Unchanged: 0/0
  7999 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8000 ;;      Params:         2       0       0       0       0
  8001 ;;      Locals:         3       0       0       0       0
  8002 ;;      Temps:          2       0       0       0       0
  8003 ;;      Totals:         7       0       0       0       0
  8004 ;;Total ram usage:        7 bytes
  8005 ;; Hardware stack levels used:    1
  8006 ;; Hardware stack levels required when called:    2
  8007 ;; This function calls:
  8008 ;;		i1_I2C_ACK
  8009 ;;		i1_I2C_Master_RepeatedStart
  8010 ;;		i1_I2C_Master_Start
  8011 ;;		i1_I2C_Master_Stop
  8012 ;;		i1_I2c_ReadIB
  8013 ;;		i1_I2c_WriteIB
  8014 ;;		i1_I2c_WriteSlaveAddress
  8015 ;; This function is called by:
  8016 ;;		i1_task2
  8017 ;; This function uses a non-reentrant model
  8018 ;;
  8019                           
  8020                           
  8021                           ;psect for function i1_Eep_Read
  8022  0CA4                     i1_Eep_Read:
  8023                           
  8024                           ;incstack = 0
  8025 ;; hardware stack exceeded
  8026                           ; Regs used in i1_Eep_Read: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8027                           ;i1Eep_Read@EepromAddress stored from wreg
  8028  0CA4  00F7               	movwf	i1Eep_Read@EepromAddress
  8029                           
  8030                           ;EcuAL/Eeprom.c: 71: Std_ReturnType Eep_Read (Eep_AddressType EepromAddress,uint8* DataB
      +                          ufferPtr, Eep_LengthType Length);EcuAL/Eeprom.c: 72: {;EcuAL/Eeprom.c: 96:     {;EcuAL/E
      +                          eprom.c: 97:         I2C_Master_Start();
  8031  0CA5  24FC  120A  158A   	fcall	i1_I2C_Master_Start
  8032  0CA8                     i1l641:	
  8033                           ;EcuAL/Eeprom.c: 99:         while(I2c_WriteSlaveAddress(0xA0))
  8034                           
  8035                           
  8036                           ;EcuAL/Eeprom.c: 99:         while(I2c_WriteSlaveAddress(0xA0))
  8037  0CA8  30A0               	movlw	160
  8038  0CA9  24E0  120A  158A   	fcall	i1_I2c_WriteSlaveAddress
  8039  0CAC  3A00               	xorlw	0
  8040  0CAD  1903               	btfsc	3,2
  8041  0CAE  2CB3               	goto	i1l3557
  8042                           
  8043                           ;EcuAL/Eeprom.c: 100:           I2C_Master_RepeatedStart();
  8044  0CAF  24DD  120A  158A   	fcall	i1_I2C_Master_RepeatedStart
  8045  0CB2  2CA8               	goto	i1l641
  8046  0CB3                     i1l3557:
  8047                           
  8048                           ;EcuAL/Eeprom.c: 101:         I2c_WriteIB(0,&EepromAddress);
  8049  0CB3  3077               	movlw	(low (i1Eep_Read@EepromAddress| 0))& (0+255)
  8050  0CB4  00F0               	movwf	i1I2c_WriteIB@DataBufferPtr
  8051  0CB5  3000               	movlw	0
  8052  0CB6  24FF  120A  158A   	fcall	i1_I2c_WriteIB
  8053                           
  8054                           ;EcuAL/Eeprom.c: 102:         I2C_Master_RepeatedStart();
  8055  0CB9  24DD  120A  158A   	fcall	i1_I2C_Master_RepeatedStart
  8056                           
  8057                           ;EcuAL/Eeprom.c: 103:         I2c_WriteSlaveAddress(0xA1);
  8058  0CBC  30A1               	movlw	161
  8059  0CBD  24E0  120A  158A   	fcall	i1_I2c_WriteSlaveAddress
  8060                           
  8061                           ;EcuAL/Eeprom.c: 104:         for(unsigned int i=0; i<Length; i++)
  8062  0CC0  01F5               	clrf	i1Eep_Read@i
  8063  0CC1  01F6               	clrf	i1Eep_Read@i+1
  8064  0CC2                     i1l3573:
  8065  0CC2  0872               	movf	i1Eep_Read@Length,w
  8066  0CC3  00F3               	movwf	??i1_Eep_Read
  8067  0CC4  01F4               	clrf	??i1_Eep_Read+1
  8068  0CC5  0874               	movf	??i1_Eep_Read+1,w
  8069  0CC6  0276               	subwf	i1Eep_Read@i+1,w
  8070  0CC7  1D03               	skipz
  8071  0CC8  2CCB               	goto	u259_25
  8072  0CC9  0873               	movf	??i1_Eep_Read,w
  8073  0CCA  0275               	subwf	i1Eep_Read@i,w
  8074  0CCB                     u259_25:
  8075  0CCB  1803               	btfsc	3,0
  8076  0CCC  2CDB               	goto	i1l3575
  8077                           
  8078                           ;EcuAL/Eeprom.c: 105:         {;EcuAL/Eeprom.c: 106:           I2c_ReadIB(0,DataBufferPt
      +                          r++);
  8079  0CCD  0871               	movf	i1Eep_Read@DataBufferPtr,w
  8080  0CCE  00F0               	movwf	i1I2c_ReadIB@DataBufferPtr
  8081  0CCF  3000               	movlw	0
  8082  0CD0  2494  120A  158A   	fcall	i1_I2c_ReadIB
  8083  0CD3  0AF1               	incf	i1Eep_Read@DataBufferPtr,f
  8084                           
  8085                           ;EcuAL/Eeprom.c: 107:           I2C_ACK();
  8086  0CD4  24F7  120A  158A   	fcall	i1_I2C_ACK
  8087                           
  8088                           ;EcuAL/Eeprom.c: 108:         }
  8089  0CD7  0AF5               	incf	i1Eep_Read@i,f
  8090  0CD8  1903               	skipnz
  8091  0CD9  0AF6               	incf	i1Eep_Read@i+1,f
  8092  0CDA  2CC2               	goto	i1l3573
  8093  0CDB                     i1l3575:
  8094                           
  8095                           ;EcuAL/Eeprom.c: 111:         I2C_Master_Stop();
  8096  0CDB  250C               	fcall	i1_I2C_Master_Stop
  8097  0CDC  0008               	return
  8098  0CDD                     __end_ofi1_Eep_Read:
  8099  0CDD                     __ptext68:	
  8100 ;; *************** function i1_I2C_Master_RepeatedStart *****************
  8101 ;; Defined at:
  8102 ;;		line 141 in file "MCAL/I2c.c"
  8103 ;; Parameters:    Size  Location     Type
  8104 ;;		None
  8105 ;; Auto vars:     Size  Location     Type
  8106 ;;		None
  8107 ;; Return value:  Size  Location     Type
  8108 ;;                  1    wreg      void 
  8109 ;; Registers used:
  8110 ;;		wreg, status,2, status,0, pclath, cstack
  8111 ;; Tracked objects:
  8112 ;;		On entry : 200/100
  8113 ;;		On exit  : 300/100
  8114 ;;		Unchanged: 0/0
  8115 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8116 ;;      Params:         0       0       0       0       0
  8117 ;;      Locals:         0       0       0       0       0
  8118 ;;      Temps:          0       0       0       0       0
  8119 ;;      Totals:         0       0       0       0       0
  8120 ;;Total ram usage:        0 bytes
  8121 ;; Hardware stack levels used:    1
  8122 ;; Hardware stack levels required when called:    1
  8123 ;; This function calls:
  8124 ;;		i1_I2C_Master_Wait
  8125 ;; This function is called by:
  8126 ;;		i1_Eep_Read
  8127 ;; This function uses a non-reentrant model
  8128 ;;
  8129                           
  8130                           
  8131                           ;psect for function i1_I2C_Master_RepeatedStart
  8132  0CDD                     i1_I2C_Master_RepeatedStart:
  8133                           
  8134                           ;MCAL/I2c.c: 143:   I2C_Master_Wait();
  8135                           
  8136                           ;incstack = 0
  8137 ;; hardware stack exceeded
  8138                           ; Regs used in i1_I2C_Master_RepeatedStart: [wreg+status,2+status,0+pclath+cstack]
  8139  0CDD  24EF               	fcall	i1_I2C_Master_Wait
  8140                           
  8141                           ;MCAL/I2c.c: 144:   (SSPCON2|=(1<<RSEN_BIT));
  8142  0CDE  1491               	bsf	17,1	;volatile
  8143  0CDF  0008               	return
  8144  0CE0                     __end_ofi1_I2C_Master_RepeatedStart:
  8145  0CE0                     __ptext63:	
  8146 ;; *************** function i1_I2c_WriteSlaveAddress *****************
  8147 ;; Defined at:
  8148 ;;		line 57 in file "MCAL/I2c.c"
  8149 ;; Parameters:    Size  Location     Type
  8150 ;;  data            1    wreg     unsigned char 
  8151 ;; Auto vars:     Size  Location     Type
  8152 ;;  data            1    0[COMMON] unsigned char 
  8153 ;; Return value:  Size  Location     Type
  8154 ;;                  1    wreg      unsigned char 
  8155 ;; Registers used:
  8156 ;;		wreg, status,2, status,0, pclath, cstack
  8157 ;; Tracked objects:
  8158 ;;		On entry : 300/100
  8159 ;;		On exit  : 300/100
  8160 ;;		Unchanged: 0/0
  8161 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8162 ;;      Params:         0       0       0       0       0
  8163 ;;      Locals:         1       0       0       0       0
  8164 ;;      Temps:          0       0       0       0       0
  8165 ;;      Totals:         1       0       0       0       0
  8166 ;;Total ram usage:        1 bytes
  8167 ;; Hardware stack levels used:    1
  8168 ;; Hardware stack levels required when called:    1
  8169 ;; This function calls:
  8170 ;;		i1_I2C_Master_Wait
  8171 ;; This function is called by:
  8172 ;;		i1_Eep_Read
  8173 ;; This function uses a non-reentrant model
  8174 ;;
  8175                           
  8176                           
  8177                           ;psect for function i1_I2c_WriteSlaveAddress
  8178  0CE0                     i1_I2c_WriteSlaveAddress:
  8179                           
  8180                           ;incstack = 0
  8181 ;; hardware stack exceeded
  8182                           ; Regs used in i1_I2c_WriteSlaveAddress: [wreg+status,2+status,0+pclath+cstack]
  8183                           ;i1I2c_WriteSlaveAddress@data stored from wreg
  8184  0CE0  00F0               	movwf	i1I2c_WriteSlaveAddress@data
  8185                           
  8186                           ;MCAL/I2c.c: 57: uint8_t I2c_WriteSlaveAddress(uint8_t data);MCAL/I2c.c: 58: {;MCAL/I2c.
      +                          c: 59:   I2C_Master_Wait();
  8187  0CE1  24EF  120A  158A   	fcall	i1_I2C_Master_Wait
  8188                           
  8189                           ;MCAL/I2c.c: 60:   SSPBUF = data;
  8190  0CE4  0870               	movf	i1I2c_WriteSlaveAddress@data,w
  8191  0CE5  1283               	bcf	3,5	;RP0=0, select bank0
  8192  0CE6  0093               	movwf	19	;volatile
  8193  0CE7                     i1l314:	
  8194                           ;MCAL/I2c.c: 61:   while(!SSPIF);
  8195                           
  8196  0CE7  1D8C               	btfss	12,3	;volatile
  8197  0CE8  2CE7               	goto	i1l314
  8198                           
  8199                           ;MCAL/I2c.c: 62:   SSPIF = 0;
  8200  0CE9  118C               	bcf	12,3	;volatile
  8201                           
  8202                           ;MCAL/I2c.c: 63:   return ACKSTAT;
  8203  0CEA  3000               	movlw	0
  8204  0CEB  1683               	bsf	3,5	;RP0=1, select bank1
  8205  0CEC  1B11               	btfsc	17,6	;volatile
  8206  0CED  3001               	movlw	1
  8207  0CEE  0008               	return
  8208  0CEF                     __end_ofi1_I2c_WriteSlaveAddress:
  8209  0CEF                     __ptext70:	
  8210 ;; *************** function i1_I2C_Master_Wait *****************
  8211 ;; Defined at:
  8212 ;;		line 132 in file "MCAL/I2c.c"
  8213 ;; Parameters:    Size  Location     Type
  8214 ;;		None
  8215 ;; Auto vars:     Size  Location     Type
  8216 ;;		None
  8217 ;; Return value:  Size  Location     Type
  8218 ;;                  1    wreg      void 
  8219 ;; Registers used:
  8220 ;;		wreg, status,2
  8221 ;; Tracked objects:
  8222 ;;		On entry : 200/100
  8223 ;;		On exit  : 300/100
  8224 ;;		Unchanged: 0/0
  8225 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8226 ;;      Params:         0       0       0       0       0
  8227 ;;      Locals:         0       0       0       0       0
  8228 ;;      Temps:          0       0       0       0       0
  8229 ;;      Totals:         0       0       0       0       0
  8230 ;;Total ram usage:        0 bytes
  8231 ;; Hardware stack levels used:    1
  8232 ;; This function calls:
  8233 ;;		Nothing
  8234 ;; This function is called by:
  8235 ;;		i1_I2c_WriteSlaveAddress
  8236 ;;		i1_I2c_WriteIB
  8237 ;;		i1_I2c_ReadIB
  8238 ;;		i1_I2C_Master_Start
  8239 ;;		i1_I2C_Master_RepeatedStart
  8240 ;;		i1_I2C_Master_Stop
  8241 ;;		i1_I2C_ACK
  8242 ;; This function uses a non-reentrant model
  8243 ;;
  8244                           
  8245                           
  8246                           ;psect for function i1_I2C_Master_Wait
  8247  0CEF                     i1_I2C_Master_Wait:
  8248  0CEF                     i1l335:	
  8249                           ;MCAL/I2c.c: 134:   while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  8250                           
  8251                           ;incstack = 0
  8252 ;; hardware stack exceeded
  8253                           ; Regs used in i1_I2C_Master_Wait: [wreg+status,2]
  8254                           
  8255  0CEF  1683               	bsf	3,5	;RP0=1, select bank1
  8256  0CF0  1914               	btfsc	20,2	;volatile
  8257  0CF1  2CEF               	goto	i1l335
  8258  0CF2  0811               	movf	17,w	;volatile
  8259  0CF3  391F               	andlw	31
  8260  0CF4  1903               	btfsc	3,2
  8261  0CF5  0008               	return
  8262  0CF6  2CEF               	goto	i1l335
  8263  0CF7                     __end_ofi1_I2C_Master_Wait:
  8264  0CF7                     __ptext69:	
  8265 ;; *************** function i1_I2C_ACK *****************
  8266 ;; Defined at:
  8267 ;;		line 152 in file "MCAL/I2c.c"
  8268 ;; Parameters:    Size  Location     Type
  8269 ;;		None
  8270 ;; Auto vars:     Size  Location     Type
  8271 ;;		None
  8272 ;; Return value:  Size  Location     Type
  8273 ;;                  1    wreg      void 
  8274 ;; Registers used:
  8275 ;;		wreg, status,2, status,0, pclath, cstack
  8276 ;; Tracked objects:
  8277 ;;		On entry : B00/0
  8278 ;;		On exit  : 300/100
  8279 ;;		Unchanged: 0/0
  8280 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8281 ;;      Params:         0       0       0       0       0
  8282 ;;      Locals:         0       0       0       0       0
  8283 ;;      Temps:          0       0       0       0       0
  8284 ;;      Totals:         0       0       0       0       0
  8285 ;;Total ram usage:        0 bytes
  8286 ;; Hardware stack levels used:    1
  8287 ;; Hardware stack levels required when called:    1
  8288 ;; This function calls:
  8289 ;;		i1_I2C_Master_Wait
  8290 ;; This function is called by:
  8291 ;;		i1_Eep_Read
  8292 ;; This function uses a non-reentrant model
  8293 ;;
  8294                           
  8295                           
  8296                           ;psect for function i1_I2C_ACK
  8297  0CF7                     i1_I2C_ACK:
  8298                           
  8299                           ;MCAL/I2c.c: 154:   (SSPCON2&=(~(1<<ACKDT_BIT)));
  8300                           
  8301                           ;incstack = 0
  8302 ;; hardware stack exceeded
  8303                           ; Regs used in i1_I2C_ACK: [wreg+status,2+status,0+pclath+cstack]
  8304  0CF7  1683               	bsf	3,5	;RP0=1, select bank1
  8305  0CF8  1291               	bcf	17,5	;volatile
  8306                           
  8307                           ;MCAL/I2c.c: 155:   I2C_Master_Wait();
  8308  0CF9  24EF               	fcall	i1_I2C_Master_Wait
  8309                           
  8310                           ;MCAL/I2c.c: 156:   (SSPCON2|=(1<<ACKEN_BIT));
  8311  0CFA  1611               	bsf	17,4	;volatile
  8312  0CFB  0008               	return
  8313  0CFC                     __end_ofi1_I2C_ACK:
  8314  0CFC                     __ptext67:	
  8315 ;; *************** function i1_I2C_Master_Start *****************
  8316 ;; Defined at:
  8317 ;;		line 136 in file "MCAL/I2c.c"
  8318 ;; Parameters:    Size  Location     Type
  8319 ;;		None
  8320 ;; Auto vars:     Size  Location     Type
  8321 ;;		None
  8322 ;; Return value:  Size  Location     Type
  8323 ;;                  1    wreg      void 
  8324 ;; Registers used:
  8325 ;;		wreg, status,2, status,0, pclath, cstack
  8326 ;; Tracked objects:
  8327 ;;		On entry : 300/0
  8328 ;;		On exit  : 300/100
  8329 ;;		Unchanged: 0/0
  8330 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8331 ;;      Params:         0       0       0       0       0
  8332 ;;      Locals:         0       0       0       0       0
  8333 ;;      Temps:          0       0       0       0       0
  8334 ;;      Totals:         0       0       0       0       0
  8335 ;;Total ram usage:        0 bytes
  8336 ;; Hardware stack levels used:    1
  8337 ;; Hardware stack levels required when called:    1
  8338 ;; This function calls:
  8339 ;;		i1_I2C_Master_Wait
  8340 ;; This function is called by:
  8341 ;;		i1_Eep_Read
  8342 ;; This function uses a non-reentrant model
  8343 ;;
  8344                           
  8345                           
  8346                           ;psect for function i1_I2C_Master_Start
  8347  0CFC                     i1_I2C_Master_Start:
  8348                           
  8349                           ;MCAL/I2c.c: 138:   I2C_Master_Wait();
  8350                           
  8351                           ;incstack = 0
  8352 ;; hardware stack exceeded
  8353                           ; Regs used in i1_I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  8354  0CFC  24EF               	fcall	i1_I2C_Master_Wait
  8355                           
  8356                           ;MCAL/I2c.c: 139:   (SSPCON2|=(1<<SEN_BIT));
  8357  0CFD  1411               	bsf	17,0	;volatile
  8358  0CFE  0008               	return
  8359  0CFF                     __end_ofi1_I2C_Master_Start:
  8360  0CFF                     __ptext64:	
  8361 ;; *************** function i1_I2c_WriteIB *****************
  8362 ;; Defined at:
  8363 ;;		line 66 in file "MCAL/I2c.c"
  8364 ;; Parameters:    Size  Location     Type
  8365 ;;  Channel         1    wreg     unsigned char 
  8366 ;;  DataBufferPt    1    0[COMMON] PTR unsigned char 
  8367 ;;		 -> i1Eep_Read@EepromAddress(1), Eep_Erase@x(1), Eep_Read@EepromAddress(1), Eep_Write@EepromAddress(1), 
  8368 ;; Auto vars:     Size  Location     Type
  8369 ;;  Channel         1  (no storage) unsigned char 
  8370 ;; Return value:  Size  Location     Type
  8371 ;;                  1    wreg      unsigned char 
  8372 ;; Registers used:
  8373 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8374 ;; Tracked objects:
  8375 ;;		On entry : 300/100
  8376 ;;		On exit  : 300/0
  8377 ;;		Unchanged: 0/0
  8378 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8379 ;;      Params:         1       0       0       0       0
  8380 ;;      Locals:         0       0       0       0       0
  8381 ;;      Temps:          0       0       0       0       0
  8382 ;;      Totals:         1       0       0       0       0
  8383 ;;Total ram usage:        1 bytes
  8384 ;; Hardware stack levels used:    1
  8385 ;; Hardware stack levels required when called:    1
  8386 ;; This function calls:
  8387 ;;		i1_I2C_Master_Wait
  8388 ;; This function is called by:
  8389 ;;		i1_Eep_Read
  8390 ;; This function uses a non-reentrant model
  8391 ;;
  8392                           
  8393                           
  8394                           ;psect for function i1_I2c_WriteIB
  8395  0CFF                     i1_I2c_WriteIB:
  8396                           
  8397                           ;MCAL/I2c.c: 66: Std_ReturnType I2c_WriteIB(I2c_ChannelType Channel, I2c_DataBufferType*
      +                           DataBufferPtr);MCAL/I2c.c: 67: {;MCAL/I2c.c: 85:     {;MCAL/I2c.c: 86:         I2C_Mast
      +                          er_Wait();
  8398                           
  8399                           ;incstack = 0
  8400 ;; hardware stack exceeded
  8401                           ; Regs used in i1_I2c_WriteIB: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8402  0CFF  24EF  120A  158A   	fcall	i1_I2C_Master_Wait
  8403                           
  8404                           ;MCAL/I2c.c: 87:         SSPBUF = *DataBufferPtr;
  8405  0D02  0870               	movf	i1I2c_WriteIB@DataBufferPtr,w
  8406  0D03  0084               	movwf	4
  8407  0D04  1383               	bcf	3,7	;select IRP bank0
  8408  0D05  0800               	movf	0,w
  8409  0D06  1283               	bcf	3,5	;RP0=0, select bank0
  8410  0D07  0093               	movwf	19	;volatile
  8411  0D08                     i1l320:	
  8412                           ;MCAL/I2c.c: 88:         while(!SSPIF);
  8413                           
  8414  0D08  1D8C               	btfss	12,3	;volatile
  8415  0D09  2D08               	goto	i1l320
  8416                           
  8417                           ;MCAL/I2c.c: 89:         SSPIF = 0;
  8418  0D0A  118C               	bcf	12,3	;volatile
  8419                           
  8420                           ;MCAL/I2c.c: 90:         return ACKSTAT;;	Return value of i1_I2c_WriteIB is never used
  8421  0D0B  0008               	return
  8422  0D0C                     __end_ofi1_I2c_WriteIB:
  8423  0D0C                     __ptext66:	
  8424 ;; *************** function i1_I2C_Master_Stop *****************
  8425 ;; Defined at:
  8426 ;;		line 146 in file "MCAL/I2c.c"
  8427 ;; Parameters:    Size  Location     Type
  8428 ;;		None
  8429 ;; Auto vars:     Size  Location     Type
  8430 ;;		None
  8431 ;; Return value:  Size  Location     Type
  8432 ;;                  1    wreg      void 
  8433 ;; Registers used:
  8434 ;;		wreg, status,2, status,0, pclath, cstack
  8435 ;; Tracked objects:
  8436 ;;		On entry : 300/100
  8437 ;;		On exit  : 300/100
  8438 ;;		Unchanged: 0/0
  8439 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8440 ;;      Params:         0       0       0       0       0
  8441 ;;      Locals:         0       0       0       0       0
  8442 ;;      Temps:          0       0       0       0       0
  8443 ;;      Totals:         0       0       0       0       0
  8444 ;;Total ram usage:        0 bytes
  8445 ;; Hardware stack levels used:    1
  8446 ;; Hardware stack levels required when called:    1
  8447 ;; This function calls:
  8448 ;;		i1_I2C_Master_Wait
  8449 ;; This function is called by:
  8450 ;;		i1_Eep_Read
  8451 ;; This function uses a non-reentrant model
  8452 ;;
  8453                           
  8454                           
  8455                           ;psect for function i1_I2C_Master_Stop
  8456  0D0C                     i1_I2C_Master_Stop:
  8457                           
  8458                           ;MCAL/I2c.c: 148:   I2C_Master_Wait();
  8459                           
  8460                           ;incstack = 0
  8461 ;; hardware stack exceeded
  8462                           ; Regs used in i1_I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  8463  0D0C  24EF               	fcall	i1_I2C_Master_Wait
  8464                           
  8465                           ;MCAL/I2c.c: 149:   (SSPCON2|=(1<<PEN_BIT));
  8466  0D0D  1511               	bsf	17,2	;volatile
  8467  0D0E  0008               	return
  8468  0D0F                     __end_ofi1_I2C_Master_Stop:
  8469                           
  8470                           	psect	text53
  8471  0650                     __ptext53:	
  8472 ;; *************** function i1_task1 *****************
  8473 ;; Defined at:
  8474 ;;		line 340 in file "main.c"
  8475 ;; Parameters:    Size  Location     Type
  8476 ;;		None
  8477 ;; Auto vars:     Size  Location     Type
  8478 ;;		None
  8479 ;; Return value:  Size  Location     Type
  8480 ;;                  1    wreg      void 
  8481 ;; Registers used:
  8482 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8483 ;; Tracked objects:
  8484 ;;		On entry : B00/0
  8485 ;;		On exit  : 0/0
  8486 ;;		Unchanged: 0/0
  8487 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8488 ;;      Params:         0       0       0       0       0
  8489 ;;      Locals:         0       0       0       0       0
  8490 ;;      Temps:          0       0       0       0       0
  8491 ;;      Totals:         0       0       0       0       0
  8492 ;;Total ram usage:        0 bytes
  8493 ;; Hardware stack levels used:    1
  8494 ;; Hardware stack levels required when called:    1
  8495 ;; This function calls:
  8496 ;;		i1_Dio_ReadChannel
  8497 ;; This function is called by:
  8498 ;;		i1_Os2_scheduler
  8499 ;;		_Os2_scheduler
  8500 ;; This function uses a non-reentrant model
  8501 ;;
  8502                           
  8503                           
  8504                           ;psect for function i1_task1
  8505  0650                     i1_task1:
  8506  0650                     i1l148:	
  8507                           ;incstack = 0
  8508 ;; hardware stack exceeded
  8509                           ; Regs used in i1_task1: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8510                           ;main.c: 342:     while(1)
  8511                           
  8512                           
  8513                           ;main.c: 343:     {;main.c: 344:        GIE=0;
  8514  0650  138B               	bcf	11,7	;volatile
  8515                           
  8516                           ;main.c: 345:        if(State == 0)
  8517  0651  1283               	bcf	3,5	;RP0=0, select bank0
  8518  0652  1303               	bcf	3,6	;RP1=0, select bank0
  8519  0653  0864               	movf	_State,w
  8520  0654  1D03               	btfss	3,2
  8521  0655  2E68               	goto	i1l149
  8522                           
  8523                           ;main.c: 346:        {;main.c: 347:            if(!Dio_ReadChannel(ONOFF_BUTTON_CHANNEL)
      +                          )
  8524  0656  3001               	movlw	1
  8525  0657  26D3  120A  118A   	fcall	i1_Dio_ReadChannel
  8526  065A  3A00               	xorlw	0
  8527  065B  1D03               	skipz
  8528  065C  2E68               	goto	i1l149
  8529  065D                     i1l3763:
  8530  065D  3001               	movlw	1
  8531  065E  26D3  120A  118A   	fcall	i1_Dio_ReadChannel
  8532  0661  3A00               	xorlw	0
  8533  0662  1903               	skipnz
  8534  0663  2E5D               	goto	i1l3763
  8535                           
  8536                           ;main.c: 351:                 flags.OnOffStateIndicator = 1;
  8537  0664  1283               	bcf	3,5	;RP0=0, select bank0
  8538  0665  1303               	bcf	3,6	;RP1=0, select bank0
  8539  0666  01E4               	clrf	_State
  8540  0667  0AE4               	incf	_State,f
  8541  0668                     i1l149:	
  8542                           ;main.c: 353:         }
  8543                           
  8544                           
  8545                           ;main.c: 355:        GIE=1;
  8546  0668  178B               	bsf	11,7	;volatile
  8547  0669  1283               	bcf	3,5	;RP0=0, select bank0
  8548  066A  1303               	bcf	3,6	;RP1=0, select bank0
  8549  066B  2E50               	goto	i1l148
  8550  066C                     __end_ofi1_task1:
  8551  066C                     __ptext51:	
  8552 ;; *************** function i1_task3 *****************
  8553 ;; Defined at:
  8554 ;;		line 377 in file "main.c"
  8555 ;; Parameters:    Size  Location     Type
  8556 ;;		None
  8557 ;; Auto vars:     Size  Location     Type
  8558 ;;		None
  8559 ;; Return value:  Size  Location     Type
  8560 ;;                  1    wreg      void 
  8561 ;; Registers used:
  8562 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8563 ;; Tracked objects:
  8564 ;;		On entry : B00/0
  8565 ;;		On exit  : 0/0
  8566 ;;		Unchanged: 0/0
  8567 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8568 ;;      Params:         0       0       0       0       0
  8569 ;;      Locals:         0       0       0       0       0
  8570 ;;      Temps:          0       0       0       0       0
  8571 ;;      Totals:         0       0       0       0       0
  8572 ;;Total ram usage:        0 bytes
  8573 ;; Hardware stack levels used:    1
  8574 ;; Hardware stack levels required when called:    1
  8575 ;; This function calls:
  8576 ;;		i1_Dio_ReadChannel
  8577 ;; This function is called by:
  8578 ;;		i1_Os2_scheduler
  8579 ;;		_Os2_scheduler
  8580 ;; This function uses a non-reentrant model
  8581 ;;
  8582                           
  8583                           
  8584                           ;psect for function i1_task3
  8585  066C                     i1_task3:
  8586  066C                     i1l167:	
  8587                           ;incstack = 0
  8588 ;; hardware stack exceeded
  8589                           ; Regs used in i1_task3: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8590                           ;main.c: 379:     while(1)
  8591                           
  8592                           
  8593                           ;main.c: 380:     {;main.c: 381:        GIE=0;
  8594  066C  138B               	bcf	11,7	;volatile
  8595                           
  8596                           ;main.c: 382:        if(State == 2)
  8597  066D  3002               	movlw	2
  8598  066E  1283               	bcf	3,5	;RP0=0, select bank0
  8599  066F  1303               	bcf	3,6	;RP1=0, select bank0
  8600  0670  0664               	xorwf	_State,w
  8601  0671  1D03               	btfss	3,2
  8602  0672  2E93               	goto	i1l3787
  8603                           
  8604                           ;main.c: 383:        {;main.c: 384:             if(!Dio_ReadChannel(DOWN_BUTTON_CHANNEL)
      +                           || !Dio_ReadChannel(UP_BUTTON_CHANNEL))
  8605  0673  3000               	movlw	0
  8606  0674  26D3  120A  118A   	fcall	i1_Dio_ReadChannel
  8607  0677  3A00               	xorlw	0
  8608  0678  1903               	skipnz
  8609  0679  2E81               	goto	i1l3781
  8610  067A  3002               	movlw	2
  8611  067B  26D3  120A  118A   	fcall	i1_Dio_ReadChannel
  8612  067E  3A00               	xorlw	0
  8613  067F  1D03               	skipz
  8614  0680  2E93               	goto	i1l3787
  8615  0681                     i1l3781:
  8616  0681  3000               	movlw	0
  8617  0682  26D3  120A  118A   	fcall	i1_Dio_ReadChannel
  8618  0685  3A00               	xorlw	0
  8619  0686  1903               	skipnz
  8620  0687  2E81               	goto	i1l3781
  8621  0688  3002               	movlw	2
  8622  0689  26D3  120A  118A   	fcall	i1_Dio_ReadChannel
  8623  068C  3A00               	xorlw	0
  8624  068D  1903               	skipnz
  8625  068E  2E81               	goto	i1l3781
  8626                           
  8627                           ;main.c: 387:                 State = 3;
  8628  068F  3003               	movlw	3
  8629  0690  1283               	bcf	3,5	;RP0=0, select bank0
  8630  0691  1303               	bcf	3,6	;RP1=0, select bank0
  8631  0692  00E4               	movwf	_State
  8632  0693                     i1l3787:
  8633                           
  8634                           ;main.c: 390:        GIE=1;
  8635  0693  178B               	bsf	11,7	;volatile
  8636  0694  1283               	bcf	3,5	;RP0=0, select bank0
  8637  0695  1303               	bcf	3,6	;RP1=0, select bank0
  8638  0696  2E6C               	goto	i1l167
  8639  0697                     __end_ofi1_task3:
  8640  0697                     __ptext50:	
  8641 ;; *************** function i1_task4 *****************
  8642 ;; Defined at:
  8643 ;;		line 395 in file "main.c"
  8644 ;; Parameters:    Size  Location     Type
  8645 ;;		None
  8646 ;; Auto vars:     Size  Location     Type
  8647 ;;		None
  8648 ;; Return value:  Size  Location     Type
  8649 ;;                  1    wreg      void 
  8650 ;; Registers used:
  8651 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8652 ;; Tracked objects:
  8653 ;;		On entry : B00/0
  8654 ;;		On exit  : 0/0
  8655 ;;		Unchanged: 0/0
  8656 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8657 ;;      Params:         0       0       0       0       0
  8658 ;;      Locals:         0       0       0       0       0
  8659 ;;      Temps:          0       0       0       0       0
  8660 ;;      Totals:         0       0       0       0       0
  8661 ;;Total ram usage:        0 bytes
  8662 ;; Hardware stack levels used:    1
  8663 ;; Hardware stack levels required when called:    1
  8664 ;; This function calls:
  8665 ;;		i1_Dio_ReadChannel
  8666 ;; This function is called by:
  8667 ;;		i1_Os2_scheduler
  8668 ;;		_Os2_scheduler
  8669 ;; This function uses a non-reentrant model
  8670 ;;
  8671                           
  8672                           
  8673                           ;psect for function i1_task4
  8674  0697                     i1_task4:
  8675  0697                     i1l180:	
  8676                           ;incstack = 0
  8677 ;; hardware stack exceeded
  8678                           ; Regs used in i1_task4: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8679                           ;main.c: 397:     while(1)
  8680                           
  8681                           
  8682                           ;main.c: 398:     {;main.c: 399:        GIE=0;
  8683  0697  138B               	bcf	11,7	;volatile
  8684                           
  8685                           ;main.c: 400:        if(State == 3)
  8686  0698  3003               	movlw	3
  8687  0699  1283               	bcf	3,5	;RP0=0, select bank0
  8688  069A  1303               	bcf	3,6	;RP1=0, select bank0
  8689  069B  0664               	xorwf	_State,w
  8690  069C  1D03               	btfss	3,2
  8691  069D  2ECF               	goto	i1l3811
  8692                           
  8693                           ;main.c: 401:        {;main.c: 402:            if(!Dio_ReadChannel(DOWN_BUTTON_CHANNEL) 
      +                          && SetTemp>=40)
  8694  069E  3000               	movlw	0
  8695  069F  26D3  120A  118A   	fcall	i1_Dio_ReadChannel
  8696  06A2  3A00               	xorlw	0
  8697  06A3  1D03               	skipz
  8698  06A4  2EB7               	goto	i1l3801
  8699  06A5  3028               	movlw	40
  8700  06A6  1283               	bcf	3,5	;RP0=0, select bank0
  8701  06A7  1303               	bcf	3,6	;RP1=0, select bank0
  8702  06A8  0266               	subwf	_SetTemp,w
  8703  06A9  1C03               	skipc
  8704  06AA  2EB7               	goto	i1l3801
  8705  06AB                     i1l3797:
  8706  06AB  3000               	movlw	0
  8707  06AC  26D3  120A  118A   	fcall	i1_Dio_ReadChannel
  8708  06AF  3A00               	xorlw	0
  8709  06B0  1903               	skipnz
  8710  06B1  2EAB               	goto	i1l3797
  8711                           
  8712                           ;main.c: 407:                     flags.TempChangedFlag=1;
  8713  06B2  3005               	movlw	5
  8714  06B3  1283               	bcf	3,5	;RP0=0, select bank0
  8715  06B4  1303               	bcf	3,6	;RP1=0, select bank0
  8716  06B5  02E6               	subwf	_SetTemp,f
  8717                           
  8718                           ;main.c: 408:            }
  8719  06B6  2ECF               	goto	i1l3811
  8720  06B7                     i1l3801:
  8721  06B7  3002               	movlw	2
  8722  06B8  26D3  120A  118A   	fcall	i1_Dio_ReadChannel
  8723  06BB  3A00               	xorlw	0
  8724  06BC  1D03               	skipz
  8725  06BD  2ECF               	goto	i1l3811
  8726  06BE  3047               	movlw	71
  8727  06BF  1283               	bcf	3,5	;RP0=0, select bank0
  8728  06C0  1303               	bcf	3,6	;RP1=0, select bank0
  8729  06C1  0266               	subwf	_SetTemp,w
  8730  06C2  1803               	skipnc
  8731  06C3  2ECF               	goto	i1l3811
  8732  06C4                     i1l3807:
  8733  06C4  3002               	movlw	2
  8734  06C5  26D3  120A  118A   	fcall	i1_Dio_ReadChannel
  8735  06C8  3A00               	xorlw	0
  8736  06C9  1903               	skipnz
  8737  06CA  2EC4               	goto	i1l3807
  8738                           
  8739                           ;main.c: 414:                     flags.TempChangedFlag=1;
  8740  06CB  3005               	movlw	5
  8741  06CC  1283               	bcf	3,5	;RP0=0, select bank0
  8742  06CD  1303               	bcf	3,6	;RP1=0, select bank0
  8743  06CE  07E6               	addwf	_SetTemp,f
  8744  06CF                     i1l3811:
  8745                           
  8746                           ;main.c: 417:        GIE=1;
  8747  06CF  178B               	bsf	11,7	;volatile
  8748  06D0  1283               	bcf	3,5	;RP0=0, select bank0
  8749  06D1  1303               	bcf	3,6	;RP1=0, select bank0
  8750  06D2  2E97               	goto	i1l180
  8751  06D3                     __end_ofi1_task4:
  8752  06D3                     __ptext71:	
  8753 ;; *************** function i1_Dio_ReadChannel *****************
  8754 ;; Defined at:
  8755 ;;		line 60 in file "MCAL/Dio.c"
  8756 ;; Parameters:    Size  Location     Type
  8757 ;;  ChannelId       1    wreg     unsigned char 
  8758 ;; Auto vars:     Size  Location     Type
  8759 ;;  ChannelId       1    5[COMMON] unsigned char 
  8760 ;;  Pin_Ptr         2    2[COMMON] PTR volatile unsigned ch
  8761 ;;		 -> RAM(512), NULL(0), 
  8762 ;;  output          1    4[COMMON] enum E1176
  8763 ;;  x               1    1[COMMON] unsigned char 
  8764 ;; Return value:  Size  Location     Type
  8765 ;;                  1    wreg      enum E903
  8766 ;; Registers used:
  8767 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  8768 ;; Tracked objects:
  8769 ;;		On entry : 0/0
  8770 ;;		On exit  : 0/0
  8771 ;;		Unchanged: 0/0
  8772 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8773 ;;      Params:         0       0       0       0       0
  8774 ;;      Locals:         5       0       0       0       0
  8775 ;;      Temps:          1       0       0       0       0
  8776 ;;      Totals:         6       0       0       0       0
  8777 ;;Total ram usage:        6 bytes
  8778 ;; Hardware stack levels used:    1
  8779 ;; This function calls:
  8780 ;;		Nothing
  8781 ;; This function is called by:
  8782 ;;		i1_task1
  8783 ;;		i1_task3
  8784 ;;		i1_task4
  8785 ;; This function uses a non-reentrant model
  8786 ;;
  8787                           
  8788                           
  8789                           ;psect for function i1_Dio_ReadChannel
  8790  06D3                     i1_Dio_ReadChannel:
  8791                           
  8792                           ;incstack = 0
  8793 ;; hardware stack exceeded
  8794                           ; Regs used in i1_Dio_ReadChannel: [wreg-fsr0h+status,2+status,0]
  8795                           ;i1Dio_ReadChannel@ChannelId stored from wreg
  8796  06D3  00F5               	movwf	i1Dio_ReadChannel@ChannelId
  8797                           
  8798                           ;MCAL/Dio.c: 74:         Dio_LevelType output = LOW;
  8799  06D4  01F4               	clrf	i1Dio_ReadChannel@output
  8800                           
  8801                           ;MCAL/Dio.c: 75:         Pin_Ptr = &(*((volatile uint8*)(((uint8)0x005)+((uint8)Dio_Conf
      +                          igGroupChannel.Channels[ChannelId].Port))));
  8802  06D5  1003               	clrc
  8803  06D6  0D75               	rlf	i1Dio_ReadChannel@ChannelId,w
  8804  06D7  3E90               	addlw	(low (_Dio_ConfigGroupChannel| (0+256)))& (0+255)
  8805  06D8  0084               	movwf	4
  8806  06D9  1783               	bsf	3,7	;select IRP bank3
  8807  06DA  0800               	movf	0,w
  8808  06DB  00F2               	movwf	i1Dio_ReadChannel@Pin_Ptr
  8809  06DC  3005               	movlw	5
  8810  06DD  01F3               	clrf	i1Dio_ReadChannel@Pin_Ptr+1
  8811  06DE  07F2               	addwf	i1Dio_ReadChannel@Pin_Ptr,f
  8812  06DF  1803               	skipnc
  8813  06E0  0AF3               	incf	i1Dio_ReadChannel@Pin_Ptr+1,f
  8814                           
  8815                           ;MCAL/Dio.c: 76:         uint8_t x = Dio_ConfigGroupChannel.Channels[ChannelId].Channel;
  8816  06E1  1003               	clrc
  8817  06E2  0D75               	rlf	i1Dio_ReadChannel@ChannelId,w
  8818  06E3  3E91               	addlw	(low ((_Dio_ConfigGroupChannel| (0+256)+1)))& (0+255)
  8819  06E4  0084               	movwf	4
  8820  06E5  0800               	movf	0,w
  8821  06E6  00F1               	movwf	i1Dio_ReadChannel@x
  8822                           
  8823                           ;MCAL/Dio.c: 77:         if (( *Pin_Ptr & (1<<x) ))
  8824  06E7  0872               	movf	i1Dio_ReadChannel@Pin_Ptr,w
  8825  06E8  0084               	movwf	4
  8826  06E9  1783               	bsf	3,7
  8827  06EA  1C73               	btfss	i1Dio_ReadChannel@Pin_Ptr+1,0
  8828  06EB  1383               	bcf	3,7
  8829  06EC  3001               	movlw	1
  8830  06ED  00F0               	movwf	??i1_Dio_ReadChannel
  8831  06EE  0A71               	incf	i1Dio_ReadChannel@x,w
  8832  06EF  2EF2               	goto	u253_24
  8833  06F0                     u253_25:
  8834  06F0  1003               	clrc
  8835  06F1  0DF0               	rlf	??i1_Dio_ReadChannel,f
  8836  06F2                     u253_24:
  8837  06F2  3EFF               	addlw	-1
  8838  06F3  1D03               	skipz
  8839  06F4  2EF0               	goto	u253_25
  8840  06F5  0870               	movf	??i1_Dio_ReadChannel,w
  8841  06F6  0500               	andwf	0,w
  8842  06F7  1903               	btfsc	3,2
  8843  06F8  2EFC               	goto	i1l3505
  8844                           
  8845                           ;MCAL/Dio.c: 78:             output = HIGH;
  8846  06F9  01F4               	clrf	i1Dio_ReadChannel@output
  8847  06FA  0AF4               	incf	i1Dio_ReadChannel@output,f
  8848  06FB  2EFD               	goto	i1l3507
  8849  06FC                     i1l3505:
  8850                           
  8851                           ;MCAL/Dio.c: 80:             output = LOW;
  8852  06FC  01F4               	clrf	i1Dio_ReadChannel@output
  8853  06FD                     i1l3507:
  8854                           
  8855                           ;MCAL/Dio.c: 81:         return output;
  8856  06FD  0874               	movf	i1Dio_ReadChannel@output,w
  8857  06FE  0008               	return
  8858  06FF                     __end_ofi1_Dio_ReadChannel:
  8859                           
  8860                           	psect	text54
  8861  0E3E                     __ptext54:	
  8862 ;; *************** function i1_task5 *****************
  8863 ;; Defined at:
  8864 ;;		line 420 in file "main.c"
  8865 ;; Parameters:    Size  Location     Type
  8866 ;;		None
  8867 ;; Auto vars:     Size  Location     Type
  8868 ;;		None
  8869 ;; Return value:  Size  Location     Type
  8870 ;;                  1    wreg      void 
  8871 ;; Registers used:
  8872 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8873 ;; Tracked objects:
  8874 ;;		On entry : B00/0
  8875 ;;		On exit  : 0/0
  8876 ;;		Unchanged: 0/0
  8877 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8878 ;;      Params:         0       0       0       0       0
  8879 ;;      Locals:         0       0       0       0       0
  8880 ;;      Temps:          0       0       0       0       0
  8881 ;;      Totals:         0       0       0       0       0
  8882 ;;Total ram usage:        0 bytes
  8883 ;; Hardware stack levels used:    1
  8884 ;; Hardware stack levels required when called:    2
  8885 ;; This function calls:
  8886 ;;		i1_Disp_DisplayNb
  8887 ;; This function is called by:
  8888 ;;		i1_Os2_scheduler
  8889 ;;		_Os2_scheduler
  8890 ;; This function uses a non-reentrant model
  8891 ;;
  8892                           
  8893                           
  8894                           ;psect for function i1_task5
  8895  0E3E                     i1_task5:
  8896  0E3E                     i1l196:	
  8897                           ;incstack = 0
  8898 ;; hardware stack exceeded
  8899                           ; Regs used in i1_task5: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8900                           ;main.c: 422:     while(1)
  8901                           
  8902                           
  8903                           ;main.c: 423:     {;main.c: 424:        GIE=0;
  8904  0E3E  138B               	bcf	11,7	;volatile
  8905                           
  8906                           ;main.c: 425:        if(State == 3)
  8907  0E3F  3003               	movlw	3
  8908  0E40  1283               	bcf	3,5	;RP0=0, select bank0
  8909  0E41  1303               	bcf	3,6	;RP1=0, select bank0
  8910  0E42  0664               	xorwf	_State,w
  8911  0E43  1D03               	btfss	3,2
  8912  0E44  2E4B               	goto	i1l3817
  8913                           
  8914                           ;main.c: 426:             Disp_DisplayNb(SetTemp,BLINKING);
  8915  0E45  01FC               	clrf	i1Disp_DisplayNb@Mode
  8916  0E46  0AFC               	incf	i1Disp_DisplayNb@Mode,f
  8917  0E47  0866               	movf	_SetTemp,w
  8918  0E48  264F  120A  158A   	fcall	i1_Disp_DisplayNb
  8919  0E4B                     i1l3817:
  8920                           
  8921                           ;main.c: 427:        GIE=1;
  8922  0E4B  178B               	bsf	11,7	;volatile
  8923  0E4C  1283               	bcf	3,5	;RP0=0, select bank0
  8924  0E4D  1303               	bcf	3,6	;RP1=0, select bank0
  8925  0E4E  2E3E               	goto	i1l196
  8926  0E4F                     __end_ofi1_task5:
  8927  0E4F                     __ptext55:	
  8928 ;; *************** function i1_Disp_DisplayNb *****************
  8929 ;; Defined at:
  8930 ;;		line 21 in file "EcuAL/Disp.c"
  8931 ;; Parameters:    Size  Location     Type
  8932 ;;  var             1    wreg     unsigned char 
  8933 ;;  Mode            1   12[COMMON] enum E1254
  8934 ;; Auto vars:     Size  Location     Type
  8935 ;;  var             1   13[COMMON] unsigned char 
  8936 ;; Return value:  Size  Location     Type
  8937 ;;                  1    wreg      void 
  8938 ;; Registers used:
  8939 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8940 ;; Tracked objects:
  8941 ;;		On entry : 300/0
  8942 ;;		On exit  : 0/0
  8943 ;;		Unchanged: 0/0
  8944 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8945 ;;      Params:         1       0       0       0       0
  8946 ;;      Locals:         1       0       0       0       0
  8947 ;;      Temps:          0       2       0       0       0
  8948 ;;      Totals:         2       2       0       0       0
  8949 ;;Total ram usage:        4 bytes
  8950 ;; Hardware stack levels used:    1
  8951 ;; Hardware stack levels required when called:    1
  8952 ;; This function calls:
  8953 ;;		i1_Dio_WritePort
  8954 ;;		i1_Disp_GetDislayValue
  8955 ;;		i1___lbdiv
  8956 ;;		i1___lbmod
  8957 ;;		i1___lwdiv
  8958 ;;		i1___lwmod
  8959 ;; This function is called by:
  8960 ;;		i1_task5
  8961 ;; This function uses a non-reentrant model
  8962 ;;
  8963                           
  8964                           
  8965                           ;psect for function i1_Disp_DisplayNb
  8966  0E4F                     i1_Disp_DisplayNb:
  8967                           
  8968                           ;incstack = 0
  8969 ;; hardware stack exceeded
  8970                           ; Regs used in i1_Disp_DisplayNb: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8971                           ;i1Disp_DisplayNb@var stored from wreg
  8972  0E4F  00FD               	movwf	i1Disp_DisplayNb@var
  8973                           
  8974                           ;EcuAL/Disp.c: 21: void Disp_DisplayNb(uint8_t var, Disp_ModeType Mode);EcuAL/Disp.c: 22
      +                          : {;EcuAL/Disp.c: 23:     static uint16_t blinkFlag=0;;EcuAL/Disp.c: 24:     if(Mode == 
      +                          FIXED)
  8975  0E50  087C               	movf	i1Disp_DisplayNb@Mode,w
  8976  0E51  1D03               	btfss	3,2
  8977  0E52  2E92               	goto	i1l3527
  8978                           
  8979                           ;EcuAL/Disp.c: 25:     {;EcuAL/Disp.c: 26:         Dio_WritePort(PortA, 0x20);
  8980  0E53  3020               	movlw	32
  8981  0E54  00F5               	movwf	i1Dio_WritePort@Level
  8982  0E55  3000               	movlw	0
  8983  0E56  271E  120A  158A   	fcall	i1_Dio_WritePort
  8984                           
  8985                           ;EcuAL/Disp.c: 27:         Dio_WritePort(PortD, Disp_GetDislayValue(var%10));
  8986  0E59  300A               	movlw	10
  8987  0E5A  00F0               	movwf	i1___lbmod@divisor
  8988  0E5B  087D               	movf	i1Disp_DisplayNb@var,w
  8989  0E5C  2796  120A  158A   	fcall	i1___lbmod
  8990  0E5F  272D  120A  158A   	fcall	i1_Disp_GetDislayValue
  8991  0E62  00F5               	movwf	i1Dio_WritePort@Level
  8992  0E63  3003               	movlw	3
  8993  0E64  271E  120A  158A   	fcall	i1_Dio_WritePort
  8994                           
  8995                           ;EcuAL/Disp.c: 28:         _delay((unsigned long)((50)*(10000000/4000.0)));
  8996  0E67  30A3               	movlw	163
  8997  0E68  1283               	bcf	3,5	;RP0=0, select bank0
  8998  0E69  1303               	bcf	3,6	;RP1=0, select bank0
  8999  0E6A  00A1               	movwf	??i1_Disp_DisplayNb+1
  9000  0E6B  3054               	movlw	84
  9001  0E6C  00A0               	movwf	??i1_Disp_DisplayNb
  9002  0E6D                     u420_27:
  9003  0E6D  0BA0               	decfsz	??i1_Disp_DisplayNb,f
  9004  0E6E  2E6D               	goto	u420_27
  9005  0E6F  0BA1               	decfsz	??i1_Disp_DisplayNb+1,f
  9006  0E70  2E6D               	goto	u420_27
  9007  0E71  0000               	nop
  9008                           
  9009                           ;EcuAL/Disp.c: 29:         Dio_WritePort(PortA, 0x10);
  9010  0E72  3010               	movlw	16
  9011  0E73  00F5               	movwf	i1Dio_WritePort@Level
  9012  0E74  3000               	movlw	0
  9013  0E75  271E  120A  158A   	fcall	i1_Dio_WritePort
  9014                           
  9015                           ;EcuAL/Disp.c: 30:         Dio_WritePort(PortD, Disp_GetDislayValue(var/10));
  9016  0E78  300A               	movlw	10
  9017  0E79  00F0               	movwf	i1___lbdiv@divisor
  9018  0E7A  087D               	movf	i1Disp_DisplayNb@var,w
  9019  0E7B  277B  120A  158A   	fcall	i1___lbdiv
  9020  0E7E  272D  120A  158A   	fcall	i1_Disp_GetDislayValue
  9021  0E81  00F5               	movwf	i1Dio_WritePort@Level
  9022  0E82  3003               	movlw	3
  9023  0E83  271E  120A  158A   	fcall	i1_Dio_WritePort
  9024                           
  9025                           ;EcuAL/Disp.c: 31:         _delay((unsigned long)((50)*(10000000/4000.0)));
  9026  0E86  30A3               	movlw	163
  9027  0E87  1283               	bcf	3,5	;RP0=0, select bank0
  9028  0E88  1303               	bcf	3,6	;RP1=0, select bank0
  9029  0E89  00A1               	movwf	??i1_Disp_DisplayNb+1
  9030  0E8A  3054               	movlw	84
  9031  0E8B  00A0               	movwf	??i1_Disp_DisplayNb
  9032  0E8C                     u421_27:
  9033  0E8C  0BA0               	decfsz	??i1_Disp_DisplayNb,f
  9034  0E8D  2E8C               	goto	u421_27
  9035  0E8E  0BA1               	decfsz	??i1_Disp_DisplayNb+1,f
  9036  0E8F  2E8C               	goto	u421_27
  9037  0E90  0000               	nop
  9038                           
  9039                           ;EcuAL/Disp.c: 32:     }
  9040  0E91  0008               	return
  9041  0E92                     i1l3527:
  9042  0E92  0B7C               	decfsz	i1Disp_DisplayNb@Mode,w
  9043  0E93  0008               	return
  9044                           
  9045                           ;EcuAL/Disp.c: 34:     {;EcuAL/Disp.c: 35:         if(blinkFlag < (BlinkingPeriod/(50*2)
      +                          ))
  9046  0E94  3064               	movlw	100
  9047  0E95  00F0               	movwf	i1___lwdiv@divisor
  9048  0E96  01F1               	clrf	i1___lwdiv@divisor+1
  9049  0E97  0857               	movf	_BlinkingPeriod+1,w
  9050  0E98  00F3               	movwf	i1___lwdiv@dividend+1
  9051  0E99  0856               	movf	_BlinkingPeriod,w
  9052  0E9A  00F2               	movwf	i1___lwdiv@dividend
  9053  0E9B  27B2  120A  158A   	fcall	i1___lwdiv
  9054  0E9E  0871               	movf	?i1___lwdiv+1,w
  9055  0E9F  0255               	subwf	Disp_DisplayNb@blinkFlag+1,w
  9056  0EA0  1D03               	skipz
  9057  0EA1  2EA4               	goto	u257_25
  9058  0EA2  0870               	movf	?i1___lwdiv,w
  9059  0EA3  0254               	subwf	Disp_DisplayNb@blinkFlag,w
  9060  0EA4                     u257_25:
  9061                           
  9062                           ;EcuAL/Disp.c: 36:         {;EcuAL/Disp.c: 37:            Dio_WritePort(PortA, 0x20);
  9063  0EA4  3020               	movlw	32
  9064  0EA5  00F5               	movwf	i1Dio_WritePort@Level
  9065  0EA6  3000               	movlw	0
  9066  0EA7  1803               	skipnc
  9067  0EA8  2ED7               	goto	L22
  9068  0EA9  271E  120A  158A   	fcall	i1_Dio_WritePort
  9069                           
  9070                           ;EcuAL/Disp.c: 38:            Dio_WritePort(PortD, Disp_GetDislayValue(var%10));
  9071  0EAC  300A               	movlw	10
  9072  0EAD  00F0               	movwf	i1___lbmod@divisor
  9073  0EAE  087D               	movf	i1Disp_DisplayNb@var,w
  9074  0EAF  2796  120A  158A   	fcall	i1___lbmod
  9075  0EB2  272D  120A  158A   	fcall	i1_Disp_GetDislayValue
  9076  0EB5  00F5               	movwf	i1Dio_WritePort@Level
  9077  0EB6  3003               	movlw	3
  9078  0EB7  271E  120A  158A   	fcall	i1_Dio_WritePort
  9079                           
  9080                           ;EcuAL/Disp.c: 39:            _delay((unsigned long)((50)*(10000000/4000.0)));
  9081  0EBA  30A3               	movlw	163
  9082  0EBB  1283               	bcf	3,5	;RP0=0, select bank0
  9083  0EBC  1303               	bcf	3,6	;RP1=0, select bank0
  9084  0EBD  00A1               	movwf	??i1_Disp_DisplayNb+1
  9085  0EBE  3054               	movlw	84
  9086  0EBF  00A0               	movwf	??i1_Disp_DisplayNb
  9087  0EC0                     u422_27:
  9088  0EC0  0BA0               	decfsz	??i1_Disp_DisplayNb,f
  9089  0EC1  2EC0               	goto	u422_27
  9090  0EC2  0BA1               	decfsz	??i1_Disp_DisplayNb+1,f
  9091  0EC3  2EC0               	goto	u422_27
  9092  0EC4  0000               	nop
  9093                           
  9094                           ;EcuAL/Disp.c: 40:            Dio_WritePort(PortA, 0x10);
  9095  0EC5  3010               	movlw	16
  9096  0EC6  00F5               	movwf	i1Dio_WritePort@Level
  9097  0EC7  3000               	movlw	0
  9098  0EC8  271E  120A  158A   	fcall	i1_Dio_WritePort
  9099                           
  9100                           ;EcuAL/Disp.c: 41:            Dio_WritePort(PortD, Disp_GetDislayValue(var/10));
  9101  0ECB  300A               	movlw	10
  9102  0ECC  00F0               	movwf	i1___lbdiv@divisor
  9103  0ECD  087D               	movf	i1Disp_DisplayNb@var,w
  9104  0ECE  277B  120A  158A   	fcall	i1___lbdiv
  9105  0ED1  272D  120A  158A   	fcall	i1_Disp_GetDislayValue
  9106  0ED4  00F5               	movwf	i1Dio_WritePort@Level
  9107  0ED5  3003               	movlw	3
  9108  0ED6  2EF2               	goto	L21
  9109  0ED7                     L22:	
  9110                           ;EcuAL/Disp.c: 45:         {;EcuAL/Disp.c: 46:            Dio_WritePort(PortA, 0x20);
  9111                           
  9112                           ;EcuAL/Disp.c: 43:         }
  9113                           
  9114  0ED7  271E  120A  158A   	fcall	i1_Dio_WritePort
  9115  0EDA  3003               	movlw	3
  9116                           
  9117                           ;EcuAL/Disp.c: 47:            Dio_WritePort(PortD, 0x00);
  9118  0EDB  01F5               	clrf	i1Dio_WritePort@Level
  9119  0EDC  271E  120A  158A   	fcall	i1_Dio_WritePort
  9120                           
  9121                           ;EcuAL/Disp.c: 48:            _delay((unsigned long)((50)*(10000000/4000.0)));
  9122  0EDF  30A3               	movlw	163
  9123  0EE0  1283               	bcf	3,5	;RP0=0, select bank0
  9124  0EE1  1303               	bcf	3,6	;RP1=0, select bank0
  9125  0EE2  00A1               	movwf	??i1_Disp_DisplayNb+1
  9126  0EE3  3054               	movlw	84
  9127  0EE4  00A0               	movwf	??i1_Disp_DisplayNb
  9128  0EE5                     u424_27:
  9129  0EE5  0BA0               	decfsz	??i1_Disp_DisplayNb,f
  9130  0EE6  2EE5               	goto	u424_27
  9131  0EE7  0BA1               	decfsz	??i1_Disp_DisplayNb+1,f
  9132  0EE8  2EE5               	goto	u424_27
  9133  0EE9  0000               	nop
  9134                           
  9135                           ;EcuAL/Disp.c: 49:            Dio_WritePort(PortA, 0x10);
  9136  0EEA  3010               	movlw	16
  9137  0EEB  00F5               	movwf	i1Dio_WritePort@Level
  9138  0EEC  3000               	movlw	0
  9139  0EED  271E  120A  158A   	fcall	i1_Dio_WritePort
  9140  0EF0  3003               	movlw	3
  9141                           
  9142                           ;EcuAL/Disp.c: 50:            Dio_WritePort(PortD, 0x00);
  9143  0EF1  01F5               	clrf	i1Dio_WritePort@Level
  9144  0EF2                     L21:
  9145  0EF2  271E  120A  158A   	fcall	i1_Dio_WritePort
  9146                           
  9147                           ;EcuAL/Disp.c: 42:            _delay((unsigned long)((50)*(10000000/4000.0)));
  9148  0EF5  30A3               	movlw	163
  9149  0EF6  1283               	bcf	3,5	;RP0=0, select bank0
  9150  0EF7  1303               	bcf	3,6	;RP1=0, select bank0
  9151  0EF8  00A1               	movwf	??i1_Disp_DisplayNb+1
  9152  0EF9  3054               	movlw	84
  9153  0EFA  00A0               	movwf	??i1_Disp_DisplayNb
  9154  0EFB                     u423_27:
  9155  0EFB  0BA0               	decfsz	??i1_Disp_DisplayNb,f
  9156  0EFC  2EFB               	goto	u423_27
  9157  0EFD  0BA1               	decfsz	??i1_Disp_DisplayNb+1,f
  9158  0EFE  2EFB               	goto	u423_27
  9159  0EFF  0000               	nop
  9160                           
  9161                           ;EcuAL/Disp.c: 53:         blinkFlag = (blinkFlag+1)%(BlinkingPeriod/50);
  9162  0F00  3032               	movlw	50
  9163  0F01  00F0               	movwf	i1___lwdiv@divisor
  9164  0F02  01F1               	clrf	i1___lwdiv@divisor+1
  9165  0F03  1283               	bcf	3,5	;RP0=0, select bank0
  9166  0F04  1303               	bcf	3,6	;RP1=0, select bank0
  9167  0F05  0857               	movf	_BlinkingPeriod+1,w
  9168  0F06  00F3               	movwf	i1___lwdiv@dividend+1
  9169  0F07  0856               	movf	_BlinkingPeriod,w
  9170  0F08  00F2               	movwf	i1___lwdiv@dividend
  9171  0F09  27B2  120A  158A   	fcall	i1___lwdiv
  9172  0F0C  0871               	movf	?i1___lwdiv+1,w
  9173  0F0D  00F8               	movwf	i1___lwmod@divisor+1
  9174  0F0E  0870               	movf	?i1___lwdiv,w
  9175  0F0F  00F7               	movwf	i1___lwmod@divisor
  9176  0F10  0854               	movf	Disp_DisplayNb@blinkFlag,w
  9177  0F11  3E01               	addlw	1
  9178  0F12  00F9               	movwf	i1___lwmod@dividend
  9179  0F13  0855               	movf	Disp_DisplayNb@blinkFlag+1,w
  9180  0F14  1803               	skipnc
  9181  0F15  3E01               	addlw	1
  9182  0F16  3E00               	addlw	0
  9183  0F17  00FA               	movwf	i1___lwmod@dividend+1
  9184  0F18  27DC               	fcall	i1___lwmod
  9185  0F19  0878               	movf	?i1___lwmod+1,w
  9186  0F1A  00D5               	movwf	Disp_DisplayNb@blinkFlag+1
  9187  0F1B  0877               	movf	?i1___lwmod,w
  9188  0F1C  00D4               	movwf	Disp_DisplayNb@blinkFlag
  9189  0F1D  0008               	return
  9190  0F1E                     __end_ofi1_Disp_DisplayNb:
  9191  0F1E                     __ptext61:	
  9192 ;; *************** function i1_Dio_WritePort *****************
  9193 ;; Defined at:
  9194 ;;		line 86 in file "MCAL/Dio.c"
  9195 ;; Parameters:    Size  Location     Type
  9196 ;;  PortId          1    wreg     unsigned char 
  9197 ;;  Level           1    5[COMMON] unsigned char 
  9198 ;; Auto vars:     Size  Location     Type
  9199 ;;  PortId          1    6[COMMON] unsigned char 
  9200 ;;  Port_Ptr        2    7[COMMON] PTR volatile unsigned ch
  9201 ;;		 -> RAM(512), NULL(0), 
  9202 ;; Return value:  Size  Location     Type
  9203 ;;                  1    wreg      void 
  9204 ;; Registers used:
  9205 ;;		wreg, fsr0l, fsr0h, status,2
  9206 ;; Tracked objects:
  9207 ;;		On entry : 0/0
  9208 ;;		On exit  : 0/0
  9209 ;;		Unchanged: 0/0
  9210 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9211 ;;      Params:         1       0       0       0       0
  9212 ;;      Locals:         3       0       0       0       0
  9213 ;;      Temps:          0       0       0       0       0
  9214 ;;      Totals:         4       0       0       0       0
  9215 ;;Total ram usage:        4 bytes
  9216 ;; Hardware stack levels used:    1
  9217 ;; This function calls:
  9218 ;;		Nothing
  9219 ;; This function is called by:
  9220 ;;		i1_Disp_DisplayNb
  9221 ;; This function uses a non-reentrant model
  9222 ;;
  9223                           
  9224                           
  9225                           ;psect for function i1_Dio_WritePort
  9226  0F1E                     i1_Dio_WritePort:
  9227                           
  9228                           ;incstack = 0
  9229 ;; hardware stack exceeded
  9230                           ; Regs used in i1_Dio_WritePort: [wreg-fsr0h+status,2]
  9231                           ;i1Dio_WritePort@PortId stored from wreg
  9232  0F1E  00F6               	movwf	i1Dio_WritePort@PortId
  9233                           
  9234                           ;MCAL/Dio.c: 89:     Port_Ptr = &(*((volatile uint8*)(((uint8)0x005)+((uint8)PortId))));
  9235  0F1F  00F7               	movwf	i1Dio_WritePort@Port_Ptr
  9236  0F20  3005               	movlw	5
  9237  0F21  01F8               	clrf	i1Dio_WritePort@Port_Ptr+1
  9238  0F22  07F7               	addwf	i1Dio_WritePort@Port_Ptr,f
  9239  0F23  1803               	skipnc
  9240  0F24  0AF8               	incf	i1Dio_WritePort@Port_Ptr+1,f
  9241                           
  9242                           ;MCAL/Dio.c: 90:         (*Port_Ptr=Level);
  9243  0F25  0877               	movf	i1Dio_WritePort@Port_Ptr,w
  9244  0F26  0084               	movwf	4
  9245  0F27  1783               	bsf	3,7
  9246  0F28  1C78               	btfss	i1Dio_WritePort@Port_Ptr+1,0
  9247  0F29  1383               	bcf	3,7
  9248  0F2A  0875               	movf	i1Dio_WritePort@Level,w
  9249  0F2B  0080               	movwf	0
  9250  0F2C  0008               	return
  9251  0F2D                     __end_ofi1_Dio_WritePort:
  9252  0F2D                     __ptext60:	
  9253 ;; *************** function i1_Disp_GetDislayValue *****************
  9254 ;; Defined at:
  9255 ;;		line 63 in file "EcuAL/Disp.c"
  9256 ;; Parameters:    Size  Location     Type
  9257 ;;  v               1    wreg     unsigned char 
  9258 ;; Auto vars:     Size  Location     Type
  9259 ;;  v               1    2[COMMON] unsigned char 
  9260 ;; Return value:  Size  Location     Type
  9261 ;;                  1    wreg      unsigned char 
  9262 ;; Registers used:
  9263 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  9264 ;; Tracked objects:
  9265 ;;		On entry : 0/0
  9266 ;;		On exit  : 0/0
  9267 ;;		Unchanged: 0/0
  9268 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9269 ;;      Params:         0       0       0       0       0
  9270 ;;      Locals:         1       0       0       0       0
  9271 ;;      Temps:          2       0       0       0       0
  9272 ;;      Totals:         3       0       0       0       0
  9273 ;;Total ram usage:        3 bytes
  9274 ;; Hardware stack levels used:    1
  9275 ;; This function calls:
  9276 ;;		Nothing
  9277 ;; This function is called by:
  9278 ;;		i1_Disp_DisplayNb
  9279 ;; This function uses a non-reentrant model
  9280 ;;
  9281                           
  9282                           
  9283                           ;psect for function i1_Disp_GetDislayValue
  9284  0F2D                     i1_Disp_GetDislayValue:
  9285                           
  9286                           ;incstack = 0
  9287 ;; hardware stack exceeded
  9288                           ; Regs used in i1_Disp_GetDislayValue: [wreg-fsr0h+status,2+status,0]
  9289                           ;i1Disp_GetDislayValue@v stored from wreg
  9290  0F2D  00F2               	movwf	i1Disp_GetDislayValue@v
  9291                           
  9292                           ;EcuAL/Disp.c: 63: static uint8_t Disp_GetDislayValue(unsigned char v);EcuAL/Disp.c: 64:
      +                           {;EcuAL/Disp.c: 65:   switch(v)
  9293  0F2E  2F40               	goto	i1l3031
  9294  0F2F                     i1l2961:
  9295  0F2F  343F               	retlw	63
  9296  0F30                     i1l2965:
  9297  0F30  3406               	retlw	6
  9298  0F31                     i1l2969:
  9299  0F31  345B               	retlw	91
  9300  0F32                     i1l2973:
  9301  0F32  344F               	retlw	79
  9302  0F33                     i1l2977:
  9303  0F33  3466               	retlw	102
  9304  0F34                     i1l2981:
  9305  0F34  346D               	retlw	109
  9306  0F35                     i1l2985:
  9307  0F35  347D               	retlw	125
  9308  0F36                     i1l2989:
  9309  0F36  3407               	retlw	7
  9310  0F37                     i1l2993:
  9311  0F37  347F               	retlw	127
  9312  0F38                     i1l2997:
  9313  0F38  346F               	retlw	111
  9314  0F39                     i1l3001:
  9315  0F39  3477               	retlw	119
  9316  0F3A                     i1l3005:
  9317  0F3A  347C               	retlw	124
  9318  0F3B                     i1l3009:
  9319  0F3B  3458               	retlw	88
  9320  0F3C                     i1l3013:
  9321  0F3C  345E               	retlw	94
  9322  0F3D                     i1l3017:
  9323  0F3D  3479               	retlw	121
  9324  0F3E                     i1l3021:
  9325  0F3E  3471               	retlw	113
  9326  0F3F                     i1l3025:
  9327                           
  9328                           ;EcuAL/Disp.c: 84:     return 0;
  9329  0F3F  3400               	retlw	0
  9330  0F40                     i1l3031:
  9331  0F40  0872               	movf	i1Disp_GetDislayValue@v,w
  9332  0F41  00F0               	movwf	??i1_Disp_GetDislayValue
  9333  0F42  01F1               	clrf	??i1_Disp_GetDislayValue+1
  9334                           
  9335                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9336                           ; Switch size 1, requested type "space"
  9337                           ; Number of cases is 1, Range of values is 0 to 0
  9338                           ; switch strategies available:
  9339                           ; Name         Instructions Cycles
  9340                           ; simple_byte            4     3 (average)
  9341                           ; direct_byte           11     8 (fixed)
  9342                           ; jumptable            260     6 (fixed)
  9343                           ;	Chosen strategy is simple_byte
  9344  0F43  0871               	movf	??i1_Disp_GetDislayValue+1,w
  9345  0F44  3A00               	xorlw	0	; case 0
  9346  0F45  1903               	skipnz
  9347  0F46  2F48               	goto	i1l4709
  9348  0F47  2F3F               	goto	i1l3025
  9349  0F48                     i1l4709:
  9350                           
  9351                           ; Switch size 1, requested type "space"
  9352                           ; Number of cases is 16, Range of values is 0 to 15
  9353                           ; switch strategies available:
  9354                           ; Name         Instructions Cycles
  9355                           ; simple_byte           49    25 (average)
  9356                           ; direct_byte           56     8 (fixed)
  9357                           ; jumptable            260     6 (fixed)
  9358                           ;	Chosen strategy is simple_byte
  9359  0F48  0870               	movf	??i1_Disp_GetDislayValue,w
  9360  0F49  3A00               	xorlw	0	; case 0
  9361  0F4A  1903               	skipnz
  9362  0F4B  2F2F               	goto	i1l2961
  9363  0F4C  3A01               	xorlw	1	; case 1
  9364  0F4D  1903               	skipnz
  9365  0F4E  2F30               	goto	i1l2965
  9366  0F4F  3A03               	xorlw	3	; case 2
  9367  0F50  1903               	skipnz
  9368  0F51  2F31               	goto	i1l2969
  9369  0F52  3A01               	xorlw	1	; case 3
  9370  0F53  1903               	skipnz
  9371  0F54  2F32               	goto	i1l2973
  9372  0F55  3A07               	xorlw	7	; case 4
  9373  0F56  1903               	skipnz
  9374  0F57  2F33               	goto	i1l2977
  9375  0F58  3A01               	xorlw	1	; case 5
  9376  0F59  1903               	skipnz
  9377  0F5A  2F34               	goto	i1l2981
  9378  0F5B  3A03               	xorlw	3	; case 6
  9379  0F5C  1903               	skipnz
  9380  0F5D  2F35               	goto	i1l2985
  9381  0F5E  3A01               	xorlw	1	; case 7
  9382  0F5F  1903               	skipnz
  9383  0F60  2F36               	goto	i1l2989
  9384  0F61  3A0F               	xorlw	15	; case 8
  9385  0F62  1903               	skipnz
  9386  0F63  2F37               	goto	i1l2993
  9387  0F64  3A01               	xorlw	1	; case 9
  9388  0F65  1903               	skipnz
  9389  0F66  2F38               	goto	i1l2997
  9390  0F67  3A03               	xorlw	3	; case 10
  9391  0F68  1903               	skipnz
  9392  0F69  2F39               	goto	i1l3001
  9393  0F6A  3A01               	xorlw	1	; case 11
  9394  0F6B  1903               	skipnz
  9395  0F6C  2F3A               	goto	i1l3005
  9396  0F6D  3A07               	xorlw	7	; case 12
  9397  0F6E  1903               	skipnz
  9398  0F6F  2F3B               	goto	i1l3009
  9399  0F70  3A01               	xorlw	1	; case 13
  9400  0F71  1903               	skipnz
  9401  0F72  2F3C               	goto	i1l3013
  9402  0F73  3A03               	xorlw	3	; case 14
  9403  0F74  1903               	skipnz
  9404  0F75  2F3D               	goto	i1l3017
  9405  0F76  3A01               	xorlw	1	; case 15
  9406  0F77  1903               	skipnz
  9407  0F78  2F3E               	goto	i1l3021
  9408  0F79  2F3F               	goto	i1l3025
  9409  0F7A  0008               	return
  9410  0F7B                     __end_ofi1_Disp_GetDislayValue:
  9411  0F7B                     __ptext59:	
  9412 ;; *************** function i1___lbdiv *****************
  9413 ;; Defined at:
  9414 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\lbdiv.c"
  9415 ;; Parameters:    Size  Location     Type
  9416 ;;  dividend        1    wreg     unsigned char 
  9417 ;;  divisor         1    0[COMMON] unsigned char 
  9418 ;; Auto vars:     Size  Location     Type
  9419 ;;  dividend        1    1[COMMON] unsigned char 
  9420 ;;  quotient        1    3[COMMON] unsigned char 
  9421 ;;  counter         1    2[COMMON] unsigned char 
  9422 ;; Return value:  Size  Location     Type
  9423 ;;                  1    wreg      unsigned char 
  9424 ;; Registers used:
  9425 ;;		wreg, status,2, status,0
  9426 ;; Tracked objects:
  9427 ;;		On entry : 0/0
  9428 ;;		On exit  : 0/0
  9429 ;;		Unchanged: 0/0
  9430 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9431 ;;      Params:         1       0       0       0       0
  9432 ;;      Locals:         3       0       0       0       0
  9433 ;;      Temps:          0       0       0       0       0
  9434 ;;      Totals:         4       0       0       0       0
  9435 ;;Total ram usage:        4 bytes
  9436 ;; Hardware stack levels used:    1
  9437 ;; This function calls:
  9438 ;;		Nothing
  9439 ;; This function is called by:
  9440 ;;		i1_Disp_DisplayNb
  9441 ;; This function uses a non-reentrant model
  9442 ;;
  9443                           
  9444                           
  9445                           ;psect for function i1___lbdiv
  9446  0F7B                     i1___lbdiv:
  9447                           
  9448                           ;incstack = 0
  9449 ;; hardware stack exceeded
  9450                           ; Regs used in i1___lbdiv: [wreg+status,2+status,0]
  9451                           ;i1___lbdiv@dividend stored from wreg
  9452  0F7B  00F1               	movwf	i1___lbdiv@dividend
  9453  0F7C  01F3               	clrf	i1___lbdiv@quotient
  9454  0F7D  0870               	movf	i1___lbdiv@divisor,w
  9455  0F7E  1903               	btfsc	3,2
  9456  0F7F  2F94               	goto	i1l3057
  9457  0F80  01F2               	clrf	i1___lbdiv@counter
  9458  0F81                     i1l3043:
  9459  0F81  0AF2               	incf	i1___lbdiv@counter,f
  9460  0F82  1BF0               	btfsc	i1___lbdiv@divisor,7
  9461  0F83  2F87               	goto	i1l1198
  9462  0F84  1003               	clrc
  9463  0F85  0DF0               	rlf	i1___lbdiv@divisor,f
  9464  0F86  2F81               	goto	i1l3043
  9465  0F87                     i1l1198:
  9466  0F87  1003               	clrc
  9467  0F88  0DF3               	rlf	i1___lbdiv@quotient,f
  9468  0F89  0870               	movf	i1___lbdiv@divisor,w
  9469  0F8A  0271               	subwf	i1___lbdiv@dividend,w
  9470  0F8B  1C03               	skipc
  9471  0F8C  2F91               	goto	L28
  9472  0F8D  0870               	movf	i1___lbdiv@divisor,w
  9473  0F8E  02F1               	subwf	i1___lbdiv@dividend,f
  9474  0F8F  1473               	bsf	i1___lbdiv@quotient,0
  9475  0F90  1003               	clrc
  9476  0F91                     L28:
  9477  0F91  0CF0               	rrf	i1___lbdiv@divisor,f
  9478  0F92  0BF2               	decfsz	i1___lbdiv@counter,f
  9479  0F93  2F87               	goto	i1l1198
  9480  0F94                     i1l3057:
  9481  0F94  0873               	movf	i1___lbdiv@quotient,w
  9482  0F95  0008               	return
  9483  0F96                     __end_ofi1___lbdiv:
  9484  0F96                     __ptext58:	
  9485 ;; *************** function i1___lbmod *****************
  9486 ;; Defined at:
  9487 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\lbmod.c"
  9488 ;; Parameters:    Size  Location     Type
  9489 ;;  dividend        1    wreg     unsigned char 
  9490 ;;  divisor         1    0[COMMON] unsigned char 
  9491 ;; Auto vars:     Size  Location     Type
  9492 ;;  dividend        1    2[COMMON] unsigned char 
  9493 ;;  rem             1    4[COMMON] unsigned char 
  9494 ;;  counter         1    3[COMMON] unsigned char 
  9495 ;; Return value:  Size  Location     Type
  9496 ;;                  1    wreg      unsigned char 
  9497 ;; Registers used:
  9498 ;;		wreg, status,2, status,0
  9499 ;; Tracked objects:
  9500 ;;		On entry : 0/0
  9501 ;;		On exit  : 0/0
  9502 ;;		Unchanged: 0/0
  9503 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9504 ;;      Params:         1       0       0       0       0
  9505 ;;      Locals:         3       0       0       0       0
  9506 ;;      Temps:          1       0       0       0       0
  9507 ;;      Totals:         5       0       0       0       0
  9508 ;;Total ram usage:        5 bytes
  9509 ;; Hardware stack levels used:    1
  9510 ;; This function calls:
  9511 ;;		Nothing
  9512 ;; This function is called by:
  9513 ;;		i1_Disp_DisplayNb
  9514 ;; This function uses a non-reentrant model
  9515 ;;
  9516                           
  9517                           
  9518                           ;psect for function i1___lbmod
  9519  0F96                     i1___lbmod:
  9520                           
  9521                           ;incstack = 0
  9522 ;; hardware stack exceeded
  9523                           ; Regs used in i1___lbmod: [wreg+status,2+status,0]
  9524                           ;i1___lbmod@dividend stored from wreg
  9525  0F96  00F2               	movwf	i1___lbmod@dividend
  9526  0F97  3008               	movlw	8
  9527  0F98  00F3               	movwf	i1___lbmod@counter
  9528  0F99  01F4               	clrf	i1___lbmod@rem
  9529  0F9A                     i1l3065:
  9530  0F9A  0872               	movf	i1___lbmod@dividend,w
  9531  0F9B  00F1               	movwf	??i1___lbmod
  9532  0F9C  3007               	movlw	7
  9533  0F9D  1003               	clrc
  9534  0F9E                     L27:
  9535  0F9E  0CF1               	rrf	??i1___lbmod,f
  9536  0F9F  3EFF               	addlw	-1
  9537  0FA0  1003               	clrc
  9538  0FA1  1D03               	skipz
  9539  0FA2  2F9E               	goto	L27
  9540  0FA3  0D74               	rlf	i1___lbmod@rem,w
  9541  0FA4  0471               	iorwf	??i1___lbmod,w
  9542  0FA5  00F4               	movwf	i1___lbmod@rem
  9543  0FA6  1003               	clrc
  9544  0FA7  0DF2               	rlf	i1___lbmod@dividend,f
  9545  0FA8  0870               	movf	i1___lbmod@divisor,w
  9546  0FA9  0274               	subwf	i1___lbmod@rem,w
  9547  0FAA  1C03               	skipc
  9548  0FAB  2FAE               	goto	i1l3073
  9549  0FAC  0870               	movf	i1___lbmod@divisor,w
  9550  0FAD  02F4               	subwf	i1___lbmod@rem,f
  9551  0FAE                     i1l3073:
  9552  0FAE  0BF3               	decfsz	i1___lbmod@counter,f
  9553  0FAF  2F9A               	goto	i1l3065
  9554  0FB0  0874               	movf	i1___lbmod@rem,w
  9555  0FB1  0008               	return
  9556  0FB2                     __end_ofi1___lbmod:
  9557  0FB2                     __ptext57:	
  9558 ;; *************** function i1___lwdiv *****************
  9559 ;; Defined at:
  9560 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\lwdiv.c"
  9561 ;; Parameters:    Size  Location     Type
  9562 ;;  divisor         2    0[COMMON] unsigned int 
  9563 ;;  dividend        2    2[COMMON] unsigned int 
  9564 ;; Auto vars:     Size  Location     Type
  9565 ;;  quotient        2    4[COMMON] unsigned int 
  9566 ;;  counter         1    6[COMMON] unsigned char 
  9567 ;; Return value:  Size  Location     Type
  9568 ;;                  2    0[COMMON] unsigned int 
  9569 ;; Registers used:
  9570 ;;		wreg, status,2, status,0
  9571 ;; Tracked objects:
  9572 ;;		On entry : 300/0
  9573 ;;		On exit  : 300/0
  9574 ;;		Unchanged: 300/0
  9575 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9576 ;;      Params:         4       0       0       0       0
  9577 ;;      Locals:         3       0       0       0       0
  9578 ;;      Temps:          0       0       0       0       0
  9579 ;;      Totals:         7       0       0       0       0
  9580 ;;Total ram usage:        7 bytes
  9581 ;; Hardware stack levels used:    1
  9582 ;; This function calls:
  9583 ;;		Nothing
  9584 ;; This function is called by:
  9585 ;;		i1_Disp_DisplayNb
  9586 ;; This function uses a non-reentrant model
  9587 ;;
  9588                           
  9589                           
  9590                           ;psect for function i1___lwdiv
  9591  0FB2                     i1___lwdiv:
  9592                           
  9593                           ;incstack = 0
  9594 ;; hardware stack exceeded
  9595                           ; Regs used in i1___lwdiv: [wreg+status,2+status,0]
  9596  0FB2  01F4               	clrf	i1___lwdiv@quotient
  9597  0FB3  01F5               	clrf	i1___lwdiv@quotient+1
  9598  0FB4  0870               	movf	i1___lwdiv@divisor,w
  9599  0FB5  0471               	iorwf	i1___lwdiv@divisor+1,w
  9600  0FB6  1903               	btfsc	3,2
  9601  0FB7  2FD7               	goto	i1l3101
  9602  0FB8  01F6               	clrf	i1___lwdiv@counter
  9603  0FB9                     L25:
  9604  0FB9  0AF6               	incf	i1___lwdiv@counter,f
  9605  0FBA  1BF1               	btfsc	i1___lwdiv@divisor+1,7
  9606  0FBB  2FC0               	goto	i1l3089
  9607  0FBC  1003               	clrc
  9608  0FBD  0DF0               	rlf	i1___lwdiv@divisor,f
  9609  0FBE  0DF1               	rlf	i1___lwdiv@divisor+1,f
  9610  0FBF  2FB9               	goto	L25
  9611  0FC0                     i1l3089:
  9612  0FC0  1003               	clrc
  9613  0FC1  0DF4               	rlf	i1___lwdiv@quotient,f
  9614  0FC2  0DF5               	rlf	i1___lwdiv@quotient+1,f
  9615  0FC3  0871               	movf	i1___lwdiv@divisor+1,w
  9616  0FC4  0273               	subwf	i1___lwdiv@dividend+1,w
  9617  0FC5  1D03               	skipz
  9618  0FC6  2FC9               	goto	u198_25
  9619  0FC7  0870               	movf	i1___lwdiv@divisor,w
  9620  0FC8  0272               	subwf	i1___lwdiv@dividend,w
  9621  0FC9                     u198_25:
  9622  0FC9  1C03               	skipc
  9623  0FCA  2FD3               	goto	L26
  9624  0FCB  0870               	movf	i1___lwdiv@divisor,w
  9625  0FCC  02F2               	subwf	i1___lwdiv@dividend,f
  9626  0FCD  0871               	movf	i1___lwdiv@divisor+1,w
  9627  0FCE  1C03               	skipc
  9628  0FCF  03F3               	decf	i1___lwdiv@dividend+1,f
  9629  0FD0  02F3               	subwf	i1___lwdiv@dividend+1,f
  9630  0FD1  1474               	bsf	i1___lwdiv@quotient,0
  9631  0FD2  1003               	clrc
  9632  0FD3                     L26:
  9633  0FD3  0CF1               	rrf	i1___lwdiv@divisor+1,f
  9634  0FD4  0CF0               	rrf	i1___lwdiv@divisor,f
  9635  0FD5  0BF6               	decfsz	i1___lwdiv@counter,f
  9636  0FD6  2FC0               	goto	i1l3089
  9637  0FD7                     i1l3101:
  9638  0FD7  0875               	movf	i1___lwdiv@quotient+1,w
  9639  0FD8  00F1               	movwf	?i1___lwdiv+1
  9640  0FD9  0874               	movf	i1___lwdiv@quotient,w
  9641  0FDA  00F0               	movwf	?i1___lwdiv
  9642  0FDB  0008               	return
  9643  0FDC                     __end_ofi1___lwdiv:
  9644  0FDC                     __ptext56:	
  9645 ;; *************** function i1___lwmod *****************
  9646 ;; Defined at:
  9647 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\lwmod.c"
  9648 ;; Parameters:    Size  Location     Type
  9649 ;;  divisor         2    7[COMMON] unsigned int 
  9650 ;;  dividend        2    9[COMMON] unsigned int 
  9651 ;; Auto vars:     Size  Location     Type
  9652 ;;  counter         1   11[COMMON] unsigned char 
  9653 ;; Return value:  Size  Location     Type
  9654 ;;                  2    7[COMMON] unsigned int 
  9655 ;; Registers used:
  9656 ;;		wreg, status,2, status,0
  9657 ;; Tracked objects:
  9658 ;;		On entry : 300/0
  9659 ;;		On exit  : 300/0
  9660 ;;		Unchanged: 300/0
  9661 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9662 ;;      Params:         4       0       0       0       0
  9663 ;;      Locals:         1       0       0       0       0
  9664 ;;      Temps:          0       0       0       0       0
  9665 ;;      Totals:         5       0       0       0       0
  9666 ;;Total ram usage:        5 bytes
  9667 ;; Hardware stack levels used:    1
  9668 ;; This function calls:
  9669 ;;		Nothing
  9670 ;; This function is called by:
  9671 ;;		i1_Disp_DisplayNb
  9672 ;; This function uses a non-reentrant model
  9673 ;;
  9674                           
  9675                           
  9676                           ;psect for function i1___lwmod
  9677  0FDC                     i1___lwmod:
  9678                           
  9679                           ;incstack = 0
  9680 ;; hardware stack exceeded
  9681                           ; Regs used in i1___lwmod: [wreg+status,2+status,0]
  9682  0FDC  0877               	movf	i1___lwmod@divisor,w
  9683  0FDD  0478               	iorwf	i1___lwmod@divisor+1,w
  9684  0FDE  1903               	btfsc	3,2
  9685  0FDF  2FFB               	goto	i1l3121
  9686  0FE0  01FB               	clrf	i1___lwmod@counter
  9687  0FE1                     L23:
  9688  0FE1  0AFB               	incf	i1___lwmod@counter,f
  9689  0FE2  1BF8               	btfsc	i1___lwmod@divisor+1,7
  9690  0FE3  2FE8               	goto	i1l3113
  9691  0FE4  1003               	clrc
  9692  0FE5  0DF7               	rlf	i1___lwmod@divisor,f
  9693  0FE6  0DF8               	rlf	i1___lwmod@divisor+1,f
  9694  0FE7  2FE1               	goto	L23
  9695  0FE8                     i1l3113:
  9696  0FE8  0878               	movf	i1___lwmod@divisor+1,w
  9697  0FE9  027A               	subwf	i1___lwmod@dividend+1,w
  9698  0FEA  1D03               	skipz
  9699  0FEB  2FEE               	goto	u202_25
  9700  0FEC  0877               	movf	i1___lwmod@divisor,w
  9701  0FED  0279               	subwf	i1___lwmod@dividend,w
  9702  0FEE                     u202_25:
  9703  0FEE  1C03               	skipc
  9704  0FEF  2FF7               	goto	L24
  9705  0FF0  0877               	movf	i1___lwmod@divisor,w
  9706  0FF1  02F9               	subwf	i1___lwmod@dividend,f
  9707  0FF2  0878               	movf	i1___lwmod@divisor+1,w
  9708  0FF3  1C03               	skipc
  9709  0FF4  03FA               	decf	i1___lwmod@dividend+1,f
  9710  0FF5  02FA               	subwf	i1___lwmod@dividend+1,f
  9711  0FF6  1003               	clrc
  9712  0FF7                     L24:
  9713  0FF7  0CF8               	rrf	i1___lwmod@divisor+1,f
  9714  0FF8  0CF7               	rrf	i1___lwmod@divisor,f
  9715  0FF9  0BFB               	decfsz	i1___lwmod@counter,f
  9716  0FFA  2FE8               	goto	i1l3113
  9717  0FFB                     i1l3121:
  9718  0FFB  087A               	movf	i1___lwmod@dividend+1,w
  9719  0FFC  00F8               	movwf	?i1___lwmod+1
  9720  0FFD  0879               	movf	i1___lwmod@dividend,w
  9721  0FFE  00F7               	movwf	?i1___lwmod
  9722  0FFF  0008               	return
  9723  1000                     __end_ofi1___lwmod:
  9724                           
  9725                           	psect	text73
  9726  07FA                     __ptext73:	
  9727 ;; *************** function _Adc_Handler *****************
  9728 ;; Defined at:
  9729 ;;		line 72 in file "PostBuildConfig.c"
  9730 ;; Parameters:    Size  Location     Type
  9731 ;;  x               1    0[COMMON] unsigned char 
  9732 ;; Auto vars:     Size  Location     Type
  9733 ;;		None
  9734 ;; Return value:  Size  Location     Type
  9735 ;;                  1    wreg      void 
  9736 ;; Registers used:
  9737 ;;		None
  9738 ;; Tracked objects:
  9739 ;;		On entry : B00/800
  9740 ;;		On exit  : B00/800
  9741 ;;		Unchanged: B00/0
  9742 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9743 ;;      Params:         1       0       0       0       0
  9744 ;;      Locals:         0       0       0       0       0
  9745 ;;      Temps:          0       0       0       0       0
  9746 ;;      Totals:         1       0       0       0       0
  9747 ;;Total ram usage:        1 bytes
  9748 ;; Hardware stack levels used:    1
  9749 ;; This function calls:
  9750 ;;		Nothing
  9751 ;; This function is called by:
  9752 ;;		_Adc_CallbackFn
  9753 ;; This function uses a non-reentrant model
  9754 ;;
  9755                           
  9756                           
  9757                           ;psect for function _Adc_Handler
  9758  07FA                     _Adc_Handler:
  9759                           
  9760                           ;incstack = 0
  9761 ;; hardware stack exceeded
  9762                           ; Regs used in _Adc_Handler: []
  9763  07FA  0008               	return
  9764  07FB                     __end_of_Adc_Handler:
  9765  0014                     
  9766                           	psect	functab
  9767  0051                     __pfunctab:
  9768  0051                     __fptable:
  9769  0051                     fptable:
  9770  0051  00FF               	movwf	(btemp+1)& (0+127)
  9771  0052  3000               	movlw	high fptable
  9772  0053  008A               	movwf	10
  9773  0054  087F               	movf	(btemp+1)& (0+127),w
  9774  0055  0782               	addwf	2,f
  9775  0056                     fpbase:
  9776  0056  2856               	goto	fpbase	; Call via a null pointer and you will get stuck here.
  9777  0057                     fp__task5:
  9778  0057                     entry__task5:
  9779  0057  120A  118A  2C88   	ljmp	_task5
  9780  005A                     fp__task4:
  9781  005A                     entry__task4:
  9782  005A  120A  158A  2DE0   	ljmp	_task4
  9783  005D                     fp__task3:
  9784  005D                     entry__task3:
  9785  005D  120A  158A  2DBB   	ljmp	_task3
  9786  0060                     fp__task2:
  9787  0060                     entry__task2:
  9788  0060  120A  158A  2D0F   	ljmp	_task2
  9789  0063                     fp__task1:
  9790  0063                     entry__task1:
  9791  0063  120A  158A  2DA3   	ljmp	_task1
  9792  0066                     __end_of__fptable:
  9793  0066                     __i1fptable:
  9794  0066                     i1fptable:
  9795  0066  00FF               	movwf	(btemp+1)& (0+127)
  9796  0067  3000               	movlw	high i1fptable
  9797  0068  008A               	movwf	10
  9798  0069  087F               	movf	(btemp+1)& (0+127),w
  9799  006A  0782               	addwf	2,f
  9800  006B                     i1fpbase:
  9801  006B  286B               	goto	i1fpbase	; Call via a null pointer and you will get stuck here.
  9802  006C                     fp_i1_task5:
  9803  006C  120A  158A  2E3E   	ljmp	i1_task5
  9804  006F                     fp_i1_task4:
  9805  006F  120A  118A  2E97   	ljmp	i1_task4
  9806  0072                     fp_i1_task3:
  9807  0072  120A  118A  2E6C   	ljmp	i1_task3
  9808  0075                     fp_i1_task2:
  9809  0075  120A  158A  2C7F   	ljmp	i1_task2
  9810  0078                     fp_i1_task1:
  9811  0078  120A  118A  2E50   	ljmp	i1_task1
  9812  007B                     fp__Adc_Handler:
  9813  007B  120A  118A  2FFA   	ljmp	_Adc_Handler
  9814  007E                     fp__TickHandler:
  9815  007E  120A  158A  2ADE   	ljmp	_TickHandler
  9816  0081                     fp__Uart_TX_Callback:
  9817  0081  120A  118A  2FF9   	ljmp	_Uart_TX_Callback
  9818  0084                     fp__Interrupt_TimerCallbackFn:
  9819  0084  120A  158A  297E   	ljmp	_Interrupt_TimerCallbackFn
  9820  0087                     fp__Adc_CallbackFn:
  9821  0087  120A  158A  2C08   	ljmp	_Adc_CallbackFn
  9822  008A                     fp__Uart_RX_Callback:
  9823  008A  120A  158A  2975   	ljmp	_Uart_RX_Callback
  9824  008D                     __end_of__i1fptable:
  9825  007E                     btemp	set	126	;btemp
  9826  007E                     wtemp0	set	126
  9827                           
  9828                           	psect	config
  9829                           
  9830                           ;Config register CONFIG @ 0x2007
  9831                           ;	Oscillator Selection bits
  9832                           ;	FOSC = HS, HS oscillator
  9833                           ;	Watchdog Timer Enable bit
  9834                           ;	WDTE = OFF, WDT disabled
  9835                           ;	Power-up Timer Enable bit
  9836                           ;	PWRTE = OFF, PWRT disabled
  9837                           ;	Brown-out Reset Enable bit
  9838                           ;	BOREN = ON, BOR enabled
  9839                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  9840                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  9841                           ;	Data EEPROM Memory Code Protection bit
  9842                           ;	CPD = OFF, Data EEPROM code protection off
  9843                           ;	Flash Program Memory Write Enable bits
  9844                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  9845                           ;	In-Circuit Debugger Mode bit
  9846                           ;	DEBUG = 0x1, unprogrammed default
  9847                           ;	Flash Program Memory Code Protection bit
  9848                           ;	CP = OFF, Code protection off
  9849  2007                     	org	8199
  9850  2007  3F7A               	dw	16250

Data Sizes:
    Strings     73
    Constant    0
    Data        150
    BSS         86
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     38      74
    BANK1            80      3      75
    BANK3            96      0      92
    BANK2            96      0      36

Pointer List with Targets:

    TempSensor_Init@ConfigPtr.CallbackFn	PTR FTN(unsigned char ,)void  size(1) Largest target is 0
		 -> Adc_Handler(), 

    ISR$2566	PTR FTN()void  size(1) Largest target is 1
		 -> Uart_RX_Callback(), Uart_TX_Callback(), Adc_CallbackFn(), Interrupt_TimerCallbackFn(), 

    sp__utoa	PTR unsigned char  size(1) Largest target is 2
		 -> Uart_WriteInt@buff(COMMON[2]), 

    Os2_AddThreads@Tasks	PTR PTR FTN()void  size(1) Largest target is 9
		 -> Tasks(BANK3[9]), 

    TaskTable	PTR FTN()void [9] size(1) Largest target is 1
		 -> i1_task1(), i1_task2(), i1_task3(), i1_task4(), 
		 -> i1_task5(), task5(), task4(), task3(), 
		 -> task2(), task1(), 

    Os2_Init@EndTimes	PTR unsigned char  size(1) Largest target is 9
		 -> EndTimes(BANK3[9]), 

    sp__itoa	PTR unsigned char  size(1) Largest target is 2
		 -> Uart_WriteInt@buff(COMMON[2]), 

    Uart_ThisConfiguration	PTR struct . size(1) Largest target is 9
		 -> NULL(NULL[0]), Uart_Config(BANK3[9]), 

    RX_Data	PTR unsigned char  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    OS_Signal@Thread_X.Blocked_Sem	PTR char  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    OS_Signal@Thread_X.Next_Task	PTR struct TCB size(1) Largest target is 54
		 -> Tcb_Array(BANK2[36]), 

    OS_Signal@Thread_X.Task	PTR FTN()void  size(1) Largest target is 1
		 -> Task_DispCurrentTemp(), Task_HeatOrCool(), Task_MeasureTemp(), Task_WriteEeprom(), 
		 -> Task_DispSetTemp(), Task_SetTemp(), Task_UpDownFirstTime(), Task_ReadEeprom(), 
		 -> Task_OffState(), 

    CurrentThread.Blocked_Sem	PTR char  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    CurrentThread.Next_Task	PTR struct TCB size(1) Largest target is 54
		 -> Tcb_Array(BANK2[36]), 

    CurrentThread.Task	PTR FTN()void  size(1) Largest target is 1
		 -> Task_DispCurrentTemp(), Task_HeatOrCool(), Task_MeasureTemp(), Task_WriteEeprom(), 
		 -> Task_DispSetTemp(), Task_SetTemp(), Task_UpDownFirstTime(), Task_ReadEeprom(), 
		 -> Task_OffState(), 

    CurrentThread	PTR struct TCB size(1) Largest target is 54
		 -> Tcb_Array(BANK2[36]), NULL(NULL[0]), 

    OS_Init@ConfigPtr.TaskTable	PTR FTN()void [9] size(1) Largest target is 1
		 -> Task_DispCurrentTemp(), Task_HeatOrCool(), Task_MeasureTemp(), Task_WriteEeprom(), 
		 -> Task_DispSetTemp(), Task_SetTemp(), Task_UpDownFirstTime(), Task_ReadEeprom(), 
		 -> Task_OffState(), 

    S30TCB$Blocked_Sem	PTR char  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    Tcb_Array.Blocked_Sem	PTR char  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    S30TCB$Next_Task	PTR struct TCB size(1) Largest target is 54
		 -> Tcb_Array(BANK2[36]), 

    Tcb_Array.Next_Task	PTR struct TCB size(1) Largest target is 54
		 -> Tcb_Array(BANK2[36]), 

    S30TCB$Task	PTR FTN()void  size(1) Largest target is 1
		 -> Task_DispCurrentTemp(), Task_HeatOrCool(), Task_MeasureTemp(), Task_WriteEeprom(), 
		 -> Task_DispSetTemp(), Task_SetTemp(), Task_UpDownFirstTime(), Task_ReadEeprom(), 
		 -> Task_OffState(), 

    Tcb_Array.Task	PTR FTN()void  size(1) Largest target is 1
		 -> Task_DispCurrentTemp(), Task_HeatOrCool(), Task_MeasureTemp(), Task_WriteEeprom(), 
		 -> Task_DispSetTemp(), Task_SetTemp(), Task_UpDownFirstTime(), Task_ReadEeprom(), 
		 -> Task_OffState(), 

    TempSystem_Init@ConfigPtr	PTR struct . size(1) Largest target is 6
		 -> TempSystem_Configurations(BANK1[6]), 

    TempSensor_Init@ConfigPtr	PTR struct . size(1) Largest target is 11
		 -> TempSensor_Config(BANK3[11]), 

    Eep_Read@DataBufferPtr	PTR unsigned char  size(1) Largest target is 1
		 -> Eep_Compare@x(COMMON[1]), SetTemp(BANK0[1]), 

    Eep_ThisConfiguration	PTR struct . size(1) Largest target is 3
		 -> NULL(NULL[0]), Eep_Config(BANK0[3]), 

    Eep_Init@ConfigPtr	PTR struct . size(1) Largest target is 3
		 -> Eep_Config(BANK0[3]), 

    Eep_SlaveAddress	PTR unsigned char  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    Disp_Init@ConfigPtr	PTR struct . size(1) Largest target is 7
		 -> Disp_Config(BANK1[7]), 

    Interrupt_Enable@callback	PTR FTN()void  size(1) Largest target is 1
		 -> Uart_RX_Callback(), Uart_TX_Callback(), Adc_CallbackFn(), Interrupt_TimerCallbackFn(), 

    callbackTable	PTR FTN()void [5] size(1) Largest target is 1
		 -> Uart_RX_Callback(), Uart_TX_Callback(), Adc_CallbackFn(), Interrupt_TimerCallbackFn(), 

    Adc_Init@Adc_Config.CallbackFn	PTR FTN(unsigned char ,)void  size(1) Largest target is 1
		 -> Adc_Handler(), 

    Adc_Init@Adc_Config	PTR struct . size(1) Largest target is 11
		 -> TempSensor_Config(BANK3[11]), 

    Adc_ThisConfiguration.CallbackFn	PTR FTN(unsigned char ,)void  size(1) Largest target is 1
		 -> Adc_Handler(), 

    Adc_ThisConfiguration	PTR struct . size(1) Largest target is 11
		 -> NULL(NULL[0]), TempSensor_Config(BANK3[11]), 

    Adc_Result	PTR PTR volatile unsigned char  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    Gpt_Configg.CallbackFn	PTR FTN()void  size(1) Largest target is 1
		 -> Absolute function(), TickHandler(), 

    F1300.CallbackFn	PTR FTN()void  size(1) Largest target is 1
		 -> Absolute function(), TickHandler(), 

    Gpt_Config2.CallbackFn	PTR FTN()void  size(1) Largest target is 1
		 -> Absolute function(), TickHandler(), 

    F1289.CallbackFn	PTR FTN()void  size(1) Largest target is 1
		 -> Absolute function(), TickHandler(), 

    Pwm_Init@ConfigPtr	PTR struct . size(1) Largest target is 7
		 -> Pwm_Config(BANK1[7]), 

    Pwm_ThisConfiguration	PTR struct . size(1) Largest target is 7
		 -> NULL(NULL[0]), Pwm_Config(BANK1[7]), 

    Port_InitPort@ConfigPtr	PTR struct . size(1) Largest target is 9
		 -> Disp_PinsConfiguration(BANK1[9]), 

    Port_Init@ConfigPtr	PTR struct . size(2) Largest target is 15
		 -> Uart_PinsConfig(BANK1[6]), Adc_PortConfig(BANK3[9]), Pwm_Channels(BANK1[6]), I2c_ConfigPins(BANK1[6]), 
		 -> TempSystem_Configurations(BANK1[6]), Port_ButtonsConfig(BANK3[15]), Disp_PinsConfiguration(BANK1[9]), 

    Port_Init@Port_Dir_Ptr	PTR volatile unsigned char  size(2) Largest target is 512
		 -> RAM(DATA[512]), 

    Port_Init@Port_Ptr	PTR volatile unsigned char  size(2) Largest target is 512
		 -> RAM(DATA[512]), NULL(NULL[0]), 

    I2c_ReadIB@DataBufferPtr	PTR unsigned char  size(1) Largest target is 1
		 -> Eep_Compare@x(COMMON[1]), SetTemp(BANK0[1]), 

    I2c_WriteIB@DataBufferPtr	PTR unsigned char  size(1) Largest target is 1
		 -> Eep_Erase@x(COMMON[1]), Eep_Read@EepromAddress(BANK0[1]), Eep_Write@EepromAddress(COMMON[1]), 

    I2c_ThisConfiguration	PTR struct . size(1) Largest target is 12
		 -> NULL(NULL[0]), I2c_Config(BANK3[12]), 

    I2c_Init@Config_Ptr	PTR struct . size(1) Largest target is 12
		 -> I2c_Config(BANK3[12]), 

    Gpt_ThisConfiguration_2.CallbackFn	PTR FTN()void  size(1) Largest target is 1
		 -> Absolute function(), TickHandler(), 

    Gpt_ThisConfiguration_2	PTR struct . size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    Gpt_Init@ConfigPtr.CallbackFn	PTR FTN()void  size(1) Largest target is 1
		 -> Absolute function(), TickHandler(), 

    Gpt_Init@ConfigPtr	PTR struct . size(1) Largest target is 8
		 -> Pwm_SetPeriodAndDuty@Gpt_Configg(COMMON[8]), Pwm_Init@Gpt_Config2(BANK0[8]), Gpt_Config(BANK1[8]), 

    Gpt_ThisConfiguration_1.CallbackFn	PTR FTN()void  size(1) Largest target is 1
		 -> Absolute function(), TickHandler(), 

    Gpt_ThisConfiguration_1	PTR struct . size(1) Largest target is 8
		 -> Pwm_SetPeriodAndDuty@Gpt_Configg(COMMON[8]), Pwm_Init@Gpt_Config2(BANK0[8]), NULL(NULL[0]), Gpt_Config(BANK1[8]), 

    Dio_WritePort@Port_Ptr	PTR volatile unsigned char  size(2) Largest target is 512
		 -> RAM(DATA[512]), NULL(NULL[0]), 

    Dio_ReadChannel@Pin_Ptr	PTR volatile unsigned char  size(2) Largest target is 512
		 -> RAM(DATA[512]), NULL(NULL[0]), 

    Tasks	PTR FTN()void [9] size(1) Largest target is 1
		 -> task5(), task4(), task3(), task2(), 
		 -> task1(), 

    S180$CallbackFn	PTR FTN(unsigned char ,)void  size(1) Largest target is 1
		 -> Adc_Handler(), 

    TempSensor_Config.CallbackFn	PTR FTN(unsigned char ,)void  size(1) Largest target is 1
		 -> Adc_Handler(), 

    S138$CallbackFn	PTR FTN()void  size(1) Largest target is 1
		 -> Absolute function(), TickHandler(), 

    Gpt_Config.CallbackFn	PTR FTN()void  size(1) Largest target is 1
		 -> Absolute function(), TickHandler(), 

    S38$TaskTable	PTR FTN()void [9] size(1) Largest target is 1
		 -> Task_DispCurrentTemp(), Task_HeatOrCool(), Task_MeasureTemp(), Task_WriteEeprom(), 
		 -> Task_DispSetTemp(), Task_SetTemp(), Task_UpDownFirstTime(), Task_ReadEeprom(), 
		 -> Task_OffState(), 

    Os_Config.TaskTable	PTR FTN()void [9] size(1) Largest target is 1
		 -> Task_DispCurrentTemp(), Task_HeatOrCool(), Task_MeasureTemp(), Task_WriteEeprom(), 
		 -> Task_DispSetTemp(), Task_SetTemp(), Task_UpDownFirstTime(), Task_ReadEeprom(), 
		 -> Task_OffState(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    i1_task5->i1_Disp_DisplayNb
    i1_Disp_DisplayNb->i1___lwmod
    i1___lwmod->i1___lwdiv
    i1_Dio_WritePort->i1___lbmod
    i1_task4->i1_Dio_ReadChannel
    i1_task3->i1_Dio_ReadChannel
    i1_task2->i1_Eep_Read
    i1_Eep_Read->i1_I2c_ReadIB
    i1_Eep_Read->i1_I2c_WriteIB
    i1_Eep_Read->i1_I2c_WriteSlaveAddress
    i1_task1->i1_Dio_ReadChannel
    _Adc_CallbackFn->___awdiv

Critical Paths under _main in BANK0

    _task5->_Disp_DisplayNb
    _Disp_DisplayNb->___lwmod
    ___lwmod->___lwdiv
    _Dio_WritePort->___lbmod
    _task4->_Dio_ReadChannel
    _task3->_Dio_ReadChannel
    _task2->_Eep_Read
    _Eep_Read->_I2c_ReadIB
    _Eep_Read->_I2c_WriteIB
    _Eep_Read->_I2c_WriteSlaveAddress
    _task1->_Dio_ReadChannel
    _TempSystem_Init->_Pwm_Init
    _Pwm_Init->_Gpt_Init
    ___lwdiv->___wmul
    _Gpt_Init->___aldiv
    _TempSensor_Init->_Adc_Init
    _Adc_Init->_Port_Init
    _Eep_Init->_I2c_Init
    _I2c_Init->___lldiv
    _Disp_Init->_Port_InitPort
    _Port_InitPort->_Port_Init
    _Port_Init->___bmul

Critical Paths under _ISR in BANK0

    i1_task5->i1_Disp_DisplayNb

Critical Paths under _main in BANK1

    _Os2_start->_Init_Task
    _Init_Task->_TempSystem_Init

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   33394
                     _Os2_AddThreads
                           _Os2_Init
                          _Os2_start
                              _task1
                              _task2
                              _task3
                              _task4
                              _task5
 ---------------------------------------------------------------------------------
 (1) _Os2_start                                            0     0      0   28190
                          _Init_Task
                      _Os2_scheduler
 ---------------------------------------------------------------------------------
 (2) _Os2_scheduler                                        0     0      0    4914
                              _task1 *
                              _task2 *
                              _task3 *
                              _task4 *
                              _task5 *
 ---------------------------------------------------------------------------------
 (1) _task5                                                0     0      0    3848
                     _Disp_DisplayNb
 ---------------------------------------------------------------------------------
 (2) _Disp_DisplayNb                                       4     3      1    3848
                                             24 BANK0      4     3      1
                      _Dio_WritePort
                _Disp_GetDislayValue
                            ___lbdiv
                            ___lbmod
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4     437
                                             19 BANK0      5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lbmod                                              5     4      1     311
                                              6 BANK0      5     4      1
 ---------------------------------------------------------------------------------
 (3) ___lbdiv                                              4     3      1     314
                                              6 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (3) _Disp_GetDislayValue                                  3     3      0      22
                                              6 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (3) _Dio_WritePort                                        4     3      1    1107
                                             11 BANK0      4     3      1
                _Disp_GetDislayValue (ARG)
                            ___lbdiv (ARG)
                            ___lbmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _task4                                                0     0      0     117
                    _Dio_ReadChannel
 ---------------------------------------------------------------------------------
 (1) _task3                                                0     0      0     117
                    _Dio_ReadChannel
 ---------------------------------------------------------------------------------
 (1) _task2                                                0     0      0     715
                           _Eep_Read
 ---------------------------------------------------------------------------------
 (2) _Eep_Read                                             7     5      2     715
                                              7 BANK0      7     5      2
                            _I2C_ACK
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                         _I2c_ReadIB
                        _I2c_WriteIB
              _I2c_WriteSlaveAddress
 ---------------------------------------------------------------------------------
 (3) _I2c_WriteSlaveAddress                                1     1      0      22
                                              6 BANK0      1     1      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2c_WriteIB                                          2     1      1     224
                                              6 BANK0      1     0      1
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2c_ReadIB                                           2     1      1      98
                                              6 BANK0      1     0      1
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_RepeatedStart                             0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_ACK                                              0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (4) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _task1                                                0     0      0     117
                    _Dio_ReadChannel
 ---------------------------------------------------------------------------------
 (2) _Dio_ReadChannel                                      6     6      0     117
                                              6 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) _Init_Task                                            2     2      0   23276
                                              1 BANK1      2     2      0
                          _Disp_Init
                           _Eep_Init
                           _Gpt_Init
                          _Port_Init
                    _TempSensor_Init
                    _TempSystem_Init
 ---------------------------------------------------------------------------------
 (3) _TempSystem_Init                                      1     1      0   13188
                                              0 BANK1      1     1      0
                          _Port_Init
                           _Pwm_Init
 ---------------------------------------------------------------------------------
 (4) _Pwm_Init                                            15    15      0   12333
                                             23 BANK0     15    15      0
                           _Gpt_Init
                          _Port_Init
                            ___aldiv
                             ___bmul
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4    3027
                                              6 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4    1381
                                             12 BANK0      7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___bmul                                               3     2      1     351
                                              6 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (5) _Gpt_Init                                             3     3      0    3888
                                             20 BANK0      3     3      0
                   _Interrupt_Enable
                            ___aldiv
 ---------------------------------------------------------------------------------
 (5) ___aldiv                                             14     6      8    2305
                                              6 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (3) _TempSensor_Init                                      1     1      0    1876
                                             23 BANK0      1     1      0
                           _Adc_Init
 ---------------------------------------------------------------------------------
 (4) _Adc_Init                                             5     5      0    1809
                                             18 BANK0      5     5      0
                   _Interrupt_Enable
                          _Port_Init
 ---------------------------------------------------------------------------------
 (6) _Interrupt_Enable                                     2     1      1     700
                                              6 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (3) _Eep_Init                                             1     1      0    1436
                                             21 BANK0      1     1      0
                           _I2c_Init
 ---------------------------------------------------------------------------------
 (4) _I2c_Init                                             2     2      0    1338
                                             19 BANK0      2     2      0
                          _Port_Init
                            ___lldiv
 ---------------------------------------------------------------------------------
 (5) ___lldiv                                             13     5      8     452
                                              6 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (3) _Disp_Init                                            4     4      0    2032
                                             21 BANK0      4     4      0
                          _Port_Init
                      _Port_InitPort
 ---------------------------------------------------------------------------------
 (4) _Port_InitPort                                        3     3      0     923
                                             18 BANK0      3     3      0
                          _Port_Init
 ---------------------------------------------------------------------------------
 (5) _Port_Init                                            9     7      2     757
                                              9 BANK0      9     7      2
                             ___bmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _Os2_Init                                             4     4      0     145
                                              6 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _Os2_AddThreads                                       4     4      0     145
                                              6 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _ISR                                                  4     4      0    2861
                                              2 BANK0      4     4      0
                     _Adc_CallbackFn *
          _Interrupt_TimerCallbackFn *
                   _Uart_RX_Callback *
                   _Uart_TX_Callback *
 ---------------------------------------------------------------------------------
 (8) _Uart_TX_Callback                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _Uart_RX_Callback                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _Interrupt_TimerCallbackFn                            0     0      0    2082
                   Absolute function *
                        _TickHandler *
 ---------------------------------------------------------------------------------
 (9) _TickHandler                                          0     0      0    2082
                    i1_Os2_scheduler
 ---------------------------------------------------------------------------------
 (10) i1_Os2_scheduler                                     0     0      0    2082
                            i1_task1 *
                            i1_task2 *
                            i1_task3 *
                            i1_task4 *
                            i1_task5 *
 ---------------------------------------------------------------------------------
 (11) i1_task5                                             0     0      0    1463
                   i1_Disp_DisplayNb
 ---------------------------------------------------------------------------------
 (12) i1_Disp_DisplayNb                                    4     3      1    1463
                                             12 COMMON     2     1      1
                                              0 BANK0      2     2      0
                    i1_Dio_WritePort
              i1_Disp_GetDislayValue
                          i1___lbdiv
                          i1___lbmod
                          i1___lwdiv
                          i1___lwmod
 ---------------------------------------------------------------------------------
 (13) i1___lwmod                                           5     1      4     211
                                              7 COMMON     5     1      4
                          i1___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (13) i1___lwdiv                                           7     3      4     266
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (13) i1___lbmod                                           5     4      1     211
                                              0 COMMON     5     4      1
 ---------------------------------------------------------------------------------
 (13) i1___lbdiv                                           4     3      1     214
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (13) i1_Disp_GetDislayValue                               3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (13) i1_Dio_WritePort                                     4     3      1     381
                                              5 COMMON     4     3      1
              i1_Disp_GetDislayValue (ARG)
                          i1___lbdiv (ARG)
                          i1___lbmod (ARG)
 ---------------------------------------------------------------------------------
 (11) i1_task4                                             0     0      0     117
                  i1_Dio_ReadChannel
 ---------------------------------------------------------------------------------
 (11) i1_task3                                             0     0      0     117
                  i1_Dio_ReadChannel
 ---------------------------------------------------------------------------------
 (11) i1_task2                                             0     0      0     268
                         i1_Eep_Read
 ---------------------------------------------------------------------------------
 (12) i1_Eep_Read                                          7     5      2     268
                                              1 COMMON     7     5      2
                          i1_I2C_ACK
         i1_I2C_Master_RepeatedStart
                 i1_I2C_Master_Start
                  i1_I2C_Master_Stop
                       i1_I2c_ReadIB
                      i1_I2c_WriteIB
            i1_I2c_WriteSlaveAddress
 ---------------------------------------------------------------------------------
 (13) i1_I2c_WriteSlaveAddress                             1     1      0      22
                                              0 COMMON     1     1      0
                  i1_I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (13) i1_I2c_WriteIB                                       2     1      1      54
                                              0 COMMON     1     0      1
                  i1_I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (13) i1_I2c_ReadIB                                        2     1      1      48
                                              0 COMMON     1     0      1
                  i1_I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (13) i1_I2C_Master_Stop                                   0     0      0       0
                  i1_I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (13) i1_I2C_Master_Start                                  0     0      0       0
                  i1_I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (13) i1_I2C_Master_RepeatedStart                          0     0      0       0
                  i1_I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (13) i1_I2C_ACK                                           0     0      0       0
                  i1_I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (14) i1_I2C_Master_Wait                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (11) i1_task1                                             0     0      0     117
                  i1_Dio_ReadChannel
 ---------------------------------------------------------------------------------
 (12) i1_Dio_ReadChannel                                   6     6      0     117
                                              0 COMMON     6     6      0
 ---------------------------------------------------------------------------------
 (9) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _Adc_CallbackFn                                       0     0      0     779
                        _Adc_Handler *
                            ___awdiv
 ---------------------------------------------------------------------------------
 (9) ___awdiv                                              8     4      4     726
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (9) _Adc_Handler                                          1     0      1      53
                                              0 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Os2_AddThreads
   _Os2_Init
   _Os2_start
     _Init_Task
       _Disp_Init
         _Port_Init
           ___bmul (ARG)
         _Port_InitPort
           _Port_Init
             ___bmul (ARG)
       _Eep_Init
         _I2c_Init
           _Port_Init
             ___bmul (ARG)
           ___lldiv
       _Gpt_Init
         _Interrupt_Enable
         ___aldiv
       _Port_Init
         ___bmul (ARG)
       _TempSensor_Init
         _Adc_Init
           _Interrupt_Enable
           _Port_Init
             ___bmul (ARG)
       _TempSystem_Init
         _Port_Init
           ___bmul (ARG)
         _Pwm_Init
           _Gpt_Init
             _Interrupt_Enable
             ___aldiv
           _Port_Init
             ___bmul (ARG)
           ___aldiv
           ___bmul
           ___lwdiv
             ___wmul (ARG)
           ___wmul
     _Os2_scheduler
       _task1 *
         _Dio_ReadChannel
       _task2 *
         _Eep_Read
           _I2C_ACK
             _I2C_Master_Wait
           _I2C_Master_RepeatedStart
             _I2C_Master_Wait
           _I2C_Master_Start
             _I2C_Master_Wait
           _I2C_Master_Stop
             _I2C_Master_Wait
           _I2c_ReadIB
             _I2C_Master_Wait
           _I2c_WriteIB
             _I2C_Master_Wait
           _I2c_WriteSlaveAddress
             _I2C_Master_Wait
       _task3 *
         _Dio_ReadChannel
       _task4 *
         _Dio_ReadChannel
       _task5 *
         _Disp_DisplayNb
           _Dio_WritePort
             _Disp_GetDislayValue (ARG)
             ___lbdiv (ARG)
             ___lbmod (ARG)
           _Disp_GetDislayValue
           ___lbdiv
           ___lbmod
           ___lwdiv
             ___wmul (ARG)
           ___lwmod
             ___lwdiv (ARG)
               ___wmul (ARG)
   _task1
     _Dio_ReadChannel
   _task2
     _Eep_Read
       _I2C_ACK
         _I2C_Master_Wait
       _I2C_Master_RepeatedStart
         _I2C_Master_Wait
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2c_ReadIB
         _I2C_Master_Wait
       _I2c_WriteIB
         _I2C_Master_Wait
       _I2c_WriteSlaveAddress
         _I2C_Master_Wait
   _task3
     _Dio_ReadChannel
   _task4
     _Dio_ReadChannel
   _task5
     _Disp_DisplayNb
       _Dio_WritePort
         _Disp_GetDislayValue (ARG)
         ___lbdiv (ARG)
         ___lbmod (ARG)
       _Disp_GetDislayValue
       ___lbdiv
       ___lbmod
       ___lwdiv
         ___wmul (ARG)
       ___lwmod
         ___lwdiv (ARG)
           ___wmul (ARG)

 _ISR (ROOT)
   _Adc_CallbackFn *
     _Adc_Handler *
     ___awdiv *
   _Interrupt_TimerCallbackFn *
     Absolute function(Fake) *
     _TickHandler *
       i1_Os2_scheduler
         i1_task1 *
           i1_Dio_ReadChannel
         i1_task2 *
           i1_Eep_Read
             i1_I2C_ACK
               i1_I2C_Master_Wait
             i1_I2C_Master_RepeatedStart
               i1_I2C_Master_Wait
             i1_I2C_Master_Start
               i1_I2C_Master_Wait
             i1_I2C_Master_Stop
               i1_I2C_Master_Wait
             i1_I2c_ReadIB
               i1_I2C_Master_Wait
             i1_I2c_WriteIB
               i1_I2C_Master_Wait
             i1_I2c_WriteSlaveAddress
               i1_I2C_Master_Wait
         i1_task3 *
           i1_Dio_ReadChannel
         i1_task4 *
           i1_Dio_ReadChannel
         i1_task5 *
           i1_Disp_DisplayNb
             i1_Dio_WritePort
               i1_Disp_GetDislayValue (ARG)
               i1___lbdiv (ARG)
               i1___lbmod (ARG)
             i1_Disp_GetDislayValue
             i1___lbdiv
             i1___lbmod
             i1___lwdiv
             i1___lwmod
               i1___lwdiv (ARG)
   _Uart_RX_Callback *
   _Uart_TX_Callback *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0      5C       9       95.8%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0      24      11       37.5%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      3      4B       7       93.8%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     26      4A       5       92.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0     123      12        0.0%
ABS                  0      0     123       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Thu Jul 16 19:54:30 2020

                 ??_Interrupt_Enable 0027               i1Disp_GetDislayValue@v 0072  
                                  pc 0002                       ___bmul@product 0027  
                  ??_TempSensor_Init 0037                         ___awdiv@sign 0075  
                                 _ii 005A                                   fsr 0004  
                ___wmul@multiplicand 0028                    _TempSensor_Config 01BD  
                                l320 0D9C                                  l161 0D20  
                                l314 0D7B                                  l148 0DA3  
                                l180 0DE0                                  l149 0DB9  
                                l326 0D28                                  l335 0D83  
                                l159 0D0F                                  l167 0DBB  
                                l443 0758                                  l196 0488  
                                l641 0D38                                  _GIE 005F  
                                _PR2 0092                                  _ISR 0A9E  
                    __end_of_I2C_ACK 0D90                      ?_Os2_AddThreads 0070  
                                fsr0 0004                                  indf 0000  
             _Disp_PinsConfiguration 00A0                   Disp_DisplayNb@Mode 0038  
             _Dio_ConfigGroupChannel 0190                                 ?_ISR 0070  
           __size_of_TempSystem_Init 0015                                 l1060 02EE  
                               l3301 0586                                 l1198 0601  
                               l4023 09DA                                 l3321 058B  
                               l3313 0589                                 l3305 0587  
                               l4035 0A1E                                 l4211 034A  
                               l3411 05FB                                 l3333 058E  
                               l3325 058C                                 l3317 058A  
                               l3309 0588                                 l4151 077B  
                               l4207 033C                                 l4303 02A9  
                               l3343 0590                                 l4217 039A  
                               l4313 09C0                                 l3337 058F  
                               l3329 058D                                 l3281 0581  
                               l3273 057F                                 l3425 060E  
                               l3441 0628                                 l3433 0614  
                               l4163 0791                                 l4251 01D2  
                               l4229 03FF                                 l4157 0785  
                               l4309 02DB                                 l4245 01AF  
                               l4317 09C8                                 l3621 0D54  
                               l3605 0D43                                 l3293 0584  
                               l3285 0582                                 l3277 0580  
                               l4405 04DE                                 l4351 0B78  
                               l4511 0706                                 l4263 0229  
                               l3623 0D6E                                 l4169 079D  
                               l4185 02FD                                 l4257 01F5  
                               l4329 098E                                 l3297 0585  
                               l3289 0583                                 l3481 0638  
                               l4363 0BA3                                 l4195 0311  
                               l4275 0242                                 l4611 0091  
                               l4603 0B61                                 l4453 09FC  
                               l4541 0478                                 l4517 0767  
                               l4269 0237                                 l4525 0495  
                               l4287 025A                                 l3591 0E3B  
                               l4631 0A4D                                 l4297 0286  
                               l4377 05D9                                 l3593 0E3C  
                               l3489 064B                                 l3825 0DB0  
                               l4539 0440                                 l4707 0598  
                               l3835 0D22                                 l3843 0DCE  
                               l4389 05F0                                 l4485 0138  
                               l4581 0B25                                 l4629 0A3C  
                               l3863 0DFA                                 l4591 0B3D  
                               l4489 0165                                 l3849 0DDE  
                               l3873 0E0E                                 l3859 0DF0  
                               l4595 0B49                                 l4587 0B31  
                               l3869 0E05                                 l4599 0B55  
                               _ADIE 0466                                 _ADIF 0066  
                               STR_1 07B0                                 STR_2 07D3  
                               STR_3 07C3                                 STR_4 07EE  
                               STR_5 07E1                                 u3305 09F5  
                               u3315 0A39                                 u2515 063E  
                               u2604 0E31                                 u2605 0E2F  
                               u2635 0D5D                                 u3524 03D2  
                               u3525 03D0                                 u4157 04B7  
                               u3534 03F1                                 u3535 03EF  
                               u4095 00AB                                 u4167 04D8  
                               u4177 050C                                 u3554 0421  
                               u3555 041F                                 u3635 0210  
                               u4187 054B                                 _PEIE 005E  
                               u3805 0B8B                                 u3485 0324  
                               u4197 0533                                 _INTE 005C  
                               u3910 00F2                                 _INTF 0059  
                               u3735 02C4                                 u3905 0A16  
                               _RCIE 0465                                 _RCIF 0065  
                               u3845 05E2                                 u3955 0712  
                               u3885 04F0                                 u3895 037B  
                               u3985 044D                                 _TMR1 000E  
                               _TXIE 0464                                 _TXIF 0064  
                         _Eep_Config 0067     __end_of_I2C_Master_RepeatedStart 0D73  
                               _main 0A3C                        i1___lbmod@rem 0074  
       ??i1_I2C_Master_RepeatedStart 0070                           Init_Task@i 00E9  
                               btemp 007E                   __size_ofi1_I2C_ACK 0005  
                               start 0012                      __end_ofi1_task1 066C  
                    __end_ofi1_task2 0C94                      __end_ofi1_task3 0697  
                    __end_ofi1_task4 06D3                      __end_ofi1_task5 0E4F  
                   ??_Adc_CallbackFn 0078                    ___bmul@multiplier 0028  
                    _Gpt_ReloadValue 0058                __end_of_Dio_WritePort 057D  
                   __end_of_I2c_Init 039A                                ??_ISR 0022  
                   ?i1_Os2_scheduler 0070              Disp_DisplayNb@blinkFlag 0054  
               Disp_GetDislayValue@v 0028                  __size_of_I2c_ReadIB 0010  
                   ?_I2C_Master_Wait 0070                     ?_I2C_Master_Stop 0070  
                    __end_of___aldiv 0353                                ?_main 0070  
                    __end_of___awdiv 0C7F                      __end_of___lbdiv 0610  
                    __end_of___lbmod 062C                          ?i1_Eep_Read 0071  
                    __end_of___lldiv 0BAC                      ___awdiv@divisor 0070  
                              _T1CON 0010                                _T2CON 0012  
                    __end_of___lwdiv 05F5                                i1l320 0D08  
                              i1l161 0C90                                i1l314 0CE7  
                              i1l148 0650                                i1l180 0697  
                              i1l149 0668                                i1l326 0C98  
                              i1l335 0CEF                                i1l159 0C7F  
                              i1l167 066C                      __end_of___lwmod 0650  
                              i1l196 0E3E                                i1l524 0AD1  
                              i1l641 0CA8                      ___awdiv@counter 0074  
                              _RCREG 001A                                _SSPIF 0063  
           Dio_ReadChannel@ChannelId 002B                                _Tasks 01DA  
                              _State 0064  __size_ofi1_I2C_Master_RepeatedStart 0003  
                 i1___lwmod@dividend 0079                     __end_of_Adc_Init 076F  
                              _task1 0DA3                                _task2 0D0F  
                              _task3 0DBB                                _task4 0DE0  
                              _task5 0488                                fpbase 0056  
                              pclath 000A                                status 0003  
                              wtemp0 007E                   __size_ofi1___lbdiv 001B  
                         _Gpt_Config 00A9                   __size_ofi1___lbmod 001C  
                    ___lbdiv@divisor 0026                     __end_of_Eep_Init 09BE  
                   __end_of_Eep_Read 0D70                   __size_ofi1___lwdiv 002A  
                    ___lbdiv@counter 0028                   __size_ofi1___lwmod 0024  
                   ?_Dio_ReadChannel 0070                     __end_of_Os2_Init 09F8  
             Port_InitPort@ConfigPtr 0032                      __initialization 0015  
                       __end_of_main 0A67                    ?_Uart_RX_Callback 0070  
             __size_ofi1_I2c_WriteIB 000D                     __end_of_Gpt_Init 02DE  
                      ?i1_I2c_ReadIB 0070                            ??_I2C_ACK 0026  
         i1Dio_ReadChannel@ChannelId 0075                   ??_Uart_RX_Callback 0070  
                             ??_main 0046                        ??_TickHandler 007E  
                  __end_ofi1_I2C_ACK 0CFC                   __size_of_Disp_Init 0056  
                  ?_I2C_Master_Start 0070                   __size_of_Os2_start 0006  
                   __end_of_Pwm_Init 0180                    Pwm_Init@ConfigPtr 003D  
         ?_Interrupt_TimerCallbackFn 0070                   ??_I2C_Master_Start 0026  
                  ?_Uart_TX_Callback 0070                               _ADCON0 001F  
                             _ADCON1 009F                          _Disp_Config 00B8  
                             _ADRESH 001E                               _ADRESL 009E  
                             ?_task1 0070                               ?_task2 0070  
                             ?_task3 0070                               ?_task4 0070  
                             ?_task5 0070                               _CCPR1L 0015  
                   ___awdiv@dividend 0072                 __size_of_I2c_WriteIB 000D  
                             i1l3001 0F39                               i1l3021 0F3E  
                             i1l3013 0F3C                               i1l3005 0F3A  
                             i1l3101 0FD7                               i1l3031 0F40  
                             i1l3025 0F3F                               i1l3017 0F3D  
                             i1l3009 0F3B                               i1l3113 0FE8  
                             i1l3121 0FFB                               i1l3043 0F81  
                             i1l4013 0C7A                               i1l1198 0F87  
                 ??_Uart_TX_Callback 0070                               i1l4009 0C72  
                             i1l3057 0F94                               i1l3073 0FAE  
                             i1l3065 0F9A                               i1l3505 06FC  
                             i1l3089 0FC0                               i1l3507 06FD  
                             i1l4059 0C34                               u202_25 0FEE  
                             i1l3527 0E92                               i1l3801 06B7  
                             i1l3811 06CF                               i1l3573 0CC2  
                             i1l3557 0CB3                               i1l3575 0CDB  
                             i1l3807 06C4                               i1l2961 0F2F  
                             i1l3817 0E4B                               i1l4561 0AEC  
                             i1l3763 065D                               i1l4709 0F48  
                             i1l2981 0F34                               i1l2973 0F32  
                             i1l2965 0F30                               i1l3773 0C92  
                             i1l3781 0681                               i1l4573 0B10  
                             i1l4565 0AF8                               i1l4661 0AC8  
                             i1l4645 0AA6                               i1l4655 0ABD  
                             i1l2993 0F37                               i1l2985 0F35  
                             i1l2977 0F33                               i1l2969 0F31  
                             i1l4577 0B1C                               i1l4569 0B04  
                             i1l4649 0AB0                               i1l3787 0693  
                             i1l3981 0C44                               i1l2997 0F38  
                             i1l2989 0F36                               i1l3797 06AB  
                             i1l3987 0C4D                               _INTEDG 040E  
                             i1l3997 0C5B                            ??i1_task1 0076  
                          ??i1_task2 0078                            ??i1_task3 0076  
                          ??i1_task4 0076                            ??i1_task5 007E  
                             u420_27 0E6D                               u253_24 06F2  
                             u253_25 06F0                               u421_27 0E8C  
                             u422_27 0EC0                               u327_25 0C64  
                             u423_27 0EFB                               u424_27 0EE5  
                             u257_25 0EA4                               u259_25 0CCB  
                             u198_25 0FC9             TempSystem_Init@ConfigPtr 00E8  
                         __i1fptable 0066                               _TMR1IE 0460  
                             _TMR1IF 0060                               _SSPADD 0093  
                 __size_of_Init_Task 0032                               _SSPCON 0014  
                             _SSPBUF 0013                       _BlinkingPeriod 0056  
                  ?i1_Disp_DisplayNb 007C                     __end_of__fptable 0066  
            __size_of_Disp_DisplayNb 00D5                    ??_TempSystem_Init 0046  
                     fp__Adc_Handler 007B                  __size_ofi1_Eep_Read 0039  
                     Eep_Read@Length 0028                   ??i1_Disp_DisplayNb 0020  
                  Pwm_Init@DutyCycle 003B              i1_I2c_WriteSlaveAddress 0CE0  
           _I2C_Master_RepeatedStart 0D70                __end_of_Os2_scheduler 0B64  
                             ___bmul 098C                            ??___aldiv 002E  
                     ??i1_I2c_ReadIB 0071                               ___wmul 09BE  
                          ??___awdiv 0074                            ??___lbdiv 0027  
                          ??___lbmod 0027                            ??___lldiv 002E  
                        entry__task1 0063                          entry__task2 0060  
                        entry__task3 005D                          entry__task4 005A  
                          ??___lwdiv 0030                          entry__task5 0057  
                          ??___lwmod 0037                           _Pwm_Config 00B1  
                   ___awdiv@quotient 0076                    __end_ofi1___lbdiv 0F96  
                             fptable 0051                    __end_ofi1___lbmod 0FB2  
                 Adc_Init@Adc_Config 0036          __size_ofi1_I2C_Master_Start 0003  
                  __end_ofi1___lwdiv 0FDC                               fptotal 000A  
                  __end_ofi1___lwmod 1000                   __size_of_Port_Init 0094  
                             saved_w 007E                         ?_Adc_Handler 0070  
                 Dio_WritePort@Level 002B              i1Eep_Read@EepromAddress 0077  
                __end_of_TickHandler 0AE0                        i1_I2c_WriteIB 0CFF  
  __end_of_Interrupt_TimerCallbackFn 098C                         ??_I2c_ReadIB 0027  
                   ___lbdiv@dividend 0027                            ?_I2c_Init 0070  
 __end_ofi1_I2C_Master_RepeatedStart 0CE0           i1_I2C_Master_RepeatedStart 0CDD  
                    ___lbmod@divisor 0026              __end_of__initialization 004D  
                    ___lbmod@counter 0029                      _TempSensor_Init 0484  
                ___bmul@multiplicand 0026                    __end_of_Disp_Init 0484  
              __end_of_Port_InitPort 0A19                    __end_of_Os2_start 0B25  
              _I2c_ThisConfiguration 0062                       __pcstackCOMMON 0070  
                       __pidataBANK0 0000                         __pidataBANK1 0A67  
                       __pidataBANK3 0BAC                        __end_of_task1 0DBB  
                      __end_of_task2 0D24                        __end_of_task3 0DE0  
                      __end_of_task4 0E10                        __end_of_task5 0499  
                   ??_Os2_AddThreads 0026                            ?_Adc_Init 0070  
              _Eep_ThisConfiguration 005E                     ___lbdiv@quotient 0029  
                 __end_of_I2c_ReadIB 0D34                    __end_of_Init_Task 00BF  
        __end_of_Disp_GetDislayValue 05CB             __size_ofi1_Dio_WritePort 000F  
          __size_of_Interrupt_Enable 003B                            ?_Eep_Init 0070  
                          ?_Eep_Read 0027                            ?_Os2_Init 0070  
                     ?i1_I2c_WriteIB 0070                   Disp_Init@ConfigPtr 0036  
                            ??_task1 002C                              ??_task2 002E  
                            ??_task3 002C                              ??_task4 002C  
                            ??_task5 003C                           ??_I2c_Init 0033  
                         __pbssBANK0 0046                           __pbssBANK1 00D7  
                         __pbssBANK2 0110                            ?_Gpt_Init 0070  
          ??i1_I2c_WriteSlaveAddress 0070                    __end_of_Port_Init 042E  
                         __pmaintext 0A3C                              ?___bmul 0026  
                          ?_Pwm_Init 0070                _I2c_WriteSlaveAddress 0D73  
                            ?___wmul 0026                i1_Disp_GetDislayValue 0F2D  
                         __pintentry 0004                              _I2C_ACK 0D8B  
                            _CCP1CON 0017                           ??_Adc_Init 0032  
                            _ACKSTAT 048E                     Os2_Init@EndTimes 0027  
                 I2c_WriteIB@Channel 0070                         ??i1_Eep_Read 0073  
          _TempSystem_Configurations 00D1                          _TickHandler 0ADE  
                         ??_Eep_Init 0035                           ??_Eep_Read 0029  
                         ??_Os2_Init 0026              __end_of_TempSensor_Init 0488  
                            _SSPCON2 0091                 __end_ofi1_I2c_ReadIB 0CA4  
                            _SSPSTAT 0094                Eep_Read@EepromAddress 002D  
                         __stringtab 07AA                            Adc_Init@i 0034  
                         ??_Gpt_Init 0034                              i1_task1 0650  
                            i1_task2 0C7F                              i1_task3 066C  
                            i1_task4 0697                              i1_task5 0E3E  
                            _RX_Data 005D                              i1fpbase 006B  
                     _Disp_DisplayNb 0499                   Port_Init@ConfigPtr 0029  
                 __end_ofi1_Eep_Read 0CDD                          _Uart_Config 01E3  
                            _SetTemp 0066                           ??_Pwm_Init 0037  
                            ___aldiv 02DE                      __size_of___bmul 000E  
                            ___awdiv 0C3A                              ___lbdiv 05F5  
                            ___lbmod 0610                              ___lldiv 0B64  
                    __size_of___wmul 0019                              ___lwdiv 05CB  
                            ___lwmod 062C                       _Eeprom_Address 0065  
                            __ptext1 0B1F                              __ptext2 0B25  
                            __ptext3 0DE0                              __ptext4 0DBB  
                            __ptext5 0D0F                              __ptext6 0DA3  
                            __ptext7 0488                              __ptext8 0499  
                            __ptext9 062C                    i1_I2C_Master_Wait 0CEF  
                  i1_I2C_Master_Stop 0D0C                  __size_of__i1fptable 0027  
                       __size_of_ISR 0040                        _callbackTable 004F  
                  i1___lwdiv@divisor 0070                   i1___lbdiv@dividend 0071  
           __size_ofi1_Os2_scheduler 003F                    i1___lwdiv@counter 0076  
                    ??i1_I2c_WriteIB 0071                   ?i1_I2C_Master_Wait 0070  
                 ?i1_I2C_Master_Stop 0070                     ___aldiv@dividend 002A  
           __size_of_I2C_Master_Wait 0008            __size_of_Uart_RX_Callback 0009  
           __size_of_I2C_Master_Stop 0003                      _TempSystem_Init 00BF  
        ??_Interrupt_TimerCallbackFn 007E             I2c_WriteIB@DataBufferPtr 0026  
                    _Uart_PinsConfig 00BF                            i1_I2C_ACK 0CF7  
                            clrloop0 096E                 __size_of_Adc_Handler 0001  
             __size_of_Dio_WritePort 000F                 end_of_initialization 004D  
                          Eep_Read@i 002B                  ??i1_I2C_Master_Wait 0070  
                  ??i1_Dio_WritePort 0076                  ??i1_I2C_Master_Stop 0070  
                     _I2c_ConfigPins 00CB               __end_of_Disp_DisplayNb 056E  
         ??_I2C_Master_RepeatedStart 0026                            Os2_Init@i 0028  
                         fp_i1_task1 0078                           fp_i1_task2 0075  
                         fp_i1_task3 0072                           fp_i1_task4 006F  
                         fp_i1_task5 006C                    Eep_Init@ConfigPtr 0035  
          __size_of_I2C_Master_Start 0003                      ___lldiv@divisor 0026  
                    ___lldiv@counter 0032                    i1_Dio_ReadChannel 06D3  
             ?_I2c_WriteSlaveAddress 0070                   i1___lbdiv@quotient 0073  
          __size_of_Uart_TX_Callback 0001               ?i1_Disp_GetDislayValue 0070  
                   ___aldiv@quotient 0030                   ?i1_Dio_ReadChannel 0070  
            _Gpt_ThisConfiguration_1 0063                  Dio_WritePort@PortId 002C  
           __size_of_Dio_ReadChannel 002E            __end_ofi1_I2C_Master_Wait 0CF7  
          __end_ofi1_I2C_Master_Stop 0D0F                       Port_InitPort@i 0033  
          __size_ofi1_Disp_DisplayNb 00CF           i1I2c_WriteIB@DataBufferPtr 0070  
                ??i1_Dio_ReadChannel 0070                     i1Eep_Read@Length 0072  
            __size_of_Adc_CallbackFn 0032                    fp__Adc_CallbackFn 0087  
                   _Interrupt_Enable 076F                     ___lbmod@dividend 0028  
                      ??_I2c_WriteIB 0027                            i1___lbdiv 0F7B  
                          i1___lbmod 0F96             i1Dio_ReadChannel@Pin_Ptr 0072  
                          i1___lwdiv 0FB2                            i1___lwmod 0FDC  
                         ?i1_I2C_ACK 0070                     ?_TempSensor_Init 0070  
                    ?_Disp_DisplayNb 0038                          ___lbmod@rem 002A  
        ?i1_I2C_Master_RepeatedStart 0070                    Disp_DisplayNb@var 003B  
                  __size_of_I2c_Init 0047            __end_ofi1_Dio_ReadChannel 06FF  
          _Interrupt_TimerCallbackFn 097E                        _Dio_WritePort 056E  
                     __end_of___bmul 099A                            _Disp_Init 042E  
                          _Os2_start 0B1F                       __end_of___wmul 09D7  
         __end_ofi1_I2C_Master_Start 0CFF              __end_of_TempSystem_Init 00D4  
                  i1___lwmod@divisor 0077             TempSensor_Init@ConfigPtr 0037  
                  i1___lwmod@counter 007B                    __size_of_Adc_Init 0070  
              __size_ofi1_I2c_ReadIB 0010                  start_initialization 0015  
                        __end_of_ISR 0ADE                            _Init_Task 008D  
                         ?i1___lbdiv 0070                            _Tcb_Array 0110  
                         ?i1___lbmod 0070                           ?i1___lwdiv 0070  
                  __size_of_Eep_Init 0013                    __size_of_Eep_Read 003C  
                         ?i1___lwmod 0077               __size_of_Os2_scheduler 003F  
                  __size_of_Os2_Init 0021                    ??i1_Os2_scheduler 007E  
                     fp__TickHandler 007E                  __end_of_I2c_WriteIB 0DA0  
                  ??_I2C_Master_Wait 0026                    ??_I2C_Master_Stop 0026  
                          _TickCount 005C                    __size_of_Gpt_Init 015E  
                          _TaskTable 0046                   _Port_ButtonsConfig 01A2  
              Port_Init@Port_Dir_Ptr 0030                             ??___bmul 0027  
                     ?_Dio_WritePort 002B                             ??___wmul 002A  
                         init_fetch0 099A                            _Port_Init 039A  
                         ?_Disp_Init 0070                         i1_I2c_ReadIB 0C94  
                         ?_Os2_start 0070                          __pdataBANK0 0067  
                        __pdataBANK1 00A0                          __pdataBANK3 0190  
                           ?_I2C_ACK 0070           __size_ofi1_I2C_Master_Wait 0008  
         __size_ofi1_I2C_Master_Stop 0003                    __size_of_Pwm_Init 00AC  
                       ?_TickHandler 0070                   __end_of__i1fptable 008D  
                  ??_Dio_ReadChannel 0026                            ___latbits 0002  
                      __pcstackBANK0 0020                        __pcstackBANK1 00E8  
                   _Uart_RX_Callback 0975                           ?_Init_Task 0070  
                  __size_of__fptable 0015               __size_of_Port_InitPort 0021  
                        ??i1_I2C_ACK 0070            I2c_WriteSlaveAddress@data 0026  
       __size_of_Disp_GetDislayValue 004E                             ?i1_task1 0070  
                           ?i1_task2 0070                             ?i1_task3 0070  
                           ?i1_task4 0070                             ?i1_task5 0070  
                   Dio_ReadChannel@x 0027           __size_ofi1_Dio_ReadChannel 002C  
                   _I2C_Master_Start 0D90                     ___lwdiv@dividend 002E  
                 I2c_Init@Config_Ptr 0034                     _Uart_TX_Callback 07F9  
                          __pfunctab 0051                             ?___aldiv 0026  
                      _Os2_scheduler 0B25                             ?___awdiv 0070  
                           ?___lbdiv 0026                             ?___lbmod 0026  
                           ?___lldiv 0026                           ?_Port_Init 0029  
                           ?___lwdiv 002C                             ?___lwmod 0033  
                 i1___lbmod@dividend 0072                     i1_Disp_DisplayNb 0E4F  
                          __pstrings 07AA                        Pwm_Init@F1289 00E0  
                    Os2_AddThreads@i 0028                       _Adc_CallbackFn 0C08  
                   ?_TempSystem_Init 0070                      i1_Dio_WritePort 0F1E  
                        ??i1___lbdiv 0071                          _I2c_WriteIB 0D93  
                        ??i1___lbmod 0071              __size_of_Os2_AddThreads 0023  
                   ___lwdiv@quotient 0031                          ??i1___lwdiv 0074  
                        ??i1___lwmod 007B             ?i1_I2c_WriteSlaveAddress 0070  
                     __size_of_task1 0018                       __size_of_task2 0015  
                     __size_of_task3 0025                       __size_of_task4 0030  
                     __size_of_task5 0011                             _I2c_Init 0353  
                  i1___lbdiv@divisor 0070                      ___aldiv@divisor 0026  
                  i1___lbdiv@counter 0072                    interrupt_function 0004  
                    ___aldiv@counter 002E                       ___wmul@product 002A  
            ??_I2c_WriteSlaveAddress 0026                            clear_ram0 096D  
            ??i1_Disp_GetDislayValue 0070                    Port_Init@Port_Ptr 002E  
           __end_of_Interrupt_Enable 07AA                      ??_Dio_WritePort 002C  
                Pwm_Init@Gpt_Config2 003E                        _Port_InitPort 09F8  
                     ?_Os2_scheduler 0070          i1I2c_WriteSlaveAddress@data 0070  
                        ??_Disp_Init 0035                          ??_Os2_start 0046  
             __end_of_Adc_CallbackFn 0C3A                             _Adc_Init 06FF  
                   __size_of_I2C_ACK 0005                          __stringbase 07AF  
                  ___wmul@multiplier 0026   __size_of_Interrupt_TimerCallbackFn 000E  
            i1Dio_WritePort@Port_Ptr 0077                 i1Disp_DisplayNb@Mode 007C  
                           _Eep_Init 09AB                             _Eep_Read 0D34  
                      ??_Adc_Handler 0071                     ??_Disp_DisplayNb 0039  
                           _Os2_Init 09D7                          ??_Init_Task 0046  
                           _EndTimes 01D1                __end_ofi1_I2c_WriteIB 0D0C  
                           i1fptable 0066                             i1fptotal 0014  
            i1Dio_ReadChannel@output 0074                             _Gpt_Init 0180  
                   __size_ofi1_task1 001C                     __size_ofi1_task2 0015  
                   __size_ofi1_task3 002B                     __size_ofi1_task4 003C  
                   __size_ofi1_task5 0011               Dio_ReadChannel@Pin_Ptr 0028  
   Interrupt_Enable@Interrupt_Source 0027             Interrupt_Enable@callback 0026  
                     _States_EndTime 00D7                       ?_Port_InitPort 0070  
                           _Pwm_Init 00D4              __end_ofi1_Dio_WritePort 0F2D  
                        ??_Port_Init 002B                     __size_of___aldiv 0075  
  __size_of_I2C_Master_RepeatedStart 0003                     __size_of___awdiv 0045  
                   __size_of___lbdiv 001B                     __size_of___lbmod 001C  
          ?_I2C_Master_RepeatedStart 0070                      ?_Adc_CallbackFn 0070  
                   __size_of___lldiv 0048                     __size_of___lwdiv 002A  
                   __size_of___lwmod 0024                   __end_of__stringtab 07B0  
                    i1_Os2_scheduler 0AE0              i1Eep_Read@DataBufferPtr 0071  
                           __fptable 0051      __end_ofi1_I2c_WriteSlaveAddress 0CEF  
                        i1Eep_Read@i 0075                    I2c_ReadIB@Channel 0070  
                    _I2C_Master_Wait 0D83                      _I2C_Master_Stop 0DA0  
               __size_of_TickHandler 0002                      ___lwdiv@divisor 002C  
                    ___lwdiv@counter 0030                   i1Dio_ReadChannel@x 0071  
                           __ptext10 0610                             __ptext11 05F5  
                           __ptext20 0D70                             __ptext12 057D  
                           __ptext21 0D8B                             __ptext13 056E  
                           __ptext30 0180                             __ptext22 0D83  
                           __ptext14 0D34                             __ptext31 02DE  
                           __ptext23 0E10                             __ptext15 0D73  
                           __ptext40 039A                             __ptext32 0484  
                           __ptext24 008D                             __ptext16 0D93  
                           __ptext41 09D7                             __ptext33 06FF  
                           __ptext25 00BF                             __ptext17 0D24  
                           __ptext50 0697                             __ptext42 0A19  
                           __ptext34 076F                             __ptext26 00D4  
                           __ptext18 0DA0                             __ptext51 066C  
                           __ptext43 0A9E                             __ptext35 09AB  
                           __ptext27 09BE                             __ptext19 0D90  
                           __ptext60 0F2D                             __ptext52 0C7F  
                           __ptext44 0975                             __ptext36 0353  
                           __ptext28 05CB                             __ptext61 0F1E  
                           __ptext53 0650                             __ptext45 0C08  
                           __ptext37 0B64                             __ptext29 098C  
                           __ptext70 0CEF                             __ptext62 0CA4  
                           __ptext54 0E3E                             __ptext46 097E  
                           __ptext38 042E                             __ptext71 06D3  
                           __ptext63 0CE0                             __ptext55 0E4F  
                           __ptext47 07F9                             __ptext39 09F8  
                           __ptext72 0C3A                             __ptext64 0CFF  
                           __ptext56 0FDC                             __ptext48 0ADE  
                           __ptext73 07FA                             __ptext65 0C94  
                           __ptext57 0FB2                             __ptext49 0AE0  
                           __ptext66 0D0C                             __ptext58 0F96  
                           __ptext67 0CFC                             __ptext59 0F7B  
                           __ptext68 0CDD                             __ptext69 0CF7  
                       _Pwm_Channels 00C5                           _I2c_Config 01B1  
                  i1___lbmod@divisor 0070                   i1_I2C_Master_Start 0CFC  
                         _I2c_ReadIB 0D24                    i1___lbmod@counter 0073  
                fp__Uart_RX_Callback 008A                   i1___lwdiv@dividend 0072  
                __end_of_Adc_Handler 07FB                        __size_of_main 002B  
                ?i1_I2C_Master_Start 0070             __size_of_TempSensor_Init 0004  
                    ??_Os2_scheduler 003C                       _Adc_PortConfig 01C8  
           __end_of_Uart_RX_Callback 097E                      _Dio_ReadChannel 0E10  
                  Gpt_Init@ConfigPtr 0036                             fp__task1 0063  
                           fp__task2 0060                             fp__task3 005D  
                           fp__task4 005A                             fp__task5 0057  
                _Disp_GetDislayValue 057D                  fp__Uart_TX_Callback 0081  
                i1Disp_DisplayNb@var 007D                   i1___lwdiv@quotient 0074  
               ??i1_I2C_Master_Start 0070             __end_of_I2C_Master_Start 0D93  
                     _Os2_AddThreads 0A19             __end_of_Uart_TX_Callback 07FA  
                           init_ram0 099E                Dio_WritePort@Port_Ptr 002D  
               ?_Disp_GetDislayValue 0070                             intlevel1 0051  
              Dio_ReadChannel@output 002A             __end_ofi1_Disp_DisplayNb 0F1E  
                   ___lwmod@dividend 0035                     ___lldiv@dividend 002A  
            I2c_ReadIB@DataBufferPtr 0026                      ??_Port_InitPort 0032  
                          stringcode 07AA              __end_ofi1_Os2_scheduler 0B1F  
              i1Dio_WritePort@PortId 0076                     ?i1_Dio_WritePort 0075  
              _Adc_ThisConfiguration 0060              __end_of_I2C_Master_Wait 0D8B  
            __end_of_I2C_Master_Stop 0DA3                  Os2_AddThreads@Tasks 0027  
          i1I2c_ReadIB@DataBufferPtr 0070         fp__Interrupt_TimerCallbackFn 0084  
                         i1_Eep_Read 0CA4                _Pwm_ThisConfiguration 0061  
                         Disp_Init@i 0037               __end_of_Os2_AddThreads 0A3C  
                   ___lldiv@quotient 002E                      ___lwmod@divisor 0033  
                    ___lwmod@counter 0037                Eep_Read@DataBufferPtr 0027  
                           stringdir 07AA                             stringtab 07AA  
                       ___aldiv@sign 002F                          _Adc_Handler 07FA  
               i1Dio_WritePort@Level 0075                         ?_I2c_WriteIB 0026  
              ??_Disp_GetDislayValue 0026                          ?_I2c_ReadIB 0026  
            __end_of_Dio_ReadChannel 0E3E                           _Adc_Result 005F  
     __size_of_I2c_WriteSlaveAddress 0010        __end_of_I2c_WriteSlaveAddress 0D83  
                  ?_Interrupt_Enable 0026       __size_ofi1_Disp_GetDislayValue 004E  
      __end_ofi1_Disp_GetDislayValue 0F7B                         Adc_Handler@x 0070  
   __size_ofi1_I2c_WriteSlaveAddress 000F  
